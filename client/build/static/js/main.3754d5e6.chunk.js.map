{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/appReducer.js","store/reducers/adminReducer.js","cookies.js","store/reducers/userReducer.js","store/reducers/doctorReducer.js","store/reducers/patientReducer.js","store/reducers/rootReducer.js","redux.js","hoc/authentication.js","utils/constant.js","utils/CommonUtils.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js","utils/utilArray.js","store/actions/appActions.js","storage.js","axios.js","axiosJWT.js","services/userServices.js","services/patientServices.js","store/actions/userActions.js","store/actions/adminActions.js","services/doctorServices.js","store/actions/doctorActions.js","store/actions/patientActions.js","components/Loading.js","containers/Auth/Login.js","utils/validate.js","containers/System/Admin/TableManageUser.js","firebase/configFirebase.js","firebase/uploadFile.js","containers/System/ModalUser.js","containers/System/ModalConfirm.js","components/SearchInput.js","components/FooterPaging.js","components/SelectStatusId.js","containers/System/Admin/UserRedux.js","components/CKeditor/CKeditor.js","containers/System/Admin/ManageDoctor.js","containers/System/Specialty/ModalSpecialty.js","containers/System/Specialty/Specialty.js","containers/System/Clinic/ModalClinic.js","containers/System/Clinic/ManageClinic.js","components/Notify.js","components/Navigator.js","containers/Header/menuApp.js","assets/images/user.jpg","assets/images/tao-hinh-ham-mat.jpg","assets/images/clinic.png","assets/images/doctor.jpg","assets/images/handbook.png","containers/Header/Header.js","containers/System/SystemWelcome/SystemWelcome.js","routes/System.js","containers/System/Doctor/ManageSchedule.js","containers/System/Doctor/RemedyModal.js","containers/System/Doctor/ManageAppointment.js","containers/System/Handbook/ManageHandbook.js","containers/System/Handbook/ModalHandbook.js","components/ConfirmModal.js","containers/System/Handbook/ListHandbook.js","containers/System/News/ManageNews.js","containers/System/News/ModalNews.js","containers/System/News/ListNews.js","routes/Doctor.js","components/CustomScrollbars.js","containers/HomePage/Sections/BoxBackground.js","components/CustomArrow.js","containers/HomePage/Sections/Section.js","containers/HomePage/Sections/News.js","containers/HomePage/Sections/About.js","containers/HomePage/Sections/TopDoctor.js","containers/Patient/Specialty/ListSpecialty.js","containers/Patient/Clinic/ListClinic.js","containers/Patient/Doctor/ListDoctor.js","containers/Patient/Handbook/ListHandbook.js","containers/HomePage/HomePage.js","containers/Patient/Doctor/ExtraInforDoctor.js","containers/Patient/Doctor/DoctorSchedule.js","containers/Patient/Doctor/BookingModal.js","containers/Patient/SocialPlugin/LikeAndShare.js","containers/Patient/Doctor/IntroDoctor.js","containers/Patient/SocialPlugin/Comment.js","containers/Patient/Doctor/DetailDoctor.js","containers/HomePage/FooterContent.js","containers/Patient/Specialty/DetailSpecialty.js","containers/Patient/Clinic/DetailClinic.js","containers/Patient/Handbook/DetailHandbook.js","containers/Patient/News/DetailNews.js","containers/Patient/DetailUser/DetailUser.js","containers/Patient/VerifyBooking.js","containers/HomePage/Sections/Menu/MenuItem.js","containers/HomePage/Sections/Menu/MenuHeader.js","containers/HomePage/Sections/Menu/Menu.js","dataLocal/dataMenu.js","containers/HomePage/HomeHeader/HomeHeader.js","containers/HomePage/Sections/Footer.js","hoc/withLayoutHome.js","containers/App.js","hoc/IntlProviderWrapper.js","index.js"],"names":["actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","CHANGE_LANGUAGE","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","PROCESS_LOGOUT_SUCCESS","PROCESS_LOGOUT_FAIL","SET_PARAMS_SEARCH","FETCH_KEY_FORM_SUCCESS","FETCH_KEY_FORM_FAIL","CREATE_USER_REDUX_SUCCESS","CREATE_USER_REDUX_FAIL","FETCH_ALL_USER_SUCCESS","FETCH_ALL_USER_FAIL","DELETE_USER_SUCCESS","DELETE_USER_FAIL","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","FETCH_TOP_DOCTOR_SUCCESS","FETCH_TOP_DOCTOR_FAIL","FETCH_ALL_DOCTOR_SUCCESS","FETCH_ALL_DOCTOR_FAIL","SAVE_DETAIL_DOCTOR_SUCCESS","SAVE_DETAIL_DOCTOR_FAIL","GET_DETAIL_DOCTOR_SUCCESS","GET_DETAIL_DOCTOR_FAIL","FETCH_ALLCODE_SCHEDULE_SUCCESS","FETCH_ALLCODE_SCHEDULE_FAIL","SAVE_SCHEDULE_DOCTOR_SUCCESS","SAVE_SCHEDULE_DOCTOR_FAIL","GET_SCHEDULE_DOCTOR_SUCCESS","GET_SCHEDULE_DOCTOR_FAIL","FETCH_RELATE_TO_DOCTOR_INFOR_SUCCESS","FETCH_RELATE_TO_DOCTOR_INFOR_FAIL","POST_BOOKING_APPOINTMENT_SUCCESS","POST_BOOKING_APPOINTMENT_FAIL","POST_SPECIALTY_SUCCESS","POST_SPECIALTY_FAIL","GET_ALL_SPECIALTY_SUCCESS","GET_ALL_SPECIALTY_FAIL","GET_ALL_CLINIC_SUCCESS","GET_ALL_CLINIC_FAIL","GET_ALL_HANDBOOK_SUCCESS","GET_ALL_HANDBOOK_FAIL","GET_APPOINTMENT_DOCTOR_SUCCESS","GET_APPOINTMENT_DOCTOR_FAIL","CHANGE_PROVINCE_SUCCESS","CHANGE_PROVINCE_FAIL","CHANGE_STATUS_SUCCESS","CHANGE_STATUS_FAIL","GET_QUEUE_NEW_SUCCESS","GET_QUEUE_NEW_FAIL","GET_DETAIL_USER_SUCCESS","GET_DETAIL_USER_FAIL","GET_QUEUE_HANDBOOK_SUCCESS","GET_QUEUE_HANDBOOK_FAIL","initialState","started","language","systemMenuPath","contentOfConfirmModal","isOpen","messageId","handleFunc","dataFunc","appReducer","state","action","type","keyForm","allUser","totalPage","count","adminReducer","data","rows","cookies","Cookies","classCookies","accessToken","get","refreshToken","name","token","set","path","remove","dataToken","jwt_decode","isLoggedIn","userInfo","queueNews","queueHandbook","detailUser","roleId","userReducer","userInfor","topDoctors","allDoctor","detailDoctor","schedule","scheduleDoctorCurrent","DoctorRelatedInfor","listAppointment","statusId","doctorReducer","listDataSpecialty","listDataClinic","listDataHandbook","patientReducer","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","key","whitelist","appPersistConfig","history","createBrowserHistory","basename","process","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","user","persistReducer","app","admin","doctor","patient","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","dispatch","persistStore","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","LANGUAGES","CRUD_ACTIONS","TYPE_USER","PATH_FIREBASE","CommonUtils","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","KeyCodeUtils","e","UP","DOWN","TAB","ENTER","E","ESCAPE","flattenMessages","nestedMessages","prefix","keys","reduce","messages","value","prefixedKey","assign","messages_vi","messages_en","LanguageUtils","lang","convertKeyToValue","itemId","arrData","length","item","keyMap","valueVi","changeLanguageApp","classStorage","localStorage","getItem","setItem","removeItem","instance","axios","create","baseURL","withCredentials","interceptors","response","use","axiosjwt","request","a","config","url","indexOf","now","Date","getTime","decodedToken","parseInt","exp","processLogout","headers","handleLoginApi","userName","password","post","email","console","log","registerServices","filterAndPagingUser","paramsSearch","page","limit","keyword","axiosJWT","createUserServices","dataUser","deleteUserServices","id","delete","editUserServices","put","getAllCodeServices","postSpecialtyServices","postDetailClinicServices","processLogoutServices","postHandbookServices","confirmHandbookServices","deleteHandbookServices","checkQueueHandbookServices","postNewsServices","confirmNewsServices","deleteNewsServices","checkQueueNewsServices","filterAndPagingClinic","filterAndPagingSpecialty","deleteClinicByIdServices","deleteSpecialtyByIdServices","postBookingAppointmentServices","verifyBookingAppointmentServices","getAllSpecialtyServices","getSpecialtyByIdServices","location","getAllClinicServices","isGetImageClinic","getDetailClinicByIdServices","getHandbookServices","getNewsServices","getDetailUserServices","searchAllServices","searchDoctorServices","res","errorCode","fetchKeyForm","getState","genderRes","PositionRes","RoleRes","genders","positions","roles","checkRes","fetchKeyFormSuccess","fetchKeyFormFail","createNewUserReduxSuccess","createNewUserReduxFail","filterAndPagingUserRedux","filterAndPagingUserReduxSuccess","filterAndPagingUserReduxFail","editUserRedux","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","checkQueueNewsRedux","checkQueueHandbookRedux","queueHandbooks","getTopDoctorServices","getAllDoctorService","saveDetailDoctorServices","getDetailDoctorService","saveScheduleDoctorServices","getScheduleDoctorByDateService","doctorId","date","getAppointmentDoctorService","confirmRemedyService","fetchAllDoctor","getDetailDoctor","fetchAllcodeSchedule","getAppointmentDoctor","initDate","changeStatusId","getAllSpecialty","specialtyData","getAllClinicRedux","isGetImage","clinicData","getHandbookRedux","handbookData","Loading","props","this","className","Component","connect","Login","handlerKeyDown","event","which","keyCode","handleLogin","handleChange","setState","target","message","isShowLoading","dataResponse","isShowMessage","userLoginSuccess","push","handleRegister","confirmPassword","firstName","lastName","phoneNumber","test","match","handleClickSubmit","isRegister","handleClickSignUp","placeholder","onChange","onClick","withRouter","navigate","actions","TableManageUser","handleClickDestroyUser","userId","toggleModelConfirm","users","prevProps","allUserRedux","Fragment","map","index","gender","address","selector","handleClickEditUser","fetchAllUSerRedux","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getStorage","uploadFileToFirebase","downloadURL","storageRef","ref","uploadBytesResumable","getDownloadURL","uploadMultiFileToFirebase","arrFiles","listFile","all","ModalUser","toggle","toggleModel","imageURL","handleSaveUser","checkValidate","currentAction","fileURL","currentIdUserEdit","refreshForm","handleRefreshTable","check","inputs","field","text","i","warning","languageRedux","isOpenModel","size","centered","ModalHeader","ModalBody","htmlFor","handleOnchangeInput","disabled","valueEn","role","accept","hidden","handleOnchangeImage","isShowBoxImage","style","backgroundImage","previewImageUrl","handleShowPreviewAvatar","ModalFooter","Button","color","fetchKeyFromRedux","createNewUser","ModalConfirm","handleChangeInput","handleDestroy","emailPatient","title","reason","currentPatient","currentUserId","isLoading","patientId","timeType","namePatient","exactTime","timeAppointment","dataAccDoctor","isDestroyAppointment","getAppointmentDoctorRedux","statusIdRedux","handleDeleteItem","_","isEmpty","dataAcc","isShowModalConfirm","listAppointmentRedux","SearchInput","handleOnChangeInput","input","delay","clearTimeout","timer","setTimeout","handleSearch","trim","FooterPaging","handleArrPaging","TotalPage","PageIndex","TotalRecord","pagesToShow","pages","titleTotalRecord","handleChangePage","classPage","SelectStatusId","listSelect","checked","UserRedux","reRenderFilterAndPaging","keywordSearchUser","roleIdSelected","handleToggleModel","files","getBase64","base64","objectUrl","URL","createObjectURL","avatar","handleShowModal","isRoomImage","copyState","handleSearchUser","currentKeyword","numberPage","deleteUser","isHideLoading","appointment","totalPageRedux","countRedux","paramsSearchRedux","setCurrentKeywordRedux","CKeditor","dataHtml","handleEditorChange","editor","ClassicEditor","onReady","getData","ManageDoctor","buildInputSelectName","object","labelVi","labelEn","label","buildInputSelect","nameClinic","findValueDefault","find","handleChangeDoctor","selectedDoctor","getDetailDoctorRedux","detailDoctorRedux","Markdown","doctor_infor","Doctor_Infor","contentHtml","contentHTML","contentMarkdown","description","addressClinic","note","selectedPrice","priceId","listPrice","selectedPayment","paymentId","listPayment","selectedProvince","provinceId","listProvince","selectedSpecialty","specialtyId","listSpecialty","selectedClinic","listClinics","handleChangeSelect","select","nameKeyState","handleChangeTextArea","handleClickSave","window","scrollTo","onChangeInput","fetchAllDoctorRedux","fetchRelateToDoctorInforRedux","allDoctorRedux","listDoctor","allRelatedToDoctorInfor","DoctorRelatedInforRedux","options","forhtml","resListPrice","resListPayment","resListProvince","resListClinics","resListSpecialty","Specialty","image","descriptionMarkdown","specialty","descriptionHtml","reloadData","isChange","handleFilterAndPaging","pageIndex","currentSpecialtyId","ModalSpecialty","scope","dateCreate","moment","unix","createdAt","local","format","src","atl","ModalClinic","html","setStateFile","imageClinic","imageLogo","images","handleSave","handleShowLoading","previewImageClinicUrl","previewImageLogoUrl","isShowBoxImageClinic","isShowBoxImageLogo","handleHideLoading","ManageClinic","listClinic","currentClinicId","Notify","re_render","queueNum","MenuGroup","children","Menu","active","link","hasSubMenu","onLinkClick","data-toggle","aria-expanded","to","SubMenu","getItemClass","pathname","MenuGroupWithRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","menus","outerLoop","group","j","menu","prevState","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","React","ComponentWithRef","withRef","adminMenu","doctorMenu","Header","handleChangeLanguage","languageInput","changeLanguageRedux","menuUser","userImage","alt","innerText","SystemWelcome","System","exact","component","ManageSchedule","listSchedule","isSelectedAll","isSelected","getScheduleDoctorByDateRedux","scheduleDoctorCurrentRedux","handleSetDate","setHours","handleClickRange","rangeTime","handleClickSaveSchedule","arrResult","forEach","saveScheduleDoctorRedux","arrSchedule","fetchAllcodeScheduleRedux","arrScheduleSelected","includes","scheduleRedux","dateFormat","selected","minDate","range","RemedyModal","capitalizeFirstLetter","string","charAt","toUpperCase","slice","handleSendConfirm","isShowModalRemedy","mainSrc","onCloseRequest","ManageAppointment","currentSelectedDate","handleClickConfirm","isRemind","changeStatusIdRedux","handleClickCancel","doctorInfo","locale","YearOfBirth","genderDT","userInfoRedux","ManageHandbook","handlePickDoctor","adviser","join","authors","isMulti","defaultValue","ModalHandbook","handleConfirm","handleGetHandbook","handbookId","isShowModalHandbook","censor","updatedAt","dangerouslySetInnerHTML","__html","handleClickDelete","ConfirmModal","acceptBtnRef","current","click","onAcceptBtnClick","onClose","setContentOfConfirmModal","createRef","document","addEventListener","isShowConfirmModal","content","toggleConfirmModal","deleteFunc","ListHandbook","handleClickDetail","listHandbook","acceptDeleteHandbook","senderData","ManageNews","topic","focus","htmlFocus","split","ModalNews","handleGetNews","isShowModalNews","ListNews","listNews","acceptDeleteNews","senderDataNews","Doctor","isAuth","CustomScrollbars","getScrollLeft","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","targetTop","quickScroll","scrollbars","originalTop","iteration","scroll","scrollTop","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","disableVerticalScroll","disableHorizontalScroll","otherProps","autoHide","autoHideTimeout","hideTracksWhenNotNeeded","BoxBackground","onChangInput","inputSearch","listResultSearch","arr","results","clinics","doctors","specialtys","handleClearInputSearch","li","NextArrow","display","PrevArrow","Section","handleClickSpecialty","settings","dots","infinite","speed","slidesToShow","slideShow","slidesToScroll","nextArrow","prevArrow","typeSec","background","button","modal","News","handleClickNews","autoplay","arrows","autoplaySpeed","About","width","height","frameborder","allow","allowfullscreen","TopDoctor","handleClickDetailDoctor","fetchTopDoctorRedux","topDoctorsRedux","listDataSpecialtyRedux","nameSpecialty","nameVi","positionData","nameEn","idSpecialty","filter","listDataClinicRedux","ListSpecialty","modalSpecialty","ListClinic","modalClinic","ListDoctor","modalDoctor","modalHandbook","listDataHandbookRedux","HomePage","modalHealth","getAllSpecialtyRedux","ExtraInforDoctor","arrDay","price","typePayment","province","dataCurrentDoctor","doctorInfor","priceData","paymentData","provinceData","isShowPrice","DoctorSchedule","setOptionsDay","allDay","firstText","add","timestamp","valueOf","handleShowPrice","typeStyle","day","timeTypeData","BookingModal","handleOnchangeInputRadio","bookFor","handleSubmitBooking","nameScheduler","phoneNumberScheduler","IDNumber","genderPatient","phoneNumberPatient","birthPatient","addressPatient","nameDoctor","buildNameAndProvinceByLanguage","provinceDoctor","listGender","rangeTimeData","timeSchedule","isShowModalBooking","IntroDoctor","initFacebookSDK","FB","XFBML","parse","fbAsyncInit","init","cookie","xfbml","version","d","s","js","fjs","getElementsByTagName","getElementById","createElement","parentNode","insertBefore","dataHref","data-href","data-width","data-layout","data-action","data-size","data-share","LikeAndShare","Comment","numPort","data-numposts","DetailDoctor","currentRangeTime","params","doctorsRedux","selectedProvinceIdRedux","currentURL","textDecoration","FooterContent","handelClickMore","isShow","DetailSpecialty","unshift","responseSpecialty","selectedProvinceId","handleClickMore","moreDetail","introSpecialty","listProvinceResponse","isComponentChild","clinicId","DetailHandbook","positionSender","nameSender","advisers","adviserData","DetailNews","newsData","newsId","DetailUser","getDetailUserRedux","detailUserRedux","roleData","genderData","VerifyBooking","statusVerify","search","urlParams","URLSearchParams","uuid","href","MenuItem","itemCurrent","title_en","handleClickItem","icon","title_vi","onBack","iconBack","codeLanguage","handleClickBack","items","interactive","placement","render","MenuHeader","dataMenuUser","dataHomeHeader","sub","HomeHeader","executeScroll","myRef","scrollIntoView","handleClick","Footer","withLayoutHome","App","DetailClinic","newestOnTop","rtl","pauseOnFocusLoss","getFlattenedMessages","IntlProviderWrapper","defaultLocale","ReactDOM","store"],"mappings":"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","file":"static/js/main.3754d5e6.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\n    //app\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\n\n    //language\n    CHANGE_LANGUAGE: 'CHANGE_LANGUAGE',\n\n    //user\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\n    USER_LOGIN_FAIL: 'ADMIN_LOGIN_FAIL',\n    PROCESS_LOGOUT_SUCCESS: 'PROCESS_LOGOUT_SUCCESS',\n    PROCESS_LOGOUT_FAIL: 'PROCESS_LOGOUT_FAIL',\n\n    SET_PARAMS_SEARCH: 'SET_PARAMS_SEARCH',\n\n    // admin:\n\n    FETCH_KEY_FORM_SUCCESS: 'FETCH_KEY_FORM_SUCCESS',\n    FETCH_KEY_FORM_FAIL: 'FETCH_KEY_FORM_FAIL',\n\n    CREATE_USER_REDUX_SUCCESS: 'CREATE_USER_REDUX_SUCCESS',\n    CREATE_USER_REDUX_FAIL: 'CREATE_USER_REDUX_FAIL',\n\n    FETCH_ALL_USER_SUCCESS: 'FETCH_ALL_USER_SUCCESS',\n    FETCH_ALL_USER_FAIL: 'FETCH_ALL_USER_FAIL',\n\n    DELETE_USER_SUCCESS: 'DELETE_USER_SUCCESS',\n    DELETE_USER_FAIL: 'DELETE_USER_FAIL',\n\n    UPDATE_USER_SUCCESS: 'UPDATE_USER_SUCCESS',\n    UPDATE_USER_FAIL: 'UPDATE_USER_FAIL',\n\n    FETCH_TOP_DOCTOR_SUCCESS: 'FETCH_TOP_DOCTOR_SUCCESS',\n    FETCH_TOP_DOCTOR_FAIL: 'FETCH_TOP_DOCTOR_FAIL',\n\n    FETCH_ALL_DOCTOR_SUCCESS: 'FETCH_ALL_DOCTOR_SUCCESS',\n    FETCH_ALL_DOCTOR_FAIL: 'FETCH_ALL_DOCTOR_FAIL',\n\n    SAVE_DETAIL_DOCTOR_SUCCESS: 'SAVE_DETAIL_DOCTOR_SUCCESS',\n    SAVE_DETAIL_DOCTOR_FAIL: 'SAVE_DETAIL_DOCTOR_FAIL',\n\n    GET_DETAIL_DOCTOR_SUCCESS: 'GET_DETAIL_DOCTOR_SUCCESS',\n    GET_DETAIL_DOCTOR_FAIL: 'GET_DETAIL_DOCTOR_FAIL',\n\n    FETCH_ALLCODE_SCHEDULE_SUCCESS: 'FETCH_ALLCODE_SCHEDULE_SUCCESS',\n    FETCH_ALLCODE_SCHEDULE_FAIL: 'FETCH_ALLCODE_SCHEDULE_FAIL',\n\n    SAVE_SCHEDULE_DOCTOR_SUCCESS: 'SAVE_SCHEDULE_DOCTOR_SUCCESS',\n    SAVE_SCHEDULE_DOCTOR_FAIL: 'SAVE_SCHEDULE_DOCTOR_FAIL',\n\n    GET_SCHEDULE_DOCTOR_SUCCESS: 'GET_SCHEDULE_DOCTOR_SUCCESS',\n    GET_SCHEDULE_DOCTOR_FAIL: 'GET_SCHEDULE_DOCTOR_FAIL',\n\n    FETCH_RELATE_TO_DOCTOR_INFOR_SUCCESS: 'FETCH_RELATE_TO_DOCTOR_INFOR_SUCCESS',\n    FETCH_RELATE_TO_DOCTOR_INFOR_FAIL: 'FETCH_RELATE_TO_DOCTOR_INFOR_FAIL',\n\n    POST_BOOKING_APPOINTMENT_SUCCESS: 'POST_BOOKING_APPOINTMENT_SUCCESS',\n    POST_BOOKING_APPOINTMENT_FAIL: 'POST_BOOKING_APPOINTMENT_FAIL',\n\n    POST_SPECIALTY_SUCCESS: 'POST_SPECIALTY_SUCCESS',\n    POST_SPECIALTY_FAIL: 'POST_SPECIALTY_FAIL',\n\n    GET_ALL_SPECIALTY_SUCCESS: 'GET_ALL_SPECIALTY_SUCCESS',\n    GET_ALL_SPECIALTY_FAIL: 'GET_ALL_SPECIALTY_FAIL',\n\n    GET_ALL_CLINIC_SUCCESS: 'GET_ALL_CLINIC_SUCCESS',\n    GET_ALL_CLINIC_FAIL: 'GET_ALL_CLINIC_FAIL',\n\n    GET_ALL_HANDBOOK_SUCCESS: 'GET_ALL_HANDBOOK_SUCCESS',\n    GET_ALL_HANDBOOK_FAIL: 'GET_ALL_HANDBOOK_FAIL',\n\n    GET_APPOINTMENT_DOCTOR_SUCCESS: 'GET_APPOINTMENT_DOCTOR_SUCCESS',\n    GET_APPOINTMENT_DOCTOR_FAIL: 'GET_APPOINTMENT_DOCTOR_FAIL',\n\n    CHANGE_PROVINCE_SUCCESS: 'CHANGE_PROVINCE_SUCCESS',\n    CHANGE_PROVINCE_FAIL: 'CHANGE_PROVINCE_FAIL',\n\n    CHANGE_STATUS_SUCCESS: 'CHANGE_STATUS_SUCCESS',\n    CHANGE_STATUS_FAIL: 'CHANGE_STATUS_FAIL',\n\n    GET_QUEUE_NEW_SUCCESS: 'GET_QUEUE_NEW_SUCCESS',\n    GET_QUEUE_NEW_FAIL: 'GET_QUEUE_NEW_FAIL',\n\n    GET_DETAIL_USER_SUCCESS: 'GET_DETAIL_USER_SUCCESS',\n    GET_DETAIL_USER_FAIL: 'GET_DETAIL_USER_FAIL',\n\n    GET_QUEUE_HANDBOOK_SUCCESS: 'GET_QUEUE_HANDBOOK_SUCCESS',\n    GET_QUEUE_HANDBOOK_FAIL: 'GET_QUEUE_HANDBOOK_FAIL',\n});\n\nexport default actionTypes;\n","import actionTypes from '../actions/actionTypes';\n\nconst initContentOfConfirmModal = {\n    isOpen: false,\n    messageId: '',\n    handleFunc: null,\n    dataFunc: null,\n};\n\nconst initialState = {\n    started: true,\n    language: 'vi',\n    systemMenuPath: '/system/welcome',\n    contentOfConfirmModal: {\n        ...initContentOfConfirmModal,\n    },\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.APP_START_UP_COMPLETE:\n            return {\n                ...state,\n                started: true,\n            };\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL:\n            return {\n                ...state,\n                contentOfConfirmModal: {\n                    ...state.contentOfConfirmModal,\n                    ...action.contentOfConfirmModal,\n                },\n            };\n        case actionTypes.CHANGE_LANGUAGE:\n            return {\n                ...state,\n                language: action.language,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default appReducer;\n","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    keyForm: [],\n    allUser: [],\n    totalPage: 0,\n    count: 0,\n};\n\nconst adminReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_KEY_FORM_SUCCESS:\n            return {\n                ...state,\n                keyForm: action.data,\n            };\n        case actionTypes.FETCH_KEY_FORM_FAIL:\n            return { ...state };\n        case actionTypes.FETCH_ALL_USER_SUCCESS:\n            return {\n                ...state,\n                allUser: action.data.rows,\n                totalPage: action.data.totalPage,\n                count: action.data.count,\n            };\n        case actionTypes.FETCH_ALL_USER_FAIL:\n            return { ...state };\n\n        default:\n            return state;\n    }\n};\n\nexport default adminReducer;\n","import Cookies from 'universal-cookie';\r\n\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const classCookies = {\r\n    getAccessToken: () => {\r\n        let accessToken = cookies.get('accessToken');\r\n        if (!accessToken) accessToken = '';\r\n\r\n        return accessToken;\r\n    },\r\n    getRefreshToken: () => {\r\n        let refreshToken = cookies.get('refreshToken');\r\n        if (!refreshToken) refreshToken = '';\r\n\r\n        return refreshToken;\r\n    },\r\n    setToken: (name, token) => {\r\n        const cookies = new Cookies();\r\n        cookies.set(name, token, { path: '/' });\r\n    },\r\n    removeToken: (name) => {\r\n        cookies.remove(name, { path: '/' });\r\n    },\r\n\r\n    getDataAccessToken: () => {\r\n        let dataToken = '';\r\n        let token = '';\r\n        token = cookies.get('accessToken');\r\n        if (token) {\r\n            const decodedToken = jwt_decode(token);\r\n            dataToken = decodedToken;\r\n        }\r\n\r\n        return dataToken;\r\n    },\r\n};\r\n","import actionTypes from '../actions/actionTypes';\r\nimport { classCookies } from '../../cookies';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userInfo: classCookies.getDataAccessToken(),\r\n    language: 'vi',\r\n    queueNews: '',\r\n    queueHandbook: '',\r\n    detailUser: {},\r\n    roleId: classCookies.getDataAccessToken()?.roleId,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                userInfo: action.userInfor || classCookies.getDataAccessToken(),\r\n                roleId: action.roleId,\r\n            };\r\n        case actionTypes.USER_LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null,\r\n            };\r\n        case actionTypes.PROCESS_LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null,\r\n            };\r\n        case actionTypes.PROCESS_LOGOUT_FAIL:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.GET_QUEUE_NEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                queueNews: action.data,\r\n            };\r\n        case actionTypes.GET_QUEUE_NEW_FAIL:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.GET_DETAIL_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                detailUser: action.data,\r\n            };\r\n        case actionTypes.GET_DETAIL_USER_FAIL:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.GET_QUEUE_HANDBOOK_SUCCESS:\r\n            return {\r\n                ...state,\r\n                queueHandbook: action.data,\r\n            };\r\n        case actionTypes.GET_QUEUE_HANDBOOK_FAIL:\r\n            return {\r\n                ...state,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    topDoctors: [],\r\n    allDoctor: [],\r\n    detailDoctor: [],\r\n    schedule: [],\r\n    scheduleDoctorCurrent: [],\r\n    DoctorRelatedInfor: [],\r\n    listAppointment: [],\r\n    statusId: 'S2',\r\n};\r\n\r\nconst doctorReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_TOP_DOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                topDoctors: action.data,\r\n            };\r\n        case actionTypes.FETCH_TOP_DOCTOR_FAIL:\r\n            return {\r\n                ...state,\r\n                topDoctors: [],\r\n            };\r\n        case actionTypes.FETCH_ALL_DOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                allDoctor: action.data,\r\n            };\r\n        case actionTypes.FETCH_ALL_DOCTOR_FAIL:\r\n            return {\r\n                ...state,\r\n                allDoctor: [],\r\n            };\r\n        case actionTypes.GET_DETAIL_DOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                detailDoctor: action.data,\r\n            };\r\n        case actionTypes.GET_DETAIL_DOCTOR_FAIL:\r\n            return {\r\n                ...state,\r\n                detailDoctor: [],\r\n            };\r\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                schedule: action.data,\r\n            };\r\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_FAIL:\r\n            return {\r\n                ...state,\r\n                schedule: [],\r\n            };\r\n        case actionTypes.GET_SCHEDULE_DOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                scheduleDoctorCurrent: action.data,\r\n            };\r\n        case actionTypes.GET_SCHEDULE_DOCTOR_FAIL:\r\n            return {\r\n                ...state,\r\n                scheduleDoctorCurrent: [],\r\n            };\r\n        case actionTypes.FETCH_RELATE_TO_DOCTOR_INFOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                DoctorRelatedInfor: action.data,\r\n            };\r\n        case actionTypes.FETCH_RELATE_TO_DOCTOR_INFOR_FAIL:\r\n            return {\r\n                ...state,\r\n                DoctorRelatedInfor: [],\r\n            };\r\n        case actionTypes.GET_APPOINTMENT_DOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listAppointment: action.data,\r\n                // statusId: action.data.statusId,\r\n            };\r\n        case actionTypes.GET_APPOINTMENT_DOCTOR_FAIL:\r\n            return {\r\n                ...state,\r\n                listAppointment: [],\r\n                // statusId: 'S3',\r\n            };\r\n        case actionTypes.CHANGE_STATUS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                statusId: action.data,\r\n            };\r\n        case actionTypes.CHANGE_STATUS_FAIL:\r\n            return {\r\n                ...state,\r\n                statusId: 'S3',\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default doctorReducer;\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    listDataSpecialty: [],\r\n    listDataClinic: [],\r\n    listDataHandbook: [],\r\n};\r\n\r\nconst patientReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POST_BOOKING_APPOINTMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.POST_BOOKING_APPOINTMENT_FAIL:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.GET_ALL_SPECIALTY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listDataSpecialty: action.data,\r\n            };\r\n        case actionTypes.GET_ALL_SPECIALTY_FAIL:\r\n            return {\r\n                ...state,\r\n                listDataSpecialty: [],\r\n            };\r\n        case actionTypes.GET_ALL_CLINIC_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listDataClinic: action.data,\r\n            };\r\n        case actionTypes.GET_ALL_CLINIC_FAIL:\r\n            return {\r\n                ...state,\r\n                listDataClinic: [],\r\n            };\r\n        case actionTypes.GET_ALL_HANDBOOK_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listDataHandbook: action.data,\r\n            };\r\n        case actionTypes.GET_ALL_HANDBOOK_FAIL:\r\n            return {\r\n                ...state,\r\n                listDataHandbook: [],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default patientReducer;\r\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport appReducer from './appReducer';\nimport adminReducer from './adminReducer';\nimport userReducer from './userReducer';\nimport doctorReducer from './doctorReducer';\nimport patientReducer from './patientReducer';\n\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst persistCommonConfig = {\n    storage: storage,\n    stateReconciler: autoMergeLevel2,\n};\n\nconst userPersistConfig = {\n    ...persistCommonConfig,\n    key: 'user',\n    whitelist: ['isLoggedIn'],\n    // whitelist: ['isLoggedIn', 'userInfo'],\n};\n\nconst appPersistConfig = {\n    ...persistCommonConfig,\n    key: 'app',\n    whitelist: ['language'],\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (history) =>\n    combineReducers({\n        router: connectRouter(history),\n        user: persistReducer(userPersistConfig, userReducer), //  for save data user to localStogate\n        app: persistReducer(appPersistConfig, appReducer),\n        admin: adminReducer,\n        doctor: doctorReducer,\n        patient: patientReducer,\n    });\n","import { logger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { createStateSyncMiddleware } from 'redux-state-sync';\nimport { persistStore } from 'redux-persist';\n\nimport createRootReducer from './store/reducers/rootReducer';\nimport actionTypes from './store/actions/actionTypes';\n\nconst environment = process.env.NODE_ENV || 'development';\nlet isDevelopment = environment === 'development';\n\n//hide redux logs\nisDevelopment = false;\n\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\n\nconst reduxStateSyncConfig = {\n    whitelist: [actionTypes.APP_START_UP_COMPLETE, actionTypes.CHANGE_LANGUAGE],\n};\n\nconst rootReducer = createRootReducer(history);\nconst middleware = [routerMiddleware(history), thunkMiddleware, createStateSyncMiddleware(reduxStateSyncConfig)];\nif (isDevelopment) middleware.push(logger);\n\nconst composeEnhancers =\n    isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        : compose;\n\nconst reduxStore = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\n\nexport const dispatch = reduxStore.dispatch;\n\nexport const persistor = persistStore(reduxStore);\n\nexport default reduxStore;\n","import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\n\nconst locationHelper = locationHelperBuilder({});\n\nexport const userIsAuthenticated = connectedRouterRedirect({\n    authenticatedSelector: (state) => state.user.isLoggedIn,\n    wrapperDisplayName: 'UserIsAuthenticated',\n    redirectPath: '/login',\n});\n\nexport const userIsNotAuthenticated = connectedRouterRedirect({\n    // Want to redirect the user when they are authenticated\n    authenticatedSelector: (state) => !state.user.isLoggedIn,\n    wrapperDisplayName: 'UserIsNotAuthenticated',\n    redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\n    allowRedirectBack: false,\n});\n","export const path = {\n    HOME: '/',\n    HOMEPAGE: '/home',\n    LOGIN: '/login',\n    LOG_OUT: '/logout',\n    SYSTEM: '/system',\n    DETAIL_DOCTOR: '/detail-doctor/:id',\n    DETAIL_SPECIALTY: '/detail-specialty/:id',\n    DETAIL_CLINIC: '/detail-clinic/:id',\n    DETAIL_HANDBOOK: '/detail-handbook/:id',\n    DETAIL_NEWS: '/detail-news/:id',\n    VERIFY_BOOING: '/verify-booking',\n    DETAIL_USER: '/detail-user',\n\n    DOCTOR: '/doctor',\n};\n\nexport const LANGUAGES = {\n    VI: 'vi',\n    EN: 'en',\n};\n\nexport const CRUD_ACTIONS = {\n    CREATE: 'CREATE',\n    EDIT: 'EDIT',\n    READ: 'READ',\n    DELETE: 'DELETE',\n};\n\nexport const dateFormat = {\n    SEND_TO_SERVER: 'DD/MM/YYYY',\n};\n\nexport const TYPE_USER = {\n    ADMIN: 'R1',\n    DOCTOR: 'R2',\n    PARIENT: 'R3',\n};\nexport const PATH_FIREBASE = {\n    USER: 'files/user',\n    CLINIC_IMAGE: 'files/clinic/clinic_image',\n    CLINIC_LOGO: 'files/clinic/clinic_logo',\n    SPECIALTY_IMAGE: 'files/specialty/specialty_image',\n    HANDBOOK_IMAGE: 'files/handbook/handbook_image',\n    NEWS_IMAGE: 'files/news/news_image',\n};\n","class CommonUtils {\n    static getBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n    }\n}\n\nexport default CommonUtils;\n","class KeyCodeUtils {\r\n    static UP = 38;\r\n\r\n    static DOWN = 40;\r\n\r\n    static TAB = 9;\r\n\r\n    static ENTER = 13;\r\n\r\n    static E = 69;\r\n\r\n    static ESCAPE = 27;\r\n\r\n    static isNavigation(e) {\r\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\r\n    }\r\n\r\n    static isNumeric(e) {\r\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\r\n    }\r\n    static isAlphabetic(e) {\r\n        return e >= 65 && e <= 90;\r\n    }\r\n    static isDecimal(e) {\r\n        return e === 190 || e === 188 || e === 108 || e === 110;\r\n    }\r\n\r\n    static isDash(e) {\r\n        return e === 109 || e === 189;\r\n    }\r\n}\r\n\r\nexport default KeyCodeUtils;\r\n","import messages_vi from '../translations/vi.json';\nimport messages_en from '../translations/en.json';\n\nconst flattenMessages = ((nestedMessages, prefix = '') => {\n    if (nestedMessages == null) {\n        return {}\n    }\n    return Object.keys(nestedMessages).reduce((messages, key) => {\n        const value = nestedMessages[key];\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n        if (typeof value === 'string') {\n            Object.assign(messages, {[prefixedKey]: value})\n        } else {\n            Object.assign(messages, flattenMessages(value, prefixedKey))\n        }\n\n        return messages\n    }, {})\n});\n\nconst messages = {\n    'vi': flattenMessages(messages_vi),\n    'en': flattenMessages(messages_en),\n};\n\nexport default class LanguageUtils {\n    static getMessageByKey(key, lang) {\n        return messages[lang][key]\n    }\n\n    static getFlattenedMessages() {\n        return messages;\n    }\n}","export const convertKeyToValue = (itemId, arrData) => {\r\n    if (!itemId || arrData?.length <= 0) return '';\r\n    for (let item of arrData) {\r\n        if (item.keyMap === itemId) {\r\n            return item.valueVi;\r\n        }\r\n    }\r\n};\r\n","import actionTypes from './actionTypes';\n\nexport const appStartUpComplete = () => ({\n    type: actionTypes.APP_START_UP_COMPLETE,\n});\n\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\n    type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\n    contentOfConfirmModal: contentOfConfirmModal,\n});\n\nexport const changeLanguageApp = (language) => ({\n    type: actionTypes.CHANGE_LANGUAGE,\n    language,\n});\n","export const classStorage = {\r\n    getItemStorage: (name) => {\r\n        let result = localStorage.getItem(name);\r\n        return result;\r\n    },\r\n    setItemStorage: (name, value) => {\r\n        localStorage.setItem(name, value);\r\n        return;\r\n    },\r\n    removeItemStorage: (name) => {\r\n        localStorage.removeItem(name);\r\n        return;\r\n    },\r\n};\r\n","import axios from 'axios';\n// import _ from 'lodash';\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL,\n    withCredentials: true,\n});\n\ninstance.interceptors.response.use((response) => {\n    return response.data;\n});\n\nexport default instance;\n","import axios from 'axios';\r\nimport { classCookies } from './cookies.js';\r\nimport { classStorage } from './storage';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { refreshToken } from './services/userServices';\r\nimport { processLogout } from './store/actions/userActions.js';\r\nimport reduxStore from './redux.js';\r\n\r\nconst axiosjwt = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    withCredentials: true,\r\n});\r\n\r\naxiosjwt.interceptors.request.use(async (config) => {\r\n    if (\r\n        config.url.indexOf('/login') >= 0 ||\r\n        config.url.indexOf('/refresh-token') >= 0 ||\r\n        config.url.indexOf('/logout') >= 0\r\n    ) {\r\n        return config;\r\n    }\r\n    const now = new Date().getTime() / 1000;\r\n    const accessToken = classCookies.getAccessToken();\r\n\r\n    const decodedToken = jwt_decode(accessToken);\r\n    if (parseInt(decodedToken?.exp) < parseInt(now)) {\r\n        classCookies.removeToken('accessToken');\r\n        const data = await refreshToken();\r\n        classCookies.removeToken('refreshToken');\r\n\r\n        if (data && data.accessToken) {\r\n            classCookies.setToken('accessToken', data.accessToken);\r\n            classCookies.setToken('refreshToken', data.refreshToken);\r\n            classStorage.setItemStorage('refreshToken', data.refreshToken);\r\n        } else {\r\n            //chuyển sang trang login\r\n            reduxStore.dispatch(processLogout());\r\n        }\r\n    }\r\n    config.headers['accessToken'] = classCookies.getAccessToken();\r\n\r\n    return config;\r\n});\r\n\r\naxiosjwt.interceptors.response.use((response) => {\r\n    return response.data;\r\n});\r\n\r\nexport default axiosjwt;\r\n","import axios from '../axios';\r\nimport axiosJWT from '../axiosJWT';\r\n\r\nconst handleLoginApi = async (userName, password) => {\r\n    try {\r\n        return await axios.post('/api/login', { email: userName, password: password });\r\n    } catch (error) {\r\n        console.log(error);\r\n        // return error?.response?.data;\r\n    }\r\n};\r\nconst registerServices = async (data) => {\r\n    try {\r\n        return await axios.post('/api/register', data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst getUsersById = async (inputId) => {\r\n    try {\r\n        return await axios.get(`/api/get-users?id=${inputId}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst filterAndPagingUser = async (paramsSearch = {}) => {\r\n    let { page = 0, limit = 10, keyword = '', roleId = '' } = paramsSearch;\r\n    try {\r\n        return await axiosJWT.get(`/api/filter-user?page=${page}&limit=${limit}&keyword=${keyword}&roleId=${roleId}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst createUserServices = async (dataUser) => {\r\n    try {\r\n        return await axiosJWT.post('/api/create-user', dataUser);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst deleteUserServices = async (id) => {\r\n    try {\r\n        return await axiosJWT.delete('/api/delete-user', { data: { id: id } });\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst editUserServices = async (user) => {\r\n    try {\r\n        return await axiosJWT.put('/api/update-user', user);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst getAllCodeServices = async (type) => {\r\n    try {\r\n        return await axios.get(`/api/allcode?type=${type}`);\r\n    } catch (error) {\r\n        console.log('fail', error);\r\n    }\r\n};\r\n\r\n// post specialty\r\nconst postSpecialtyServices = async (data) => {\r\n    try {\r\n        return await axiosJWT.post('/api/post-specialty', data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n// post detail clinic\r\nconst postDetailClinicServices = async (data) => {\r\n    try {\r\n        return await axiosJWT.post('/api/post-detail-clinic', data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\n// post detail clinic\r\nconst refreshToken = async () => {\r\n    try {\r\n        return await axiosJWT.post('/api/refresh-token');\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\n// logout\r\nconst processLogoutServices = async () => {\r\n    try {\r\n        return await axiosJWT.post(`/api/logout`);\r\n    } catch (error) {\r\n        console.log('error:::', error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\n// post handbook:\r\nconst postHandbookServices = async (data) => {\r\n    try {\r\n        return await axiosJWT.post('/api/post-handbook', data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst confirmHandbookServices = async (id) => {\r\n    try {\r\n        return await axiosJWT.post(`/api/confirm-handbook?id=${id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst deleteHandbookServices = async (id) => {\r\n    try {\r\n        if (!id) id = '';\r\n        return await axiosJWT.post(`/api/delete-handbook?id=${id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst checkQueueHandbookServices = async () => {\r\n    try {\r\n        return await axiosJWT.get(`/api/check-queue-handbook`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\n// News\r\nconst postNewsServices = async (data) => {\r\n    try {\r\n        return await axiosJWT.post('/api/post-news', data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst confirmNewsServices = async (id) => {\r\n    try {\r\n        return await axiosJWT.post(`/api/confirm-news?id=${id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst deleteNewsServices = async (id) => {\r\n    try {\r\n        if (!id) id = '';\r\n        return await axiosJWT.post(`/api/delete-news?id=${id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst checkQueueNewsServices = async () => {\r\n    try {\r\n        return await axiosJWT.get(`/api/check-queue-news`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst filterAndPagingClinic = async (page = 0, limit = 5, keyword = '') => {\r\n    try {\r\n        return await axios.get(`/api/filter-paging-clinic?page=${page}&limit=${limit}&keyword=${keyword}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst filterAndPagingSpecialty = async (page = 0, limit = 5, keyword = '') => {\r\n    try {\r\n        return await axios.get(`/api/filter-paging-specialty?page=${page}&limit=${limit}&keyword=${keyword}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst deleteClinicByIdServices = async (id) => {\r\n    try {\r\n        return await axiosJWT.delete(`/api/clinic/${id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst deleteSpecialtyByIdServices = async (id) => {\r\n    try {\r\n        return await axiosJWT.delete(`/api/specialty/${id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nexport {\r\n    handleLoginApi,\r\n    getUsersById,\r\n    createUserServices,\r\n    deleteUserServices,\r\n    editUserServices,\r\n    getAllCodeServices,\r\n    postSpecialtyServices,\r\n    postDetailClinicServices,\r\n    refreshToken,\r\n    processLogoutServices,\r\n    registerServices,\r\n    postHandbookServices,\r\n    confirmHandbookServices,\r\n    deleteHandbookServices,\r\n    postNewsServices,\r\n    confirmNewsServices,\r\n    deleteNewsServices,\r\n    checkQueueNewsServices,\r\n    checkQueueHandbookServices,\r\n    filterAndPagingUser,\r\n    filterAndPagingClinic,\r\n    deleteClinicByIdServices,\r\n    filterAndPagingSpecialty,\r\n    deleteSpecialtyByIdServices,\r\n};\r\n","import axios from '../axios';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { classStorage } from '../storage';\r\n\r\nconst postBookingAppointmentServices = async (data) => {\r\n    try {\r\n        return await axios.post(`/api/patient-booking-appointment`, data);\r\n    } catch (error) {\r\n        console.log(error?.response?.data);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst verifyBookingAppointmentServices = async (data) => {\r\n    try {\r\n        return await axios.post(`/api/verify-appointment`, data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst getAllSpecialtyServices = async () => {\r\n    try {\r\n        return await axios.get(`/api/all-specialty`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst getSpecialtyByIdServices = async (id, location) => {\r\n    try {\r\n        return await axios.get(`/api/get-specialty-by-id?id=${id}&location=${location}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst getAllClinicServices = async (isGetImageClinic, limit) => {\r\n    try {\r\n        limit = limit || 10;\r\n        return await axios.get(`/api/get-all-clinic?isGetImageClinic=${isGetImageClinic}&limit=${limit}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst getDetailClinicByIdServices = async (id) => {\r\n    try {\r\n        return await axios.get(`/api/get-detail-clinic-by-id?id=${id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst getHandbookServices = async (id, type, statusId) => {\r\n    try {\r\n        if (!id) id = '';\r\n        if (!type) type = '';\r\n        return await axios.get(`/api/get-handbook?id=${id}&type=${type}&statusId=${statusId}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst getNewsServices = async (id, type, statusId) => {\r\n    try {\r\n        if (!id) id = '';\r\n        if (!type) type = '';\r\n        return await axios.get(`/api/get-news?id=${id}&type=${type}&statusId=${statusId}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst getDetailUserServices = async () => {\r\n    try {\r\n        let refreshToken = classStorage.getItemStorage('refreshToken');\r\n        let user = jwt_decode(refreshToken);\r\n        return await axios.get(`/api/get-detail-users/${user.id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst searchAllServices = async (keyword) => {\r\n    try {\r\n        return await axios.get(`/api/search-all?keyword=${keyword}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst searchDoctorServices = async (page = 0, limit = 10, keyword = '', roleId = 'R2') => {\r\n    try {\r\n        return await axios.get(`/api/filter-doctor?page=${page}&limit=${limit}&keyword=${keyword}&roleId=${roleId}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst pagingHandbook = async (page = 0, limit = 5, statusId = 'S1') => {\r\n    try {\r\n        return await axios.get(`/api/paging-handbook?page=${page}&limit=${limit}&statusId=${statusId}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nexport {\r\n    postBookingAppointmentServices,\r\n    verifyBookingAppointmentServices,\r\n    getAllSpecialtyServices,\r\n    getSpecialtyByIdServices,\r\n    getAllClinicServices,\r\n    getDetailClinicByIdServices,\r\n    getHandbookServices,\r\n    getNewsServices,\r\n    getDetailUserServices,\r\n    searchAllServices,\r\n    searchDoctorServices,\r\n    pagingHandbook,\r\n};\r\n","import actionTypes from './actionTypes';\nimport { classCookies } from '../../cookies';\nimport { classStorage } from '../../storage';\nimport { processLogoutServices } from '../../services/userServices';\nimport { getDetailUserServices } from '../../services/patientServices';\n\nexport const addUserSuccess = () => ({\n    type: actionTypes.ADD_USER_SUCCESS,\n});\n\nexport const userLoginSuccess = (userInfo, roleId) => ({\n    type: actionTypes.USER_LOGIN_SUCCESS,\n    userInfo: userInfo,\n    roleId: roleId,\n});\n\nexport const userLoginFail = () => ({\n    type: actionTypes.USER_LOGIN_FAIL,\n});\n\nexport const processLogout = () => {\n    return async (dispatch) => {\n        try {\n            let res = await processLogoutServices();\n\n            if (res && res.errorCode === 0) {\n                dispatch({ type: actionTypes.PROCESS_LOGOUT_SUCCESS });\n                classStorage.removeItemStorage('refreshToken');\n                classCookies.removeToken('refreshToken');\n                classCookies.removeToken('accessToken');\n            } else {\n                console.log('You are not user');\n                dispatch({ type: actionTypes.PROCESS_LOGOUT_FAIL });\n            }\n        } catch (error) {\n            console.log(error);\n            dispatch({ type: actionTypes.PROCESS_LOGOUT_FAIL });\n        }\n    };\n};\nexport const getDetailUser = () => {\n    return async (dispatch) => {\n        try {\n            let dataUser = await getDetailUserServices();\n\n            if (dataUser && dataUser.errorCode === 0) {\n                dispatch({ type: actionTypes.GET_DETAIL_USER_SUCCESS, data: dataUser.data });\n            } else {\n                dispatch({ type: actionTypes.GET_DETAIL_USER_FAIL });\n            }\n        } catch (error) {\n            console.log(error);\n            dispatch({ type: actionTypes.GET_DETAIL_USER_FAIL });\n        }\n    };\n};\n","import actionTypes from './actionTypes';\r\nimport {\r\n    getAllCodeServices,\r\n    createUserServices,\r\n    filterAndPagingUser,\r\n    editUserServices,\r\n    checkQueueNewsServices,\r\n    checkQueueHandbookServices,\r\n} from '../../services/userServices';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const fetchKeyForm = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let keyForm = {};\r\n            let genderRes = await getAllCodeServices('gender');\r\n            let PositionRes = await getAllCodeServices('position');\r\n            let RoleRes = await getAllCodeServices('role');\r\n            keyForm.genders = genderRes;\r\n            keyForm.positions = PositionRes;\r\n            keyForm.roles = RoleRes;\r\n\r\n            if (checkRes(keyForm)) {\r\n                keyForm.genders = [...genderRes.data];\r\n                keyForm.positions = [...PositionRes.data];\r\n                keyForm.roles = [...RoleRes.data];\r\n                dispatch(fetchKeyFormSuccess(keyForm));\r\n            } else {\r\n                dispatch(fetchKeyFormFail());\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchKeyFormFail());\r\n            console.log('fetch Fail: ', error);\r\n        }\r\n    };\r\n};\r\n\r\n//get all key word form data:\r\nconst fetchKeyFormSuccess = (keyForm) => ({\r\n    type: actionTypes.FETCH_KEY_FORM_SUCCESS,\r\n    data: keyForm,\r\n});\r\nconst fetchKeyFormFail = () => ({\r\n    type: actionTypes.FETCH_KEY_FORM_FAIL,\r\n});\r\n\r\nconst checkRes = (res) => {\r\n    let result = false;\r\n    for (let key in res) {\r\n        if (res[key] && res[key].errorCode === 0) {\r\n            result = true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    return result;\r\n};\r\n//----------------------------------------\r\n//create new user redux\r\nexport const createNewUserRedux = (dataUser) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await createUserServices(dataUser);\r\n            if (res && res.errorCode === 0) {\r\n                dispatch(createNewUserReduxSuccess());\r\n                toast.success('Create new user done', {\r\n                    position: 'top-right',\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                dispatch(filterAndPagingUserRedux());\r\n            } else {\r\n                dispatch(createNewUserReduxFail());\r\n                toast.error(res.message, {\r\n                    position: 'top-right',\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            dispatch(createNewUserReduxFail());\r\n            console.log('create user redux Fail: ', error);\r\n        }\r\n    };\r\n};\r\n\r\nconst createNewUserReduxSuccess = () => ({\r\n    type: actionTypes.CREATE_USER_REDUX_SUCCESS,\r\n});\r\nconst createNewUserReduxFail = () => ({\r\n    type: actionTypes.CREATE_USER_REDUX_FAIL,\r\n});\r\n//----------------------------------------------------------------\r\n// fetch all users :\r\n\r\nexport const filterAndPagingUserRedux = (paramsSearch) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await filterAndPagingUser(paramsSearch);\r\n            if (res && res.errorCode === 0) {\r\n                dispatch(filterAndPagingUserReduxSuccess(res.data));\r\n            } else {\r\n                console.log('errorCode -1');\r\n                dispatch(filterAndPagingUserReduxFail());\r\n            }\r\n        } catch (error) {\r\n            console.log('fail get all user redux :', error);\r\n            dispatch(filterAndPagingUserReduxFail());\r\n        }\r\n    };\r\n};\r\n\r\nconst filterAndPagingUserReduxSuccess = (data) => ({\r\n    type: actionTypes.FETCH_ALL_USER_SUCCESS,\r\n    data,\r\n});\r\nconst filterAndPagingUserReduxFail = () => ({\r\n    type: actionTypes.FETCH_ALL_USER_FAIL,\r\n});\r\n\r\n// update user\r\n\r\nexport const editUserRedux = (user) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await editUserServices(user);\r\n            if (res && res.errorCode === 0) {\r\n                dispatch({ type: actionTypes.UPDATE_USER_SUCCESS });\r\n                toast.success('update user succeed', {\r\n                    position: 'top-right',\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                dispatch(filterAndPagingUserRedux());\r\n            } else {\r\n                dispatch({ type: actionTypes.UPDATE_USER_FAIL });\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: actionTypes.UPDATE_USER_FAIL });\r\n            console.log('update user fail: ' + error);\r\n        }\r\n    };\r\n};\r\nexport const checkQueueNewsRedux = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await checkQueueNewsServices();\r\n            if (res && res.errorCode === 0) {\r\n                dispatch({ type: actionTypes.GET_QUEUE_NEW_SUCCESS, data: res.queueNews });\r\n            } else {\r\n                dispatch({ type: actionTypes.GET_QUEUE_NEW_FAIL });\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: actionTypes.GET_QUEUE_NEW_FAIL });\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\nexport const checkQueueHandbookRedux = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await checkQueueHandbookServices();\r\n            if (res && res.errorCode === 0) {\r\n                dispatch({ type: actionTypes.GET_QUEUE_HANDBOOK_SUCCESS, data: res.queueHandbooks });\r\n            } else {\r\n                dispatch({ type: actionTypes.GET_QUEUE_HANDBOOK_FAIL });\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: actionTypes.GET_QUEUE_HANDBOOK_FAIL });\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n","import axios from '../axios';\r\nimport axiosJWT from '../axiosJWT';\r\n\r\nconst getTopDoctorServices = async (limit) => {\r\n    try {\r\n        return await axios.get(`/api/top-doctor-home?limit=${limit}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst getAllDoctorService = async () => {\r\n    try {\r\n        return await axios.get(`/api/get-all-doctor`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst saveDetailDoctorServices = async (data) => {\r\n    try {\r\n        return await axiosJWT.post(`/api/save-detail-doctor`, data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst getDetailDoctorService = async (id) => {\r\n    try {\r\n        return await axios.get(`/api/get-detail-doctor-by-id?id=${id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst getDoctorService = async (id) => {\r\n    try {\r\n        return await axios.get(`/api/get-doctor-by-id?id=${id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst saveScheduleDoctorServices = async (data) => {\r\n    try {\r\n        return await axiosJWT.post(`/api/save-schedule-doctor`, data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nconst getScheduleDoctorByDateService = async (doctorId, date) => {\r\n    try {\r\n        return await axios.get(`/api/get-schedule-doctor-by-date?doctorId=${doctorId}&date=${date}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst getAppointmentDoctorService = async (doctorId, date, statusId) => {\r\n    try {\r\n        return await axiosJWT.get(`/api/get-appointment-doctor?doctorId=${doctorId}&date=${date}&statusId=${statusId}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\nconst confirmRemedyService = async (data) => {\r\n    try {\r\n        return await axiosJWT.post(`/api/confirm-remedy`, data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error?.response?.data;\r\n    }\r\n};\r\n\r\nexport {\r\n    getTopDoctorServices,\r\n    getAllDoctorService,\r\n    saveDetailDoctorServices,\r\n    getDetailDoctorService,\r\n    saveScheduleDoctorServices,\r\n    getScheduleDoctorByDateService,\r\n    getDoctorService,\r\n    getAppointmentDoctorService,\r\n    confirmRemedyService,\r\n};\r\n","import {\r\n    getTopDoctorServices,\r\n    getAllDoctorService,\r\n    getDetailDoctorService,\r\n    saveScheduleDoctorServices,\r\n    getScheduleDoctorByDateService,\r\n    getAppointmentDoctorService,\r\n} from '../../services/doctorServices';\r\nimport { getAllCodeServices } from '../../services/userServices';\r\nimport { getAllSpecialtyServices, getAllClinicServices } from '../../services/patientServices';\r\nimport actionTypes from './actionTypes';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const fetchTopDoctor = (limit) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await getTopDoctorServices(limit);\r\n            if (res && res.errorCode === 0) {\r\n                dispatch({ type: actionTypes.FETCH_TOP_DOCTOR_SUCCESS, data: res.data });\r\n            }\r\n        } catch (error) {\r\n            console.log('error fetch top doctors :', error);\r\n            dispatch({ type: actionTypes.FETCH_TOP_DOCTOR_SUCCESS });\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchAllDoctor = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await getAllDoctorService();\r\n            if (res && res.errorCode === 0) {\r\n                dispatch({ type: actionTypes.FETCH_ALL_DOCTOR_SUCCESS, data: res.data });\r\n            } else {\r\n                console.log('zo fetch all doctor fail');\r\n                dispatch({ type: actionTypes.FETCH_ALL_DOCTOR_FAIL });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({ type: actionTypes.FETCH_ALL_DOCTOR_FAIL });\r\n        }\r\n    };\r\n};\r\n\r\nexport const getDetailDoctor = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if (!id) {\r\n                dispatch({ type: actionTypes.GET_DETAIL_DOCTOR_FAIL });\r\n            } else {\r\n                let res = await getDetailDoctorService(id);\r\n                dispatch({ type: actionTypes.GET_DETAIL_DOCTOR_SUCCESS, data: res.data });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({ type: actionTypes.GET_DETAIL_DOCTOR_FAIL });\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchAllcodeSchedule = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await getAllCodeServices('TIME');\r\n            if (res && res.errorCode === 0) {\r\n                dispatch({ type: actionTypes.FETCH_ALLCODE_SCHEDULE_SUCCESS, data: res.data });\r\n            } else {\r\n                dispatch({ type: actionTypes.FETCH_ALLCODE_SCHEDULE_FAIL });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({ type: actionTypes.FETCH_ALLCODE_SCHEDULE_FAIL });\r\n        }\r\n    };\r\n};\r\n\r\nexport const saveScheduleDoctor = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await saveScheduleDoctorServices(data);\r\n            if (res && res.errorCode === 0) {\r\n                dispatch({ type: actionTypes.SAVE_SCHEDULE_DOCTOR_SUCCESS });\r\n                toast.success(res.message, {\r\n                    position: 'top-right',\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            } else {\r\n                dispatch({ type: actionTypes.SAVE_SCHEDULE_DOCTOR_FAIL });\r\n                toast.error(res.message, {\r\n                    position: 'top-right',\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({ type: actionTypes.SAVE_SCHEDULE_DOCTOR_FAIL });\r\n        }\r\n    };\r\n};\r\n\r\nexport const getScheduleDoctorByDate = (doctorId, date) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await getScheduleDoctorByDateService(doctorId, date);\r\n            if (res && res.errorCode === 0) {\r\n                dispatch({ type: actionTypes.GET_SCHEDULE_DOCTOR_SUCCESS, data: res.data });\r\n            } else {\r\n                dispatch({ type: actionTypes.GET_SCHEDULE_DOCTOR_FAIL });\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            dispatch({ type: actionTypes.GET_SCHEDULE_DOCTOR_FAIL });\r\n        }\r\n    };\r\n};\r\nexport const getAppointmentDoctor = (doctorId, initDate, statusId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await getAppointmentDoctorService(doctorId, initDate, statusId);\r\n            if (res && res.errorCode === 0) {\r\n                res.data.statusId = statusId;\r\n                dispatch({ type: actionTypes.GET_APPOINTMENT_DOCTOR_SUCCESS, data: res.data });\r\n            } else {\r\n                dispatch({ type: actionTypes.GET_APPOINTMENT_DOCTOR_FAIL });\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            dispatch({ type: actionTypes.GET_APPOINTMENT_DOCTOR_FAIL });\r\n        }\r\n    };\r\n};\r\nexport const changeStatusId = (statusId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: actionTypes.CHANGE_STATUS_SUCCESS, data: statusId });\r\n        } catch (e) {\r\n            console.log(e);\r\n            dispatch({ type: actionTypes.CHANGE_STATUS_FAIL });\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchRelateToDoctorInfor = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = {};\r\n            let resListPrice = await getAllCodeServices('PRICE');\r\n            let resListPayment = await getAllCodeServices('PAYMENT');\r\n            let resListProvince = await getAllCodeServices('PROVINCE');\r\n            let resListClinics = await getAllClinicServices();\r\n            let resListSpecialty = await getAllSpecialtyServices();\r\n\r\n            if (\r\n                resListPrice &&\r\n                resListPrice.errorCode === 0 &&\r\n                resListPayment &&\r\n                resListPayment.errorCode === 0 &&\r\n                resListProvince &&\r\n                resListProvince.errorCode === 0 &&\r\n                resListSpecialty &&\r\n                resListSpecialty.errorCode === 0 &&\r\n                resListClinics &&\r\n                resListClinics.errorCode === 0\r\n            ) {\r\n                result.listPrice = resListPrice.data;\r\n                result.listPayment = resListPayment.data;\r\n                result.listProvince = resListProvince.data;\r\n                result.listSpecialty = resListSpecialty.data;\r\n                result.listClinics = resListClinics.data;\r\n                dispatch({ type: actionTypes.FETCH_RELATE_TO_DOCTOR_INFOR_SUCCESS, data: result });\r\n            } else {\r\n                dispatch({ type: actionTypes.FETCH_RELATE_TO_DOCTOR_INFOR_FAIL });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({ type: actionTypes.FETCH_RELATE_TO_DOCTOR_INFOR_FAIL });\r\n        }\r\n    };\r\n};\r\n","import {\r\n    postBookingAppointmentServices,\r\n    getAllSpecialtyServices,\r\n    getAllClinicServices,\r\n    getHandbookServices,\r\n} from '../../services/patientServices';\r\nimport actionTypes from './actionTypes';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const postBookingAppointment = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await postBookingAppointmentServices(data);\r\n            if (res && res.errorCode === 0) {\r\n                dispatch({ type: actionTypes.POST_BOOKING_APPOINTMENT_SUCCESS });\r\n                toast.success(res.message, {\r\n                    position: 'top-right',\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({ type: actionTypes.POST_BOOKING_APPOINTMENT_FAIL });\r\n            toast.success('BOOKING_APPOINTMENT_FAIL', {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const getAllSpecialty = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let specialtyData = await getAllSpecialtyServices();\r\n            if (specialtyData && specialtyData.errorCode === 0) {\r\n                dispatch({ type: actionTypes.GET_ALL_SPECIALTY_SUCCESS, data: specialtyData.data });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({ type: actionTypes.GET_ALL_SPECIALTY_FAIL });\r\n        }\r\n    };\r\n};\r\nexport const getAllClinicRedux = (isGetImage) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let clinicData = await getAllClinicServices(isGetImage);\r\n            if (clinicData && clinicData.errorCode === 0) {\r\n                dispatch({ type: actionTypes.GET_ALL_CLINIC_SUCCESS, data: clinicData.data });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({ type: actionTypes.GET_ALL_CLINIC_FAIL });\r\n        }\r\n    };\r\n};\r\nexport const getHandbookRedux = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let handbookData = await getHandbookServices();\r\n            if (handbookData && handbookData.errorCode === 0) {\r\n                dispatch({ type: actionTypes.GET_ALL_HANDBOOK_SUCCESS, data: handbookData.data });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({ type: actionTypes.GET_ALL_HANDBOOK_FAIL });\r\n        }\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Loading.scss';\r\n\r\nclass Loading extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    componentDidMount() {}\r\n    componentDidUpdate() {}\r\n\r\n    render() {\r\n        let {} = this.props;\r\n        let {} = this.state;\r\n        return (\r\n            <div className=\"bg-loading\">\r\n                <div className=\"lds-ellipsis\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\n\r\nimport * as actions from '../../store/actions';\r\nimport './Login.scss';\r\nimport './Login2.scss';\r\nimport { handleLoginApi, registerServices } from '../../services/userServices';\r\nimport Cookies from 'universal-cookie';\r\nimport { classCookies } from '../../cookies';\r\nimport { classStorage } from '../../storage';\r\nimport { withRouter } from 'react-router';\r\nimport { validateEmail, validatePhonenumber } from '../../utils/validate';\r\nimport { KeyCodeUtils } from '../../utils';\r\nimport Loading from '../../components/Loading';\r\nimport jwt_decode from 'jwt-decode';\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n\r\n            message: '',\r\n            isRegister: false,\r\n            isShowMessage: false,\r\n            isShowLoading: false,\r\n        };\r\n    }\r\n    componentDidMount() {}\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            this.handleLogin();\r\n        }\r\n    };\r\n\r\n    handleChange = (e, name) => {\r\n        this.setState({ [name]: e.target.value, message: '' });\r\n    };\r\n\r\n    handleLogin = async () => {\r\n        this.setState({ message: '', isShowLoading: true });\r\n        try {\r\n            let dataResponse = await handleLoginApi(this.state.email, this.state.password);\r\n\r\n            if (dataResponse && dataResponse.errorCode === 1 && dataResponse.message) {\r\n                this.setState({ message: dataResponse.message, isShowMessage: true });\r\n            }\r\n            if (dataResponse && dataResponse.errorCode === 0) {\r\n                //login success\r\n                classCookies.setToken('accessToken', dataResponse.accessToken);\r\n                classCookies.setToken('refreshToken', dataResponse.refreshToken);\r\n                let userInfor = jwt_decode(dataResponse.accessToken);\r\n                classStorage.setItemStorage('refreshToken', dataResponse.refreshToken);\r\n\r\n                await this.props.userLoginSuccess(userInfor, userInfor.roleId);\r\n                if (userInfor.roleId === 'R3') {\r\n                    // classStorage.setItemStorage('email', this.state.email);\r\n                    this.props.history.push(`/`);\r\n                } else if (userInfor.roleId === 'R1') {\r\n                    this.props.history.push(`/system/welcome`);\r\n                } else if (userInfor.roleId === 'R2') {\r\n                    this.props.history.push(`/doctor/manage-patient-appointment`);\r\n                }\r\n                this.setState({\r\n                    isShowLoading: false,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            if (error.response && error?.response?.data) {\r\n                this.setState({ message: error.response.message, isShowMessage: true, isShowLoading: false });\r\n            }\r\n        }\r\n    };\r\n    handleRegister = async () => {\r\n        this.setState({ message: '', isShowLoading: true });\r\n        let { email, password, confirmPassword, firstName, lastName, phoneNumber } = this.state;\r\n\r\n        if (!validateEmail(email)) {\r\n            this.setState({ message: 'Email không hợp lệ.', isShowMessage: true });\r\n            return;\r\n        } else {\r\n            try {\r\n                if (phoneNumber) {\r\n                    if (!validatePhonenumber(phoneNumber)) {\r\n                        this.setState({ message: 'Số điện thoại không hợp lệ.', isShowMessage: true });\r\n                        return;\r\n                    }\r\n                }\r\n                let dataResponse = await registerServices({\r\n                    firstName,\r\n                    lastName,\r\n                    phoneNumber,\r\n                    email,\r\n                    password,\r\n                    confirmPassword,\r\n                });\r\n                if (dataResponse && dataResponse.errorCode === 1 && dataResponse.message) {\r\n                    this.setState({ message: dataResponse.message, isShowMessage: true, isShowLoading: false });\r\n                }\r\n                if (dataResponse && dataResponse.errorCode === 0) {\r\n                    //login success\r\n                    const cookies = new Cookies();\r\n                    cookies.set('accessToken', dataResponse.accessToken, { path: '/' });\r\n                    classStorage.setItemStorage('refreshToken', classCookies.getRefreshToken('refreshToken'));\r\n\r\n                    this.handleLogin();\r\n                    this.props.history.push(`/home`);\r\n                    this.setState({\r\n                        isShowLoading: false,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response && error?.response?.data) {\r\n                    this.setState({ message: error.response.message, isShowMessage: true, isShowLoading: false });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClickSubmit = () => {\r\n        let { isRegister } = this.state;\r\n        if (isRegister) {\r\n            this.handleRegister();\r\n        } else {\r\n            this.handleLogin();\r\n        }\r\n    };\r\n\r\n    handleClickSignUp = () => {\r\n        this.setState({\r\n            isRegister: !this.state.isRegister,\r\n            isShowMessage: false,\r\n            message: '',\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { isRegister, isShowLoading } = this.state;\r\n        return (\r\n            <div className=\"login-background \">\r\n                <div className=\"login-container position-loading\">\r\n                    {isShowLoading && <Loading />}\r\n                    <div className=\"login-content\">\r\n                        <div className=\"col-12 text-center\">{isRegister ? 'Đăng kí' : 'Đăng nhập'}</div>\r\n                        <div className=\"login-form\">\r\n                            {/* ho va ten khi dang ki */}\r\n                            {isRegister && (\r\n                                <>\r\n                                    <div className=\"form-row mt-4 col-md-12 \">\r\n                                        <div className=\"form-group col-md-6 m0\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Họ (*)\"\r\n                                                value={this.state.firstName}\r\n                                                onChange={(e) => this.handleChange(e, 'firstName')}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-6 m0\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Tên (*)\"\r\n                                                value={this.state.lastName}\r\n                                                onChange={(e) => this.handleChange(e, 'lastName')}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group col-md-12 mt-4\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"inputEmail4\"\r\n                                            placeholder=\"Số điện thoại (*)\"\r\n                                            value={this.state.phoneNumber}\r\n                                            onChange={(e) => this.handleChange(e, 'phoneNumber')}\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                            <div className=\"form-group col-md-12 mt-4\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Email (*)\"\r\n                                    value={this.state.email}\r\n                                    onChange={(e) => this.handleChange(e, 'email')}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputPassword4\"\r\n                                    placeholder=\"Password (*)\"\r\n                                    value={this.state.password}\r\n                                    onChange={(e) => this.handleChange(e, 'password')}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {isRegister && (\r\n                            <div className=\"form-group col-md-12\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Enter your password (*)\"\r\n                                    value={this.state.confirmPassword}\r\n                                    onChange={(e) => this.handleChange(e, 'confirmPassword')}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        <div className=\"col-12 text-response\">{this.state.message}</div>\r\n                        <div className=\"col-12 btn-container\">\r\n                            <button className=\"btn btn-primary\" onClick={() => this.handleClickSubmit()}>\r\n                                {isRegister ? 'Đăng kí' : 'Đăng nhập'}\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 register\">\r\n                            <span>\r\n                                {!isRegister && 'Not a member? '}\r\n                                <span className=\"btn-signup\" onClick={() => this.handleClickSignUp()}>\r\n                                    {isRegister ? 'Đăng nhập' : 'Đăng kí'}\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        roleId: state.user.roleId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        userLoginSuccess: (userInfo, roleId) => dispatch(actions.userLoginSuccess(userInfo, roleId)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\r\n","export const validateEmail = (emailField) => {\r\n    var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n    if (reg.test(emailField) == false) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nexport const validatePhonenumber = (inputtxt) => {\r\n    var phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\r\n    if (inputtxt.match(phoneno)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport ScrollIntoView from 'react-scroll-into-view';\r\nimport { FaPencilAlt, FaTrashAlt } from 'react-icons/fa';\r\n\r\nclass TableManageUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            keyForm: [],\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        // this.props.fetchAllUSerRedux();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.allUserRedux !== this.props.allUserRedux) {\r\n            this.setState({\r\n                users: this.props.allUserRedux,\r\n            });\r\n        }\r\n    }\r\n    handleClickDestroyUser = (userId) => {\r\n        this.props.toggleModelConfirm(userId);\r\n    };\r\n\r\n    convertKeyToValue = (itemId, arrData) => {\r\n        if (!itemId || arrData?.length <= 0) return '';\r\n        for (let item of arrData) {\r\n            if (item.keyMap === itemId) {\r\n                return item.valueVi;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"users-table \">\r\n                    <table className=\"table table-hover\">\r\n                        <tbody>\r\n                            <tr className=\"fixedTop\">\r\n                                <th>STT</th>\r\n                                <th>Email</th>\r\n                                <th>Họ tên</th>\r\n                                <th>Giới tính</th>\r\n                                <th>Địa chỉ</th>\r\n                                <th>Chức vụ</th>\r\n                                <th>Hành động</th>\r\n                            </tr>\r\n                            {this.props.users.map((user, index) => {\r\n                                return (\r\n                                    <tr key={user.id}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{`${user.firstName} ${user.lastName}`}</td>\r\n                                        <td>\r\n                                            {this.convertKeyToValue(user.gender, this.props?.keyForm?.genders || []) ||\r\n                                                ''}\r\n                                        </td>\r\n                                        <td>{user.address || ''}</td>\r\n                                        <td>\r\n                                            {this.convertKeyToValue(user.roleId, this.props?.keyForm?.roles || []) ||\r\n                                                ''}\r\n                                        </td>\r\n                                        <td className=\"dfc\">\r\n                                            <ScrollIntoView selector=\"#user-redux\">\r\n                                                <button\r\n                                                    className=\" trans btn btn-edit\"\r\n                                                    onClick={() => {\r\n                                                        this.props.handleClickEditUser(user);\r\n                                                    }}\r\n                                                >\r\n                                                    <FaPencilAlt />\r\n                                                </button>\r\n                                            </ScrollIntoView>\r\n                                            <button\r\n                                                className=\" trans btn btn-delete\"\r\n                                                // onClick={() => this.handleDeleteUser(user.id)}\r\n                                                onClick={() => this.handleClickDestroyUser(user.id)}\r\n                                            >\r\n                                                <FaTrashAlt />\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        allUserRedux: state.admin.allUser,\r\n        keyForm: state.admin.keyForm,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAllUSerRedux: () => dispatch(actions.filterAndPagingUserRedux()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getStorage } from 'firebase/storage';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    // apiKey: 'AIzaSyAcn1a3DjNLJNHwUbuFcBDri5-WqEtBpcI',\r\n    // authDomain: 'bookingcare-6a74c.firebaseapp.com',\r\n    // projectId: 'bookingcare-6a74c',\r\n    // storageBucket: 'bookingcare-6a74c.appspot.com',\r\n    // messagingSenderId: '932898808657',\r\n    // appId: '1:932898808657:web:4a048f799273e2a18ae970',\r\n    // measurementId: 'G-VRTHPLG46M',\r\n    apiKey: 'AIzaSyCkiby-W_Yxmx4gRr-fFBafN3M-lrk4Mig',\r\n    authDomain: 'cloudbookingcare.firebaseapp.com',\r\n    projectId: 'cloudbookingcare',\r\n    storageBucket: 'cloudbookingcare.appspot.com',\r\n    messagingSenderId: '180156615416',\r\n    appId: '1:180156615416:web:395cec2fa6df1765c9890d',\r\n    measurementId: 'G-1EJ1DX7BGF',\r\n};\r\n// Initialize Firebase\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const storage = getStorage(app);\r\n","import { storage } from './configFirebase';\r\nimport { ref, getDownloadURL, uploadBytesResumable } from 'firebase/storage';\r\n\r\nexport const uploadFileToFirebase = async (path, file) => {\r\n    let downloadURL = 'no-image';\r\n    let storageRef = ref(storage, `${path}/${file.name}`);\r\n    await uploadBytesResumable(storageRef, file);\r\n    downloadURL = await getDownloadURL(ref(storage, `${path}/${file.name}`));\r\n    return downloadURL;\r\n};\r\n\r\nexport const uploadMultiFileToFirebase = async (arrFiles) => {\r\n    let listFile = {};\r\n    await Promise.all(\r\n        arrFiles.map(async (item) => {\r\n            let storageRef = ref(storage, `${item.path}/${item.file.name}`);\r\n            await uploadBytesResumable(storageRef, item.file);\r\n            let downloadURL = await getDownloadURL(ref(storage, `${item.path}/${item.file.name}`));\r\n            listFile[item.name] = downloadURL;\r\n        }),\r\n    );\r\n    return listFile;\r\n};\r\n","import React, { Component } from 'react';\r\n// import { FormattedMessage } from 'react-intl';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nimport { LANGUAGES, CRUD_ACTIONS, PATH_FIREBASE } from '../../utils';\r\nimport { uploadFileToFirebase } from '../../firebase/uploadFile';\r\nimport { editUserServices, createUserServices } from '../../services/userServices';\r\n\r\nimport './Admin/UserRedux.scss';\r\nimport { FaFileUpload } from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\nimport './Modal.scss';\r\n\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass ModalUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: {},\r\n        };\r\n    }\r\n\r\n    componentDidMount() {}\r\n    componentDidUpdate() {}\r\n\r\n    toggle = () => {\r\n        this.props.toggleModel();\r\n    };\r\n\r\n    handleClickSubmit = async () => {\r\n        let { file } = this.props.data;\r\n        let imageURL = '';\r\n        if (!file) return;\r\n        if (Object.keys(file).length > 0) {\r\n            // await uploadFileToFirebase(PATH_FIREBASE.USER, file, this.handleSaveUser);\r\n            imageURL = await uploadFileToFirebase(PATH_FIREBASE.USER, file);\r\n        }\r\n\r\n        this.handleSaveUser(imageURL);\r\n    };\r\n\r\n    handleSaveUser = async (imageURL) => {\r\n        let checkValidate = this.checkValidate();\r\n        let response = '';\r\n        if (!checkValidate) return;\r\n        if (this.props.data.currentAction === CRUD_ACTIONS.CREATE) {\r\n            response = await createUserServices({\r\n                email: this.props.data.email,\r\n                password: this.props.data.password,\r\n                firstName: this.props.data.firstName,\r\n                lastName: this.props.data.lastName,\r\n                address: this.props.data.address,\r\n                phoneNumber: this.props.data.phoneNumber,\r\n                gender: this.props.data.gender,\r\n                position: this.props.data.position,\r\n                roleId: this.props.data.roleId,\r\n                // avatar: this.props.data.avatar,\r\n                fileURL: imageURL,\r\n            });\r\n        }\r\n        if (this.props.data.currentAction === CRUD_ACTIONS.EDIT) {\r\n            response = await editUserServices({\r\n                id: this.props.data.currentIdUserEdit,\r\n                email: this.props.data.email,\r\n                password: this.props.data.password,\r\n                firstName: this.props.data.firstName,\r\n                lastName: this.props.data.lastName,\r\n                address: this.props.data.address,\r\n                phoneNumber: this.props.data.phoneNumber,\r\n                gender: this.props.data.gender,\r\n                position: this.props.data.position,\r\n                roleId: this.props.data.roleId,\r\n                fileURL: imageURL,\r\n            });\r\n        }\r\n\r\n        if (response?.errorCode === 0) {\r\n            this.props.refreshForm();\r\n\r\n            this.props.handleRefreshTable();\r\n            this.props.toggleModel();\r\n            toast.success(response?.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        } else {\r\n            toast.error(response?.message || 'Đã có lỗi xảy ra! Vui lòng thử lại.', {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n\r\n    checkValidate = () => {\r\n        let check = true;\r\n        const inputs = [\r\n            { field: 'email', text: 'Chưa điền email' },\r\n            { field: 'firstName', text: 'Chưa điền Họ' },\r\n            { field: 'lastName', text: 'Chưa điền tên' },\r\n            { field: 'address', text: 'Chưa điền địa chỉ' },\r\n            { field: 'password', text: 'Chưa điền mật khẩu' },\r\n            // { field: 'gender', text: 'Chưa chọn giới tính' },\r\n            // { field: 'position', text: 'Chưa chọn chuyên khoa' },\r\n            // { field: 'roleId', text: 'Chưa điền thông tin giới thiệu bác sĩ' },\r\n        ];\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            if (!this.props.data[inputs[i]['field']]) {\r\n                check = false;\r\n                // this.setState({\r\n                //     error[[inputs[i]['field']]:[inputs[i]['text']\r\n                // })\r\n                toast.warning(inputs[i]['text'], {\r\n                    position: 'top-right',\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                break;\r\n            }\r\n        }\r\n        return check;\r\n    };\r\n\r\n    render() {\r\n        let { languageRedux } = this.props;\r\n        let {\r\n            email,\r\n            firstName,\r\n            lastName,\r\n            address,\r\n            password,\r\n            phoneNumber,\r\n            genders,\r\n            positions,\r\n            roles,\r\n            gender,\r\n            position,\r\n            roleId,\r\n            currentAction,\r\n        } = this.props.data;\r\n        console.log(languageRedux);\r\n        return (\r\n            <>\r\n                <Modal\r\n                    className=\"modal-user-container\"\r\n                    isOpen={this.props.isOpenModel}\r\n                    toggle={() => this.toggle()}\r\n                    size=\"lg\"\r\n                    centered={true}\r\n                >\r\n                    <ModalHeader toggle={() => this.toggle()}>Thêm mới người dùng</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"user-redux-body\">\r\n                            <div className=\"container\">\r\n                                <div className=\"form-container\">\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputEmail4\">\r\n                                                <FormattedMessage id=\"manage-user.email\" />\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Email\"\r\n                                                value={email}\r\n                                                onChange={(e) => this.props.handleOnchangeInput(e, 'email')}\r\n                                                disabled={currentAction === CRUD_ACTIONS.EDIT ? true : false}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputPassword4\">\r\n                                                <FormattedMessage id=\"manage-user.password\" />\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Password\"\r\n                                                value={password}\r\n                                                onChange={(e) => this.props.handleOnchangeInput(e, 'password')}\r\n                                                disabled={currentAction === CRUD_ACTIONS.EDIT ? true : false}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputEmail4\">\r\n                                                <FormattedMessage id=\"manage-user.firstName\" />\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"First name\"\r\n                                                value={firstName}\r\n                                                onChange={(e) => this.props.handleOnchangeInput(e, 'firstName')}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputPassword4\">\r\n                                                <FormattedMessage id=\"manage-user.lastName\" />\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Last name\"\r\n                                                value={lastName}\r\n                                                onChange={(e) => this.props.handleOnchangeInput(e, 'lastName')}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"form-group col-md-9\">\r\n                                            <label htmlFor=\"inputAddress\">\r\n                                                <FormattedMessage id=\"manage-user.address\" />\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"1234 Main St\"\r\n                                                value={address}\r\n                                                onChange={(e) => this.props.handleOnchangeInput(e, 'address')}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-3\">\r\n                                            <label htmlFor=\"inputPassword4\">\r\n                                                <FormattedMessage id=\"manage-user.phoneNumber\" />\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"098\"\r\n                                                value={phoneNumber}\r\n                                                onChange={(e) => this.props.handleOnchangeInput(e, 'phoneNumber')}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"form-group col-md-3\">\r\n                                            <label htmlFor=\"inputState\">\r\n                                                <FormattedMessage id=\"manage-user.gender\" />\r\n                                            </label>\r\n                                            <select\r\n                                                id=\"inputState\"\r\n                                                className=\"form-control\"\r\n                                                onChange={(e) => this.props.handleOnchangeInput(e, 'gender')}\r\n                                                value={gender}\r\n                                            >\r\n                                                {genders &&\r\n                                                    genders.length > 0 &&\r\n                                                    genders.map((gender) => {\r\n                                                        return (\r\n                                                            <option key={gender.id} value={gender.keyMap}>\r\n                                                                {languageRedux === LANGUAGES.VI\r\n                                                                    ? gender.valueVi\r\n                                                                    : gender.valueEn}\r\n                                                            </option>\r\n                                                        );\r\n                                                    })}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-3\">\r\n                                            <label htmlFor=\"inputState\">Position</label>\r\n\r\n                                            <select\r\n                                                value={position}\r\n                                                id=\"inputState\"\r\n                                                className=\"form-control\"\r\n                                                onChange={(e) => this.props.handleOnchangeInput(e, 'position')}\r\n                                            >\r\n                                                {positions &&\r\n                                                    positions.length > 0 &&\r\n                                                    positions.map((position) => {\r\n                                                        return (\r\n                                                            <option key={position.id} value={position.keyMap}>\r\n                                                                {languageRedux === LANGUAGES.VI\r\n                                                                    ? position.valueVi\r\n                                                                    : position.valueEn}\r\n                                                            </option>\r\n                                                        );\r\n                                                    })}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-3\">\r\n                                            <label htmlFor=\"inputState\">Role</label>\r\n                                            <select\r\n                                                value={roleId}\r\n                                                id=\"inputState\"\r\n                                                className=\"form-control\"\r\n                                                onChange={(e) => this.props.handleOnchangeInput(e, 'roleId')}\r\n                                            >\r\n                                                {roles &&\r\n                                                    roles.length > 0 &&\r\n                                                    roles.map((role) => {\r\n                                                        return (\r\n                                                            <option key={role.id} value={role.keyMap}>\r\n                                                                {languageRedux === LANGUAGES.VI\r\n                                                                    ? role.valueVi\r\n                                                                    : role.valueEn}\r\n                                                            </option>\r\n                                                        );\r\n                                                    })}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-3 upload-file-container\">\r\n                                            <label htmlFor=\"inputCity\">\r\n                                                <FormattedMessage id=\"manage-user.image\" />\r\n                                            </label>\r\n                                            <div className=\"btn-container\">\r\n                                                <div className=\"change-image\">\r\n                                                    <input\r\n                                                        id=\"uploadFile\"\r\n                                                        type=\"file\"\r\n                                                        className=\"form-control\"\r\n                                                        accept=\".jpg, .jpeg, .png\"\r\n                                                        hidden\r\n                                                        onChange={(e) => this.props.handleOnchangeImage(e)}\r\n                                                    />\r\n                                                    <label className=\"text-upload\" htmlFor=\"uploadFile\">\r\n                                                        <FormattedMessage id=\"manage-user.uploadImage\" />\r\n                                                        <FaFileUpload className=\"icon-upload\" />\r\n                                                    </label>\r\n                                                </div>\r\n                                                {this.props.data.isShowBoxImage && (\r\n                                                    <div\r\n                                                        className=\"preview\"\r\n                                                        style={{\r\n                                                            backgroundImage: `url(${this.props.data.previewImageUrl})`,\r\n                                                        }}\r\n                                                        onClick={() => this.props.handleShowPreviewAvatar()}\r\n                                                    ></div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button\r\n                            type=\"text\"\r\n                            className={\r\n                                this.props.data.currentAction === CRUD_ACTIONS.EDIT\r\n                                    ? 'btn btn-warning'\r\n                                    : 'btn btn-primary'\r\n                            }\r\n                            onClick={() => this.handleClickSubmit()}\r\n                        >\r\n                            {this.props.data.currentAction === CRUD_ACTIONS.EDIT ? (\r\n                                <FormattedMessage id=\"manage-user.edit\" />\r\n                            ) : (\r\n                                <FormattedMessage id=\"manage-user.save\" />\r\n                            )}\r\n                        </button>\r\n                        <Button className=\"button btn btn-cancel\" color=\"secondary\" onClick={() => this.toggle()}>\r\n                            Cancel\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        keyForm: state.admin.keyForm,\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchKeyFromRedux: () => dispatch(actions.fetchKeyForm()),\r\n        fetchAllUSerRedux: () => dispatch(actions.filterAndPagingUserRedux()),\r\n        createNewUser: (dataUser) => dispatch(actions.createNewUserRedux(dataUser)),\r\n        editUserRedux: (user) => dispatch(actions.editUserRedux(user)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { confirmRemedyService } from '../../services/doctorServices';\r\nimport _ from 'lodash';\r\n\r\nclass ModalConfirm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emailPatient: '',\r\n            title: 'Đơn của bạn đã bị huỷ',\r\n            reason: 'Do ko đến khám',\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { currentPatient } = this.props;\r\n        if (currentPatient && !_.isEmpty(currentPatient) && currentPatient.dataAcc.email) {\r\n            this.setState({\r\n                emailPatient: currentPatient.dataAcc.email,\r\n            });\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {}\r\n    toggle = () => {\r\n        this.props.toggleModelConfirm();\r\n    };\r\n    handleChangeInput = (e, key) => {\r\n        this.setState({\r\n            [key]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleDestroy = async () => {\r\n        let { emailPatient, title, reason } = this.state;\r\n        let { currentPatient, doctorId, initDate, languageRedux, type, currentUserId } = this.props;\r\n        if (type === 'cancel-appointment') {\r\n            this.setState({\r\n                isLoading: true,\r\n            });\r\n            let response = await confirmRemedyService({\r\n                email: emailPatient,\r\n                title,\r\n                reason,\r\n                doctorId: currentPatient.doctorId,\r\n                patientId: currentPatient.patientId,\r\n                timeType: currentPatient.timeType,\r\n                namePatient: currentPatient.namePatient,\r\n                exactTime: currentPatient.timeAppointment,\r\n                dataAccDoctor: currentPatient.dataAccDoctor,\r\n                language: languageRedux,\r\n                isDestroyAppointment: true,\r\n            });\r\n            if (response && response.errorCode === 0) {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    title: '',\r\n                    email: '',\r\n                    reason: '',\r\n                    isDestroyAppointment: false,\r\n                });\r\n                toast.success(response.message, {\r\n                    position: 'top-right',\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                this.props.toggleModelConfirm();\r\n                await this.props.getAppointmentDoctorRedux(doctorId, initDate, this.props.statusIdRedux);\r\n            } else {\r\n                toast.error('Some thing wrong, pls again', {\r\n                    position: 'top-right',\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } else {\r\n            this.props.handleDeleteItem(currentUserId);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { isShowModalConfirm, type, text, size } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <Modal\r\n                    className=\"modal-booking-container\"\r\n                    isOpen={isShowModalConfirm}\r\n                    toggle={() => this.toggle()}\r\n                    size={size || 'lg'}\r\n                    centered={true}\r\n                >\r\n                    <ModalHeader toggle={() => this.toggle()}>Bạn thật sự muốn xoá</ModalHeader>\r\n                    <ModalBody>\r\n                        {' '}\r\n                        {type === 'cancel-appointment' ? (\r\n                            <div>\r\n                                <div className=\"form-row \">\r\n                                    <div className=\"form-group col-5\">\r\n                                        <label>Email bệnh nhân</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Email patient\"\r\n                                            onChange={(e) => this.handleChangeInput(e, 'emailPatient')}\r\n                                            value={this.state.emailPatient}\r\n                                        />\r\n                                    </div>\r\n                                    {type === 'cancel-appointment' && (\r\n                                        <div className=\"form-group col-md-7\">\r\n                                            <label htmlFor=\"inputCity\">Tiêu đề mail</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"reason\"\r\n                                                onChange={(e) => this.handleChangeInput(e, 'title')}\r\n                                                value={this.state.title}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <textarea\r\n                                    className=\"info-doctor form-control\"\r\n                                    rows=\"4\"\r\n                                    onChange={(e) => this.handleChangeInput(e, 'reason')}\r\n                                    value={this.state.reason}\r\n                                    placeholder=\"Lý do\"\r\n                                ></textarea>\r\n                            </div>\r\n                        ) : (\r\n                            <p>{text}</p>\r\n                        )}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button className=\" button btn-save\" color=\"danger\" onClick={() => this.handleDestroy()}>\r\n                            Xoá\r\n                        </Button>{' '}\r\n                        <Button className=\"button btn btn-cancel\" color=\"success\" onClick={() => this.toggle()}>\r\n                            <FormattedMessage id=\"appointment.cancel\" />\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        listAppointmentRedux: state.doctor.listAppointment,\r\n        statusIdRedux: state.doctor.statusId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAppointmentDoctorRedux: (doctorId, initDate, statusId) =>\r\n            dispatch(actions.getAppointmentDoctor(doctorId, initDate, statusId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalConfirm);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './SearchInput.scss';\r\nimport { IoSearchOutline } from 'react-icons/io5';\r\n\r\nclass SearchInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: '',\r\n        };\r\n        this.timer = null;\r\n    }\r\n    componentDidMount() {}\r\n    componentDidUpdate() {}\r\n\r\n    handleOnChangeInput = (input) => {\r\n        let { delay } = this.props;\r\n\r\n        this.setState({\r\n            keyword: input,\r\n        });\r\n        clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n            this.props.handleSearch(this.state.keyword.trim());\r\n        }, delay || 500);\r\n    };\r\n\r\n    render() {\r\n        let { placeholder } = this.props;\r\n        let { keyword } = this.state;\r\n        return (\r\n            <div className=\"search-input\">\r\n                <div className=\"wrapper-search\">\r\n                    <input\r\n                        placeholder={placeholder || 'Tìm kiếm...'}\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={keyword}\r\n                        onChange={(e) => this.handleOnChangeInput(e.target.value)}\r\n                    />\r\n                    <div className=\"icon\">\r\n                        <IoSearchOutline />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './FooterPaging.scss';\r\nimport { IoChevronBack, IoChevronForwardOutline } from 'react-icons/io5';\r\n\r\nclass FooterPaging extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pages: [],\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        let { TotalPage, PageIndex, TotalRecord } = this.props;\r\n\r\n        this.setState({\r\n            pages: this.handleArrPaging(TotalPage, PageIndex, TotalRecord),\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        let { TotalPage, PageIndex, TotalRecord } = this.props;\r\n        if (prevProps.TotalRecord !== this.props.TotalRecord) {\r\n            this.setState({\r\n                pages: this.handleArrPaging(TotalPage, PageIndex, TotalRecord),\r\n            });\r\n        }\r\n        if (prevProps.PageIndex !== this.props.PageIndex) {\r\n            this.setState({\r\n                pages: this.handleArrPaging(TotalPage, PageIndex, TotalRecord),\r\n            });\r\n        }\r\n    }\r\n\r\n    handleArrPaging = (TotalPage, PageIndex, TotalRecord) => {\r\n        let pagesToShow = []; // Các trang cần hiển thị\r\n        // Tính toán các trang cần hiển thị\r\n        if (TotalRecord < PageIndex) {\r\n            pagesToShow = [1];\r\n        } else if (TotalPage < 5) {\r\n            for (let i = 1; i <= TotalPage; i++) {\r\n                pagesToShow.push(i);\r\n            }\r\n        } else {\r\n            if (PageIndex < 3) {\r\n                pagesToShow = [1, 2, 3, null, TotalPage];\r\n            } else if (PageIndex >= TotalPage - 2) {\r\n                pagesToShow = [1, null, TotalPage - 2, TotalPage - 1, TotalPage];\r\n            } else {\r\n                pagesToShow = [1, null, PageIndex, PageIndex + 1, PageIndex + 2, null, TotalPage];\r\n            }\r\n        }\r\n        return pagesToShow;\r\n    };\r\n\r\n    render() {\r\n        let { titleTotalRecord, PageIndex, TotalRecord } = this.props;\r\n        let { pages } = this.state;\r\n\r\n        return (\r\n            <div className=\"footer-paging\">\r\n                <div className=\"wrapper-page df\">\r\n                    <div className=\"total-count df\">\r\n                        <p className=\"text-total\">{titleTotalRecord || 'Tổng bản ghi'}:&nbsp; </p>{' '}\r\n                        <p className=\"total\"> {TotalRecord}</p>\r\n                    </div>\r\n                    <div className=\"paging-container df\">\r\n                        <div className=\"control-change-page df\">\r\n                            <div\r\n                                className=\"btn-back btn-control-page\"\r\n                                onClick={() => this.props.handleChangePage('back')}\r\n                            >\r\n                                <IoChevronBack />\r\n                            </div>\r\n                            <div className=\"pages-container df\">\r\n                                {pages.length > 0 ? (\r\n                                    pages.map((page, index) => {\r\n                                        let classPage = 'pageNumber';\r\n                                        if (PageIndex == page) classPage = 'pageNumber pageActive';\r\n                                        return page ? (\r\n                                            <div\r\n                                                className={classPage}\r\n                                                key={index}\r\n                                                onClick={() => this.props.handleChangePage(+page)}\r\n                                            >\r\n                                                {page}\r\n                                            </div>\r\n                                        ) : (\r\n                                            <p className=\"pageNumber\" key={index}>\r\n                                                ...\r\n                                            </p>\r\n                                        );\r\n                                    })\r\n                                ) : (\r\n                                    <div className=\"pageNumber pageActive\">1</div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div\r\n                                className=\"btn-next btn-control-page\"\r\n                                onClick={() => this.props.handleChangePage('next')}\r\n                            >\r\n                                <IoChevronForwardOutline />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FooterPaging);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './SelectStatusId.scss';\r\n\r\nclass SelectStatusId extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    async componentDidMount() {}\r\n    componentDidUpdate(prevProps) {}\r\n\r\n    render() {\r\n        let { listSelect, statusId, handleChangeInput } = this.props;\r\n        return (\r\n            <div className=\"select-container\">\r\n                {listSelect &&\r\n                    listSelect.map((item, index) => {\r\n                        return (\r\n                            <div\r\n                                className={\r\n                                    statusId === item.id\r\n                                        ? `form-check form-check-inline select-active`\r\n                                        : 'form-check form-check-inline'\r\n                                }\r\n                                key={index}\r\n                            >\r\n                                <input\r\n                                    className=\"form-check-input radio-outline\"\r\n                                    type=\"radio\"\r\n                                    name=\"inlineRadioOptions\"\r\n                                    id={`id-${item.id}`}\r\n                                    value={item.id}\r\n                                    checked={statusId === item.id}\r\n                                    onChange={(e) => handleChangeInput(e.target.value)}\r\n\r\n                                    // hidden\r\n                                />\r\n                                <label className=\"form-check-label\" htmlFor={`id-${item.id}`}>\r\n                                    {item.text}\r\n                                </label>\r\n                            </div>\r\n                        );\r\n                    })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectStatusId);\r\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions';\nimport 'react-image-lightbox/style.css';\nimport TableManageUser from './TableManageUser';\nimport { toast } from 'react-toastify';\nimport { deleteUserServices, filterAndPagingUser } from '../../../services';\nimport actionTypes from '../../../store/actions/actionTypes';\n\nimport { CRUD_ACTIONS, CommonUtils } from '../../../utils';\n\nimport './UserRedux.scss';\n\nimport ModalUser from '../ModalUser';\nimport ModalConfirm from '../ModalConfirm.js';\nimport SearchInput from '../../../components/SearchInput.js';\nimport FooterPaging from '../../../components/FooterPaging.js';\nimport SelectStatusId from '../../../components/SelectStatusId';\nimport Loading from '../../../components/Loading';\n\nclass UserRedux extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            genders: [],\n            positions: [],\n            roles: [],\n            previewImageUrl: '',\n            isShowBoxImage: false,\n            isRoomImage: false,\n\n            file: {},\n            fileURL: '',\n\n            email: '',\n            password: '',\n            firstName: '',\n            lastName: '',\n            address: '',\n            phoneNumber: '',\n            gender: '',\n            position: '',\n            roleId: '',\n            avatar: '',\n\n            currentAction: CRUD_ACTIONS.CREATE,\n            currentIdUserEdit: '',\n            isOpenModel: false, // model create user\n            isShowModalConfirm: false, // model confirm\n            currentUserId: '',\n\n            users: [],\n            totalPage: 1, // toltalPage\n            count: 1,\n\n            keywordSearchUser: '',\n            roleIdSelected: '', // roleId filter\n            PageIndex: 1,\n            limit: 10,\n\n            isShowLoading: false,\n        };\n    }\n\n    async componentDidMount() {\n        this.props.fetchKeyFromRedux();\n        await this.handleRefreshTable();\n    }\n\n    reRenderFilterAndPaging = async (keywordSearchUser, roleIdSelected, PageIndex, limit) => {\n        this.isShowLoading();\n        let response = await filterAndPagingUser({\n            keyword: keywordSearchUser,\n            roleId: roleIdSelected,\n            page: PageIndex,\n            limit,\n        });\n        if (response && response.errorCode === 0) {\n            this.setState({\n                keywordSearchUser: keywordSearchUser,\n                roleIdSelected: roleIdSelected,\n                PageIndex: PageIndex,\n                limit: limit,\n                totalPage: response.data.totalPage,\n                count: response.data.count,\n                users: response.data.rows,\n                isShowLoading: false,\n            });\n        }\n    };\n\n    handleRefreshTable = async () => {\n        let { keywordSearchUser, roleIdSelected, PageIndex, limit } = this.state;\n        await this.reRenderFilterAndPaging(keywordSearchUser, roleIdSelected, PageIndex, limit);\n    };\n\n    async componentDidUpdate(prevProps) {\n        if (prevProps.keyForm !== this.props.keyForm) {\n            let { genders, positions, roles } = this.props.keyForm;\n            this.setState({\n                genders: genders,\n                positions: positions,\n                roles: roles,\n\n                gender: genders && genders.length > 0 ? genders[0].keyMap : '',\n                position: positions && positions.length > 0 ? positions[0].keyMap : '',\n                roleId: roles && roles.length > 0 ? roles[0].keyMap : '',\n            });\n        }\n    }\n\n    handleToggleModel = () => {\n        this.setState({ isOpenModel: !this.state.isOpenModel });\n    };\n\n    handleOnchangeImage = async (e) => {\n        let data = e.target.files;\n        let file = data[0];\n\n        if (file) {\n            let base64 = await CommonUtils.getBase64(file);\n            let objectUrl = URL.createObjectURL(file);\n            this.setState({ previewImageUrl: objectUrl, isShowBoxImage: true, avatar: base64, file: file });\n        }\n    };\n\n    handleClickEditUser = (dataUser) => {\n        this.setState({\n            email: dataUser.email,\n            firstName: dataUser.firstName || '',\n            lastName: dataUser.lastName || '',\n            address: dataUser.address || '',\n            password: '123456',\n            phoneNumber: dataUser.phoneNumber || '',\n            gender: dataUser.gender,\n            position: dataUser.position,\n            roleId: dataUser.roleId,\n            previewImageUrl: dataUser.imageURL,\n            isShowBoxImage: true,\n\n            currentAction: CRUD_ACTIONS.EDIT,\n            currentIdUserEdit: dataUser.id,\n        });\n        this.handleToggleModel();\n    };\n\n    handleShowModal = () => {\n        this.handleToggleModel();\n        this.setState({ currentAction: CRUD_ACTIONS.CREATE, previewImageUrl: '', isShowBoxImage: false });\n    };\n\n    handleShowPreviewAvatar = () => {\n        this.setState({ isRoomImage: true });\n    };\n    handleOnchangeInput = (e, key) => {\n        let copyState = { ...this.state };\n        copyState[key] = e.target.value;\n        this.setState({\n            ...copyState,\n        });\n    };\n    toggleModelConfirm = (userId) => {\n        this.setState({\n            isShowModalConfirm: !this.state.isShowModalConfirm,\n            currentUserId: userId,\n        });\n    };\n\n    handleSearchUser = (currentKeyword) => {\n        let { roleIdSelected, limit } = this.state;\n        try {\n            console.log(currentKeyword);\n            this.reRenderFilterAndPaging(currentKeyword, roleIdSelected, 1, limit);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    handleChangePage = async (numberPage) => {\n        let { keywordSearchUser, roleIdSelected, PageIndex, limit, totalPage } = this.state;\n\n        if (numberPage === 'next') {\n            if (+PageIndex < +totalPage) {\n                console.log('next');\n                this.reRenderFilterAndPaging(keywordSearchUser, roleIdSelected, +this.state.PageIndex + 1, limit);\n                this.setState({\n                    PageIndex: this.state.PageIndex + 1,\n                });\n            }\n        } else if (numberPage === 'back') {\n            if (+PageIndex > 1) {\n                console.log('back');\n                this.reRenderFilterAndPaging(keywordSearchUser, roleIdSelected, +this.state.PageIndex - 1, limit);\n                this.setState({\n                    PageIndex: this.state.PageIndex - 1,\n                });\n            }\n        } else {\n            this.setState({\n                PageIndex: +numberPage,\n            });\n            this.reRenderFilterAndPaging(keywordSearchUser, roleIdSelected, numberPage, limit);\n        }\n    };\n\n    // delete user:\n    deleteUser = async (userId) => {\n        try {\n            let { keywordSearchUser, roleIdSelected, PageIndex, limit } = this.state;\n            let res = await deleteUserServices(userId);\n            if (res && res.errorCode === 0) {\n                toast.success(res?.message, {\n                    position: 'top-right',\n                    autoClose: 3000,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                this.setState({\n                    isShowModalConfirm: !this.state.isShowModalConfirm,\n                    currentUserId: '',\n                });\n\n                await this.reRenderFilterAndPaging(keywordSearchUser, roleIdSelected, PageIndex, limit);\n            } else {\n                toast.error(res.message, {\n                    position: 'top-right',\n                    autoClose: 3000,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        } catch (error) {\n            console.log('delete user fail: ', error);\n        }\n    };\n\n    refreshForm = () => {\n        let { genders, positions, roles } = this.props.keyForm;\n        this.setState({\n            email: '',\n            password: '',\n            firstName: '',\n            lastName: '',\n            address: '',\n            phoneNumber: '',\n            avatar: '',\n\n            gender: genders && genders.length > 0 ? genders[0].keyMap : '',\n            position: positions && positions.length > 0 ? positions[0].keyMap : '',\n            roleId: roles && roles.length > 0 ? roles[0].keyMap : '',\n        });\n    };\n\n    handleChangeInput = async (id) => {\n        // change input radio\n        let { keywordSearchUser, PageIndex, limit } = this.state;\n        this.reRenderFilterAndPaging(keywordSearchUser, id, PageIndex, limit);\n    };\n\n    isShowLoading = () => {\n        this.setState({\n            isShowLoading: true,\n        });\n    };\n    isHideLoading = () => {\n        this.setState({\n            isShowLoading: false,\n        });\n    };\n\n    render() {\n        let { isShowModalConfirm, users } = this.state;\n        let {} = this.props;\n\n        let listSelect = [\n            { text: <FormattedMessage id=\"admin.role.all\" />, id: '' },\n            { text: <FormattedMessage id=\"admin.role.admin\" />, id: 'R1' },\n            { text: <FormattedMessage id=\"admin.role.doctor\" />, id: 'R2' },\n            { text: <FormattedMessage id=\"admin.role.patient\" />, id: 'R3' },\n        ];\n\n        return (\n            <div className=\"user-redux-container position-loading\" id=\"user-redux\">\n                {this.state.isShowLoading && <Loading />}\n                <div className=\"title\">Quản lý người dùng</div>\n                <div className=\"wrapper-container\">\n                    <div className=\"action-modal\">\n                        <div className=\"df filter\">\n                            <SearchInput\n                                placeholder=\"Tìm kiếm...\"\n                                handleSearch={this.handleSearchUser}\n                                delay={800}\n                                className=\"mr8\"\n                            />\n                            <div className=\"filter-role ml8\">\n                                <SelectStatusId\n                                    handleChangeInput={this.handleChangeInput}\n                                    listSelect={listSelect}\n                                    appointment\n                                    statusId={this.state.roleIdSelected}\n                                />\n                            </div>\n                        </div>\n                        <button className=\"btn btn-primary btn-add-user\" onClick={() => this.handleShowModal()}>\n                            <FormattedMessage id=\"manage-user.add\" />\n                        </button>\n                    </div>\n                    <ModalUser\n                        isOpenModel={this.state.isOpenModel}\n                        toggleModel={this.handleToggleModel}\n                        data={this.state}\n                        handleOnchangeInput={this.handleOnchangeInput}\n                        handleOnchangeImage={this.handleOnchangeImage}\n                        handleShowPreviewAvatar={this.handleShowPreviewAvatar}\n                        handleRefreshTable={this.handleRefreshTable}\n                        refreshForm={this.refreshForm}\n                    />\n                    {/* {this.state.isRoomImage && (\n                        <Lightbox\n                            mainSrc={this.state.previewImageUrl}\n                            onCloseRequest={() => this.setState({ isRoomImage: false })}\n                        />\n                    )} */}\n                    <TableManageUser\n                        handleClickEditUser={this.handleClickEditUser}\n                        toggleModelConfirm={this.toggleModelConfirm}\n                        users={users}\n                    />\n                    <FooterPaging\n                        titleTotalRecord=\"Tổng người dùng\"\n                        TotalPage={this.state.totalPage}\n                        PageIndex={this.state.PageIndex}\n                        TotalRecord={this.state.count}\n                        handleChangePage={this.handleChangePage}\n                    />\n                    {isShowModalConfirm ? (\n                        <ModalConfirm\n                            toggleModel={this.toggleModel}\n                            isShowModalConfirm={isShowModalConfirm}\n                            toggleModelConfirm={this.toggleModelConfirm}\n                            handleDeleteItem={this.deleteUser}\n                            text=\"Xoá người dùng vĩnh viễn bạn chắc chắn chứ!\"\n                            type=\"confirm\"\n                            size=\"nm\"\n                            currentUserId={this.state.currentUserId}\n                        />\n                    ) : (\n                        ''\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        languageRedux: state.app.language,\n        keyForm: state.admin.keyForm,\n        allUserRedux: state.admin.allUser,\n        totalPageRedux: state.admin.totalPage,\n        countRedux: state.admin.count,\n        paramsSearchRedux: state.admin.paramsSearch,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchKeyFromRedux: () => dispatch(actions.fetchKeyForm()),\n        fetchAllUSerRedux: (paramsSearch) => dispatch(actions.filterAndPagingUserRedux(paramsSearch)),\n        editUserRedux: (user) => dispatch(actions.editUserRedux(user)),\n        setCurrentKeywordRedux: (keyword, page, limit, roleId) =>\n            dispatch({\n                type: actionTypes.SET_PARAMS_SEARCH,\n                data: { keyword, page, limit, roleId },\n            }),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nclass CKeditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataHtml: '',\r\n        };\r\n    }\r\n    componentDidMount() {}\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.value !== this.props.value) {\r\n            this.setState({\r\n                dataHtml: this.props.value,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleEditorChange } = this.props;\r\n\r\n        return (\r\n            <div className=\"editor-container\">\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    data={this.state.dataHtml}\r\n                    onReady={(editor) => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                    }}\r\n                    onChange={(event, editor) => {\r\n                        const data = editor.getData();\r\n                        this.setState({\r\n                            dataHtml: data,\r\n                        });\r\n                        handleEditorChange(data);\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CKeditor);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { LANGUAGES } from '../../../utils';\r\n\r\nimport './ManageDoctor.scss';\r\nimport Select from 'react-select';\r\nimport { toast } from 'react-toastify';\r\nimport { saveDetailDoctorServices } from '../../../services';\r\n\r\nimport CKeditor from '../../../components/CKeditor/CKeditor';\r\nimport Loading from '../../../components/Loading';\r\n\r\nclass ManageDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // Save to markdown table\r\n            contentHtml: '',\r\n            contentMarkdown: '',\r\n            selectedDoctor: '',\r\n            description: '',\r\n            allDoctor: [],\r\n            detailDoctor: {},\r\n            //save to doctor_infor table\r\n            listPrice: [],\r\n            listPayment: [],\r\n            listProvince: [],\r\n            listSpecialty: [],\r\n            listClinics: [],\r\n\r\n            selectedPrice: '',\r\n            selectedPayment: '',\r\n            selectedProvince: '',\r\n            selectedSpecialty: '',\r\n            selectedClinic: '',\r\n\r\n            addressClinic: '',\r\n            note: '',\r\n\r\n            isShowLoading: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchAllDoctorRedux();\r\n        this.props.fetchRelateToDoctorInforRedux();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.allDoctorRedux !== this.props.allDoctorRedux) {\r\n            let listDoctor = this.buildInputSelectName(this.props.allDoctorRedux);\r\n            this.setState({\r\n                allDoctor: listDoctor,\r\n            });\r\n        }\r\n        if (prevProps.languageRedux !== this.props.languageRedux) {\r\n            let listDoctor = this.buildInputSelectName(this.props.allDoctorRedux);\r\n            let allRelatedToDoctorInfor = this.props.DoctorRelatedInforRedux;\r\n\r\n            this.setState({\r\n                allDoctor: listDoctor,\r\n                listPrice: this.buildInputSelect(allRelatedToDoctorInfor.listPrice, 'currency'),\r\n                listPayment: this.buildInputSelect(allRelatedToDoctorInfor.listPayment),\r\n                listProvince: this.buildInputSelect(allRelatedToDoctorInfor.listProvince),\r\n                listClinics: this.buildInputSelect(allRelatedToDoctorInfor.listClinics, 'clinics'),\r\n                listSpecialty: this.buildInputSelect(allRelatedToDoctorInfor.listSpecialty, 'specialty'),\r\n            });\r\n        }\r\n        if (prevProps.DoctorRelatedInforRedux !== this.props.DoctorRelatedInforRedux) {\r\n            let allRelatedToDoctorInfor = this.props.DoctorRelatedInforRedux;\r\n            this.setState({\r\n                listPrice: this.buildInputSelect(allRelatedToDoctorInfor.listPrice, 'currency'),\r\n                listPayment: this.buildInputSelect(allRelatedToDoctorInfor.listPayment),\r\n                listProvince: this.buildInputSelect(allRelatedToDoctorInfor.listProvince),\r\n                listClinics: this.buildInputSelect(allRelatedToDoctorInfor.listClinics, 'clinics'),\r\n                listSpecialty: this.buildInputSelect(allRelatedToDoctorInfor.listSpecialty, 'specialty'),\r\n            });\r\n        }\r\n    }\r\n\r\n    buildInputSelectName = (data) => {\r\n        let result = [];\r\n        if (data && data.length > 0) {\r\n            result = data.map((item, index) => {\r\n                let object = {};\r\n                let labelVi = `${item.firstName} ${item.lastName}`;\r\n                let labelEn = `${item.lastName} ${item.firstName}`;\r\n                object.label = this.props.languageRedux === LANGUAGES.VI ? labelVi : labelEn;\r\n                object.value = item.id;\r\n                return object;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n    buildInputSelect = (data, type) => {\r\n        let result = [];\r\n        if (data && data.length > 0) {\r\n            result = data.map((item, index) => {\r\n                let object = {};\r\n                if (type === 'currency') {\r\n                    object.label =\r\n                        this.props.languageRedux === LANGUAGES.VI ? `${item.valueVi} VND` : `${item.valueEn} $`;\r\n                    object.value = item.keyMap;\r\n                } else if (type === 'specialty') {\r\n                    object.label = item.name;\r\n                    object.value = item.id;\r\n                } else if (type === 'clinics') {\r\n                    object.label = item.nameClinic;\r\n                    object.value = item.id;\r\n                } else {\r\n                    object.label = this.props.languageRedux === LANGUAGES.VI ? item.valueVi : item.valueEn;\r\n                    object.value = item.keyMap;\r\n                }\r\n                return object;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    findValueDefault = (key, data) => {\r\n        let result = '';\r\n        if (key && data) {\r\n            result = data.find((item) => item && item.value === key);\r\n            return result;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    handleChangeDoctor = async (selectedDoctor) => {\r\n        let doctorId = selectedDoctor.value;\r\n        await this.props.getDetailDoctorRedux(doctorId);\r\n        let { detailDoctorRedux } = this.props;\r\n        if (detailDoctorRedux) {\r\n            let Markdown = detailDoctorRedux.Markdown;\r\n            let doctor_infor = detailDoctorRedux.Doctor_Infor;\r\n\r\n            this.setState({\r\n                selectedDoctor: selectedDoctor,\r\n                detailDoctor: this.props.detailDoctorRedux,\r\n                contentHtml: Markdown.contentHTML || '',\r\n                contentMarkdown: Markdown.contentMarkdown || '',\r\n                description: Markdown.description || '',\r\n                nameClinic: doctor_infor.nameClinic || '',\r\n                addressClinic: doctor_infor.addressClinic || '',\r\n                note: doctor_infor.note || '',\r\n                selectedPrice: this.findValueDefault(doctor_infor.priceId, this.state.listPrice) || {},\r\n                selectedPayment: this.findValueDefault(doctor_infor.paymentId, this.state.listPayment) || {},\r\n                selectedProvince: this.findValueDefault(doctor_infor.provinceId, this.state.listProvince) || {},\r\n                selectedSpecialty: this.findValueDefault(doctor_infor.specialtyId, this.state.listSpecialty) || {},\r\n                selectedClinic: this.findValueDefault(doctor_infor.clinicData.id, this.state.listClinics) || {},\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeSelect = (select, nameKeyState) => {\r\n        this.setState({\r\n            [nameKeyState]: select,\r\n        });\r\n    };\r\n    handleChangeTextArea = (e) => {\r\n        this.setState({\r\n            description: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleEditorChange = (data) => {\r\n        this.setState({\r\n            contentHtml: data,\r\n        });\r\n    };\r\n\r\n    handleClickSave = async () => {\r\n        window.scrollTo(0, 0);\r\n        this.setState({\r\n            isShowLoading: true,\r\n        });\r\n        let data = {\r\n            contentHTML: this.state.contentHtml,\r\n            contentMarkdown: this.state.contentMarkdown,\r\n            description: this.state.description,\r\n            doctorId: this.state.selectedDoctor.value,\r\n            selectedPrice: this.state.selectedPrice.value,\r\n            selectedPayment: this.state.selectedPayment.value,\r\n            selectedProvince: this.state.selectedProvince.value,\r\n            selectedSpecialty: this.state.selectedSpecialty.value,\r\n            selectedClinic: this.state.selectedClinic.value,\r\n            nameClinic: this.state.selectedClinic.value,\r\n            addressClinic: this.state.addressClinic,\r\n            note: this.state.note,\r\n        };\r\n        let res = await saveDetailDoctorServices(data);\r\n        if (res && res.errorCode === 0) {\r\n            toast.success(res.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.setState({\r\n                contentHtml: '',\r\n                contentMarkdown: '',\r\n                selectedDoctor: '',\r\n                description: '',\r\n                //save to doctor_infor table\r\n                selectedPrice: '',\r\n                selectedPayment: '',\r\n                selectedProvince: '',\r\n                selectedSpecialty: '',\r\n                selectedClinic: '',\r\n\r\n                addressClinic: '',\r\n                note: '',\r\n            });\r\n        } else {\r\n            toast.error(res.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n        this.setState({\r\n            isShowLoading: false,\r\n        });\r\n    };\r\n\r\n    onChangeInput = (key, value) => {\r\n        this.setState({\r\n            [key]: value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            allDoctor,\r\n            description,\r\n            contentHtml,\r\n            listPrice,\r\n            listPayment,\r\n            listProvince,\r\n            listSpecialty,\r\n            listClinics,\r\n\r\n            addressClinic,\r\n            note,\r\n            selectedPrice,\r\n            selectedPayment,\r\n            selectedProvince,\r\n            selectedSpecialty,\r\n            selectedClinic,\r\n            isShowLoading,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"manage-doctor-container position-loading\">\r\n                {isShowLoading && <Loading />}\r\n                <div className=\"wrapper-manager-doctor w60\">\r\n                    <div className=\"manage-doctor-title title\">\r\n                        <h3>\r\n                            <FormattedMessage id=\"admin.manage-doctor.title\" />\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"container-infor-doctor \">\r\n                        <div className=\"form-row\">\r\n                            <div className=\" form-group col-md-6\">\r\n                                <label>\r\n                                    <FormattedMessage id=\"admin.manage-doctor.select-doctor\" />\r\n                                </label>\r\n                                <Select\r\n                                    placeholder={<FormattedMessage id=\"admin.manage-doctor.select-doctor\" />}\r\n                                    onChange={(e) => this.handleChangeDoctor(e)}\r\n                                    options={allDoctor}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6 \">\r\n                                <label>\r\n                                    <FormattedMessage id=\"admin.manage-doctor.select-province\" />\r\n                                </label>\r\n                                <Select\r\n                                    placeholder={<FormattedMessage id=\"admin.manage-doctor.select-province\" />}\r\n                                    onChange={(e) => this.handleChangeSelect(e, 'selectedProvince')}\r\n                                    options={listProvince}\r\n                                    value={selectedProvince}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label forhtml=\"inputEmail4\">\r\n                                <FormattedMessage id=\"admin.manage-doctor.name-clinic\" />\r\n                            </label>\r\n\r\n                            <Select\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.select-price\" />}\r\n                                onChange={(e) => this.handleChangeSelect(e, 'selectedClinic')}\r\n                                options={listClinics}\r\n                                value={selectedClinic}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label forhtml=\"inputPassword4\">\r\n                                <FormattedMessage id=\"admin.manage-doctor.address-clinic\" />\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"inputPassword4\"\r\n                                value={addressClinic}\r\n                                onChange={(e) => this.onChangeInput('addressClinic', e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-4\">\r\n                            <label forhtml=\"inputEmail4\">\r\n                                <FormattedMessage id=\"admin.manage-doctor.select-price\" />\r\n                            </label>\r\n                            <Select\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.select-price\" />}\r\n                                onChange={(e) => this.handleChangeSelect(e, 'selectedPrice')}\r\n                                options={listPrice}\r\n                                value={selectedPrice}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-md-4\">\r\n                            <label forhtml=\"inputPassword4\">\r\n                                <FormattedMessage id=\"admin.manage-doctor.select-payment\" />\r\n                            </label>\r\n                            <Select\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.select-payment\" />}\r\n                                onChange={(e) => this.handleChangeSelect(e, 'selectedPayment')}\r\n                                options={listPayment}\r\n                                value={selectedPayment}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-md-4\">\r\n                            <label forhtml=\"inputPassword4\">\r\n                                <FormattedMessage id=\"admin.manage-doctor.select-specialty\" />\r\n                            </label>\r\n                            <Select\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.select-specialty\" />}\r\n                                onChange={(e) => this.handleChangeSelect(e, 'selectedSpecialty')}\r\n                                options={listSpecialty}\r\n                                value={selectedSpecialty}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"from-row\">\r\n                        <label forhtml=\"inputPassword4\">\r\n                            <FormattedMessage id=\"admin.manage-doctor.note\" />\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"inputPassword4\"\r\n                            value={note}\r\n                            onChange={(e) => this.onChangeInput('note', e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-row mt-2\">\r\n                        <label>\r\n                            <FormattedMessage id=\"admin.manage-doctor.intro\" />\r\n                        </label>\r\n                        <textarea\r\n                            className=\"info-doctor form-control\"\r\n                            rows=\"4\"\r\n                            onChange={(e) => this.onChangeInput('description', e.target.value)}\r\n                            value={description}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"manage-doctor-editor\">\r\n                        <label className=\"title-editor\">\r\n                            <FormattedMessage id=\"admin.manage-doctor.detail-doctor\" />\r\n                        </label>\r\n\r\n                        <CKeditor handleEditorChange={this.handleEditorChange} value={contentHtml} />\r\n                    </div>\r\n                    <div className=\"container_btn\">\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => {\r\n                                this.handleClickSave();\r\n                            }}\r\n                        >\r\n                            <FormattedMessage id=\"admin.manage-doctor.save\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        allDoctorRedux: state.doctor.allDoctor,\r\n        languageRedux: state.app.language,\r\n        detailDoctorRedux: state.doctor.detailDoctor,\r\n        DoctorRelatedInforRedux: state.doctor.DoctorRelatedInfor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAllDoctorRedux: () => dispatch(actions.fetchAllDoctor()),\r\n        fetchRelateToDoctorInforRedux: () => dispatch(actions.fetchRelateToDoctorInfor()),\r\n        getDetailDoctorRedux: (id) => dispatch(actions.getDetailDoctor(id)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES, CommonUtils, PATH_FIREBASE } from '../../../utils';\r\nimport { FaFileUpload } from 'react-icons/fa';\r\nimport { postSpecialtyServices } from '../../../services/userServices';\r\nimport { toast } from 'react-toastify';\r\nimport { uploadFileToFirebase } from '../../../firebase/uploadFile';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport './Specialty.scss';\r\nimport CKeditor from '../../../components/CKeditor/CKeditor';\r\n\r\nclass Specialty extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // Save to markdown table\r\n            descriptionHtml: '',\r\n            descriptionMarkdown: '',\r\n            image: '',\r\n            specialty: '',\r\n            previewImageUrl: '',\r\n            file: '',\r\n            isRoomImage: false,\r\n            isShowBoxImage: false,\r\n            contentHtml: '',\r\n        };\r\n    }\r\n    componentDidMount() {}\r\n    componentDidUpdate(prevProps) {}\r\n    handleOnchangeImage = async (e) => {\r\n        let data = e.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({ previewImageUrl: objectUrl, isShowBoxImage: true, image: base64, file: file });\r\n        }\r\n    };\r\n\r\n    buildInputSelectName = (data) => {\r\n        let result = [];\r\n        if (data && data.length > 0) {\r\n            result = data.map((item, index) => {\r\n                let object = {};\r\n                let labelVi = `${item.firstName} ${item.lastName}`;\r\n                let labelEn = `${item.lastName} ${item.firstName}`;\r\n                object.label = this.props.languageRedux === LANGUAGES.VI ? labelVi : labelEn;\r\n                object.value = item.id;\r\n                return object;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n    buildInputSelect = (data, type) => {\r\n        let result = [];\r\n        if (data && data.length > 0) {\r\n            result = data.map((item, index) => {\r\n                let object = {};\r\n                if (type === 'currency') {\r\n                    object.label =\r\n                        this.props.languageRedux === LANGUAGES.VI ? `${item.valueVi} VND` : `${item.valueEn} $`;\r\n                } else {\r\n                    object.label = this.props.languageRedux === LANGUAGES.VI ? item.valueVi : item.valueEn;\r\n                }\r\n                object.value = item.keyMap;\r\n                return object;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    toggle = () => {\r\n        this.props.toggleModel();\r\n    };\r\n\r\n    findValueDefault = (key, data) => {\r\n        let result = '';\r\n        if (key && data) {\r\n            result = data.find((item) => item && item.value === key);\r\n            return result;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    handleEditorChange = (data) => {\r\n        this.setState({\r\n            contentHtml: data,\r\n        });\r\n    };\r\n\r\n    handleClickSave = async () => {\r\n        let { descriptionMarkdown, specialty, file, contentHtml } = this.state;\r\n        let imageURL = await uploadFileToFirebase(PATH_FIREBASE.SPECIALTY_IMAGE, file);\r\n\r\n        let response = await postSpecialtyServices({\r\n            descriptionHtml: contentHtml,\r\n            descriptionMarkdown,\r\n            image: imageURL,\r\n            specialty,\r\n        });\r\n\r\n        if (response && response.errorCode === 0) {\r\n            toast.success(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.setState({\r\n                descriptionHtml: '',\r\n                descriptionMarkdown: '',\r\n                image: '',\r\n                specialty: '',\r\n                previewImageUrl: '',\r\n\r\n                isRoomImage: false,\r\n                isShowBoxImage: false,\r\n            });\r\n            this.props.toggleModel();\r\n            this.props.reloadData();\r\n        } else {\r\n            toast.error(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n\r\n    onChangeInput = (key, value) => {\r\n        this.setState({\r\n            [key]: value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { isChange, specialty, previewImageUrl, isShowBoxImage } = this.state;\r\n        return (\r\n            <div className=\"modal-specialty-container\">\r\n                <Modal\r\n                    className=\"modal-user-container\"\r\n                    isOpen={this.props.isOpenModel}\r\n                    toggle={() => this.toggle()}\r\n                    size=\"lg\"\r\n                    centered={true}\r\n                >\r\n                    <ModalHeader toggle={() => this.toggle()}>Thêm mới chuyên khoa</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label forhtml=\"inputEmail4\">\r\n                                    {/* <FormattedMessage id=\"admin.manage-doctor.name-clinic\" /> */}\r\n                                    Chuyên khoa\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputEmail4\"\r\n                                    value={specialty}\r\n                                    onChange={(e) => this.onChangeInput('specialty', e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-3 upload-file-container\">\r\n                                <label forhtml=\"inputEmail4\">\r\n                                    {/* <FormattedMessage id=\"admin.manage-doctor.name-clinic\" /> */}\r\n                                    Tải ảnh lên\r\n                                </label>\r\n                                <div className=\"btn-container\">\r\n                                    <input\r\n                                        id=\"uploadFile\"\r\n                                        type=\"file\"\r\n                                        className=\"form-control\"\r\n                                        hidden\r\n                                        onChange={(e) => this.handleOnchangeImage(e)}\r\n                                    />\r\n                                    <label className=\"text-upload\" htmlFor=\"uploadFile\">\r\n                                        <FormattedMessage id=\"manage-user.uploadImage\" />\r\n                                        <FaFileUpload className=\"icon-upload\" />\r\n                                    </label>\r\n                                    {isShowBoxImage && (\r\n                                        <div\r\n                                            className=\"preview preview-right\"\r\n                                            style={{ backgroundImage: `url(${previewImageUrl})` }}\r\n                                            onClick={() => this.setState({ isRoomImage: true })}\r\n                                        ></div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"specialty-editor\">\r\n                            <label className=\"title-editor\">\r\n                                {/* <FormattedMessage id=\"admin.manage-doctor.detail-doctor\" /> */}\r\n                                Detail specialty\r\n                            </label>\r\n                            <CKeditor handleEditorChange={this.handleEditorChange} value={this.state.contentHtml} />\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"btn-save\">\r\n                            {isChange ? (\r\n                                <button\r\n                                    className=\"btn btn-warning flex-end\"\r\n                                    onClick={() => {\r\n                                        this.handleClickSave();\r\n                                    }}\r\n                                >\r\n                                    <FormattedMessage id=\"admin.manage-doctor.change\" />\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    className=\"btn btn-primary flex-end\"\r\n                                    onClick={() => {\r\n                                        this.handleClickSave();\r\n                                    }}\r\n                                >\r\n                                    <FormattedMessage id=\"admin.manage-doctor.save\" />\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Specialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Specialty.scss';\r\nimport ModalSpecialty from './ModalSpecialty';\r\nimport SearchInput from '../../../components/SearchInput';\r\nimport FooterPaging from '../../../components/FooterPaging';\r\nimport { filterAndPagingSpecialty, deleteSpecialtyByIdServices } from '../../../services/userServices';\r\nimport ModalConfirm from '../ModalConfirm';\r\nimport { toast } from 'react-toastify';\r\nimport Loading from '../../../components/Loading';\r\nimport moment from 'moment';\r\n\r\nclass Specialty extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenModel: false,\r\n            listSpecialty: [],\r\n\r\n            count: 1,\r\n            totalPage: 1,\r\n\r\n            pageIndex: 1,\r\n            limit: 5,\r\n            keyword: '',\r\n            currentSpecialtyId: '',\r\n            isShowLoading: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        let { pageIndex, limit, keyword } = this.state;\r\n        this.handleFilterAndPaging(pageIndex, limit, keyword);\r\n    }\r\n    componentDidUpdate() {}\r\n\r\n    handleFilterAndPaging = async (pageIndex, limit, keyword) => {\r\n        this.setState({\r\n            isShowLoading: true,\r\n        });\r\n        let response = await filterAndPagingSpecialty(pageIndex, limit, keyword);\r\n        if (response && response.errorCode === 0) {\r\n            this.setState({\r\n                listSpecialty: response.data.rows,\r\n                totalPage: response.data.totalPage,\r\n                count: response.data.count,\r\n                pageIndex: pageIndex,\r\n                isShowLoading: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleToggleModel = () => {\r\n        this.setState({ isOpenModel: !this.state.isOpenModel });\r\n    };\r\n\r\n    handleChangePage = async (numberPage) => {\r\n        let { limit, keyword, pageIndex, totalPage } = this.state;\r\n        if (numberPage === 'next') {\r\n            if (+pageIndex < +totalPage) {\r\n                this.handleFilterAndPaging(pageIndex + 1, limit, keyword);\r\n            }\r\n        } else if (numberPage === 'back') {\r\n            if (+pageIndex > 1) {\r\n                this.handleFilterAndPaging(pageIndex - 1, limit, keyword);\r\n            }\r\n        } else {\r\n            this.handleFilterAndPaging(numberPage, limit, keyword);\r\n        }\r\n    };\r\n\r\n    handleSearch = async (currentKeyword) => {\r\n        let { limit, pageIndex } = this.state;\r\n        this.setState({\r\n            isShowLoading: true,\r\n        });\r\n        try {\r\n            let response = await filterAndPagingSpecialty(pageIndex, limit, currentKeyword);\r\n            if (response && response.errorCode === 0) {\r\n                this.setState({\r\n                    listSpecialty: response.data.rows,\r\n                    totalPage: response.data.totalPage,\r\n                    count: response.data.count,\r\n                    pageIndex: pageIndex,\r\n                    keyword: currentKeyword,\r\n                    isShowLoading: false,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    toggleModelConfirm = (id) => {\r\n        this.setState({\r\n            isShowModalConfirm: !this.state.isShowModalConfirm,\r\n            currentSpecialtyId: id,\r\n        });\r\n    };\r\n\r\n    handleDestroy = async () => {\r\n        let response = await deleteSpecialtyByIdServices(this.state.currentSpecialtyId);\r\n        if (response && response.errorCode === 0) {\r\n            this.toggleModelConfirm('');\r\n            let { pageIndex, limit, keyword } = this.state;\r\n            this.handleFilterAndPaging(pageIndex, limit, keyword);\r\n            toast.success(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        } else {\r\n            this.toggleModelConfirm('');\r\n            toast.error(response.message || 'Có lỗi xảy ra lui lòng tử lại.', {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { isOpenModel, listSpecialty, count, pageIndex, totalPage, isShowModalConfirm, isShowLoading } = this.state;\r\n        let { languageRedux } = this.props;\r\n\r\n        return (\r\n            <div className=\"specialty-container position-loading\">\r\n                {isShowLoading && <Loading />}\r\n                {isOpenModel && (\r\n                    <ModalSpecialty\r\n                        toggleModel={this.handleToggleModel}\r\n                        isOpenModel={this.state.isOpenModel}\r\n                        reloadData={this.handleFilterAndPaging}\r\n                    />\r\n                )}\r\n                {isShowModalConfirm ? (\r\n                    <ModalConfirm\r\n                        isShowModalConfirm={isShowModalConfirm}\r\n                        toggleModelConfirm={this.toggleModelConfirm}\r\n                        handleDeleteItem={this.handleDestroy}\r\n                        text=\"Bạn muốn xoá chuyên khoa này\"\r\n                        type=\"confirm\"\r\n                        size=\"nm\"\r\n                        currentUserId={this.state.currentUserId}\r\n                    />\r\n                ) : (\r\n                    ''\r\n                )}\r\n\r\n                <div className=\"container-table w60\">\r\n                    <div className=\"title\">Quản lý chuyên khoa</div>\r\n                    <div className=\"wrapper-table\">\r\n                        <div className=\"action-container\">\r\n                            <SearchInput placeholder=\"Tên cơ sở...\" handleSearch={this.handleSearch} delay={800} />\r\n                            <button className=\"btn btn-primary\" onClick={() => this.handleToggleModel()}>\r\n                                Thêm mới chuyên khoa\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"wrapper-scroll\">\r\n                            <table className=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr className=\"fixedTop\">\r\n                                        <th scope=\"col\">STT</th>\r\n                                        <th scope=\"col\">Ảnh Logo</th>\r\n                                        <th scope=\"col\">Tên cơ sở</th>\r\n                                        <th scope=\"col\">Thời gian tạo</th>\r\n                                        <th scope=\"col\">Hành động</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {listSpecialty &&\r\n                                        listSpecialty.length > 0 &&\r\n                                        listSpecialty.map((item, index) => {\r\n                                            const dateCreate = moment\r\n                                                .unix(new Date(item.createdAt) / 1000)\r\n                                                .local(languageRedux)\r\n                                                .format('dddd - DD/MM/YYYY');\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <th scope=\"row\">{index + 1}</th>\r\n                                                    <td>\r\n                                                        <div className=\"img-wrapper-specialty\">\r\n                                                            <img src={item.image} atl=\"img\"></img>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>{item.name}</td>\r\n\r\n                                                    <td>{dateCreate}</td>\r\n                                                    <td>\r\n                                                        <button\r\n                                                            className=\"btn btn-warning\"\r\n                                                            onClick={() => this.toggleModelConfirm(item.id)}\r\n                                                        >\r\n                                                            Xoá\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <FooterPaging\r\n                            titleTotalRecord=\"Tổng chuyên khoa\"\r\n                            TotalPage={totalPage}\r\n                            PageIndex={pageIndex}\r\n                            TotalRecord={count}\r\n                            handleChangePage={this.handleChangePage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Specialty);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES, PATH_FIREBASE } from '../../../utils';\r\nimport { FaFileUpload } from 'react-icons/fa';\r\nimport { postDetailClinicServices } from '../../../services/userServices';\r\nimport { toast } from 'react-toastify';\r\nimport './ManageClinic.scss';\r\nimport CKeditor from '../../../components/CKeditor/CKeditor';\r\n\r\nimport { uploadMultiFileToFirebase } from '../../../firebase/uploadFile';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass ModalClinic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // Save to markdown table\r\n            descriptionHtml: '',\r\n            descriptionMarkdown: '',\r\n            imageClinic: '',\r\n            imageLogo: '',\r\n            nameClinic: '',\r\n            addressClinic: '',\r\n            previewImageClinicUrl: '',\r\n            previewImageLogoUrl: '',\r\n            contentHtml: '',\r\n\r\n            files: [],\r\n            fileURL: '',\r\n\r\n            isShowBoxImageClinic: false,\r\n            isShowBoxImageLogo: false,\r\n        };\r\n    }\r\n    componentDidMount() {}\r\n    componentDidUpdate() {}\r\n\r\n    toggle = () => {\r\n        this.props.toggleModel();\r\n    };\r\n    handleOnchangeImage = async (e, image, previewImageUrl, isShowBoxImage) => {\r\n        let data = e.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({ [previewImageUrl]: objectUrl, [isShowBoxImage]: true, [image]: file });\r\n        }\r\n    };\r\n\r\n    buildInputSelectName = (data) => {\r\n        let result = [];\r\n        if (data && data.length > 0) {\r\n            result = data.map((item, index) => {\r\n                let object = {};\r\n                let labelVi = `${item.firstName} ${item.lastName}`;\r\n                let labelEn = `${item.lastName} ${item.firstName}`;\r\n                object.label = this.props.languageRedux === LANGUAGES.VI ? labelVi : labelEn;\r\n                object.value = item.id;\r\n                return object;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n    buildInputSelect = (data, type) => {\r\n        let result = [];\r\n        if (data && data.length > 0) {\r\n            result = data.map((item, index) => {\r\n                let object = {};\r\n                if (type === 'currency') {\r\n                    object.label =\r\n                        this.props.languageRedux === LANGUAGES.VI ? `${item.valueVi} VND` : `${item.valueEn} $`;\r\n                } else {\r\n                    object.label = this.props.languageRedux === LANGUAGES.VI ? item.valueVi : item.valueEn;\r\n                }\r\n                object.value = item.keyMap;\r\n                return object;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    findValueDefault = (key, data) => {\r\n        let result = '';\r\n        if (key && data) {\r\n            result = data.find((item) => item && item.value === key);\r\n            return result;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            descriptionHtml: html,\r\n            descriptionMarkdown: text,\r\n        });\r\n    };\r\n    setStateFile = (item) => {\r\n        this.setState({\r\n            files: [...this.state.files, item],\r\n        });\r\n    };\r\n\r\n    handleClickSave = async () => {\r\n        let { imageClinic, imageLogo } = this.state;\r\n\r\n        let arrFiles = [\r\n            { path: PATH_FIREBASE.CLINIC_IMAGE, file: imageClinic, name: 'imageClinic' },\r\n            { path: PATH_FIREBASE.CLINIC_LOGO, file: imageLogo, name: 'imageLogo' },\r\n        ];\r\n\r\n        let images = await uploadMultiFileToFirebase(arrFiles);\r\n        this.handleSave(images);\r\n    };\r\n\r\n    handleSave = async (images) => {\r\n        let { descriptionMarkdown, nameClinic, addressClinic, contentHtml } = this.state;\r\n        this.props.handleShowLoading();\r\n        let response = await postDetailClinicServices({\r\n            descriptionHtml: contentHtml,\r\n            descriptionMarkdown,\r\n            imageClinic: images.imageClinic,\r\n            imageLogo: images.imageLogo,\r\n            nameClinic,\r\n            addressClinic,\r\n        });\r\n        if (response && response.errorCode === 0) {\r\n            toast.success(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.setState({\r\n                descriptionHtml: '',\r\n                descriptionMarkdown: '',\r\n                imageClinic: '',\r\n                imageLogo: '',\r\n                nameClinic: '',\r\n                addressClinic: '',\r\n                previewImageClinicUrl: '',\r\n                previewImageLogoUrl: '',\r\n\r\n                files: [],\r\n                fileURL: '',\r\n\r\n                isShowBoxImageClinic: false,\r\n                isShowBoxImageLogo: false,\r\n            });\r\n            this.props.toggleModel();\r\n            this.props.reloadData();\r\n        } else {\r\n            toast.error(response?.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n        this.props.handleHideLoading();\r\n    };\r\n\r\n    onChangeInput = (key, value) => {\r\n        this.setState({\r\n            [key]: value,\r\n        });\r\n    };\r\n\r\n    handleEditorChange = (data) => {\r\n        this.setState({\r\n            contentHtml: data,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            isChange,\r\n\r\n            nameClinic,\r\n            addressClinic,\r\n            previewImageClinicUrl,\r\n            previewImageLogoUrl,\r\n\r\n            isShowBoxImageClinic,\r\n            isShowBoxImageLogo,\r\n        } = this.state;\r\n        return (\r\n            <>\r\n                <Modal\r\n                    className=\"modal-user-container\"\r\n                    isOpen={this.props.isOpenModel}\r\n                    toggle={() => this.toggle()}\r\n                    size=\"lg\"\r\n                    centered={true}\r\n                >\r\n                    <ModalHeader toggle={() => this.toggle()}>Thêm mới phòng khám</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"specialty-container\">\r\n                            <div className=\"specialty-title\">\r\n                                <h3>Quản lý cơ sở khám bệnh</h3>\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label forhtml=\"inputEmail4\">\r\n                                        {/* <FormattedMessage id=\"admin.manage-doctor.name-clinic\" /> */}\r\n                                        Tên cơ sở\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputEmail4\"\r\n                                        value={nameClinic}\r\n                                        onChange={(e) => this.onChangeInput('nameClinic', e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group col-md-4 upload-file-container\">\r\n                                    <label forhtml=\"inputEmail4\">\r\n                                        {/* <FormattedMessage id=\"admin.manage-doctor.name-clinic\" /> */}\r\n                                        Upload clinic\r\n                                    </label>\r\n                                    <div className=\"btn-container\">\r\n                                        <input\r\n                                            id=\"uploadFileClinic\"\r\n                                            type=\"file\"\r\n                                            className=\"form-control\"\r\n                                            hidden\r\n                                            onChange={(e) =>\r\n                                                this.handleOnchangeImage(\r\n                                                    e,\r\n                                                    'imageClinic',\r\n                                                    'previewImageClinicUrl',\r\n                                                    `isShowBoxImageClinic`,\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                        <label className=\"text-upload\" htmlFor=\"uploadFileClinic\">\r\n                                            <FormattedMessage id=\"manage-user.uploadImage\" />\r\n                                            <FaFileUpload className=\"icon-upload\" />\r\n                                        </label>\r\n                                        {isShowBoxImageClinic && (\r\n                                            <div\r\n                                                className=\"preview-clinic preview-right\"\r\n                                                style={{ backgroundImage: `url(${previewImageClinicUrl})` }}\r\n                                            ></div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label forhtml=\"inputEmail4\">\r\n                                        {/* <FormattedMessage id=\"admin.manage-doctor.name-clinic\" /> */}\r\n                                        Địa chỉ cơ sở\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputEmail4\"\r\n                                        value={addressClinic}\r\n                                        onChange={(e) => this.onChangeInput('addressClinic', e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group col-md-4 upload-file-container\">\r\n                                    <label forhtml=\"inputEmail4\">\r\n                                        {/* <FormattedMessage id=\"admin.manage-doctor.name-clinic\" /> */}\r\n                                        Upload logo\r\n                                    </label>\r\n                                    <div className=\"btn-container\">\r\n                                        <input\r\n                                            id=\"uploadFileLogo\"\r\n                                            type=\"file\"\r\n                                            className=\"form-control\"\r\n                                            hidden\r\n                                            onChange={(e) =>\r\n                                                this.handleOnchangeImage(\r\n                                                    e,\r\n                                                    'imageLogo',\r\n                                                    'previewImageLogoUrl',\r\n                                                    `isShowBoxImageLogo`,\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                        <label className=\"text-upload\" htmlFor=\"uploadFileLogo\">\r\n                                            <FormattedMessage id=\"manage-user.uploadImage\" />\r\n                                            <FaFileUpload className=\"icon-upload\" />\r\n                                        </label>\r\n                                        {isShowBoxImageLogo && (\r\n                                            <div\r\n                                                className=\"preview-logo preview-right\"\r\n                                                style={{ backgroundImage: `url(${previewImageLogoUrl})` }}\r\n                                            ></div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"specialty-editor\">\r\n                                <label className=\"title-editor\">\r\n                                    {/* <FormattedMessage id=\"admin.manage-doctor.detail-doctor\" /> */}\r\n                                    Detail specialty\r\n                                </label>\r\n                                <CKeditor handleEditorChange={this.handleEditorChange} value={this.state.contentHtml} />\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"btn-save\">\r\n                            {isChange ? (\r\n                                <button\r\n                                    className=\"btn btn-warning flex-end\"\r\n                                    onClick={() => {\r\n                                        this.handleClickSave();\r\n                                    }}\r\n                                >\r\n                                    <FormattedMessage id=\"admin.manage-doctor.change\" />\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    className=\"btn btn-primary flex-end\"\r\n                                    onClick={() => {\r\n                                        this.handleClickSave();\r\n                                    }}\r\n                                >\r\n                                    <FormattedMessage id=\"admin.manage-doctor.save\" />\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalClinic);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ManageClinic.scss';\r\nimport ModalClinic from './ModalClinic';\r\nimport { filterAndPagingClinic } from '../../../services/userServices';\r\nimport SearchInput from '../../../components/SearchInput';\r\nimport FooterPaging from '../../../components/FooterPaging';\r\nimport ModalConfirm from '../ModalConfirm';\r\nimport { deleteClinicByIdServices } from '../../../services';\r\nimport { toast } from 'react-toastify';\r\nimport Loading from '../../../components/Loading';\r\n\r\nclass ManageClinic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenModel: false,\r\n            listClinic: [],\r\n\r\n            limit: 5,\r\n            keyword: '',\r\n            totalPage: 1,\r\n            count: 0,\r\n            pageIndex: 1,\r\n\r\n            isShowModalConfirm: false,\r\n            currentClinicId: '',\r\n\r\n            isShowLoading: false,\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { pageIndex, limit, keyword } = this.state;\r\n        this.handleFilterAndPaging(pageIndex, limit, keyword);\r\n    }\r\n    componentDidUpdate() {}\r\n\r\n    handleFilterAndPaging = async (pageIndex, limit, keyword) => {\r\n        this.setState({\r\n            isShowLoading: true,\r\n        });\r\n        let response = await filterAndPagingClinic(pageIndex, limit, keyword);\r\n        if (response && response.errorCode === 0) {\r\n            this.setState({\r\n                listClinic: response.data.rows,\r\n                totalPage: response.data.totalPage,\r\n                count: response.data.count,\r\n                pageIndex: pageIndex,\r\n                isShowLoading: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleToggleModel = () => {\r\n        this.setState({ isOpenModel: !this.state.isOpenModel });\r\n    };\r\n\r\n    handleSearch = async (currentKeyword) => {\r\n        let { limit, pageIndex } = this.state;\r\n        this.setState({\r\n            isShowLoading: true,\r\n        });\r\n        try {\r\n            let response = await filterAndPagingClinic(pageIndex, limit, currentKeyword);\r\n            if (response && response.errorCode === 0) {\r\n                this.setState({\r\n                    listClinic: response.data.rows,\r\n                    totalPage: response.data.totalPage,\r\n                    count: response.data.count,\r\n                    pageIndex: pageIndex,\r\n                    keyword: currentKeyword,\r\n                    isShowLoading: false,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    handleChangePage = async (numberPage) => {\r\n        console.log(numberPage);\r\n        let { limit, keyword, pageIndex, totalPage } = this.state;\r\n        if (numberPage === 'next') {\r\n            if (+pageIndex < +totalPage) {\r\n                this.handleFilterAndPaging(pageIndex + 1, limit, keyword);\r\n            }\r\n        } else if (numberPage === 'back') {\r\n            if (+pageIndex > 1) {\r\n                this.handleFilterAndPaging(pageIndex - 1, limit, keyword);\r\n            }\r\n        } else {\r\n            this.handleFilterAndPaging(numberPage, limit, keyword);\r\n        }\r\n    };\r\n\r\n    toggleModelConfirm = (id) => {\r\n        this.setState({\r\n            isShowModalConfirm: !this.state.isShowModalConfirm,\r\n            currentClinicId: id,\r\n        });\r\n    };\r\n    handleDestroy = async () => {\r\n        this.setState({\r\n            isShowLoading: true,\r\n        });\r\n        let response = await deleteClinicByIdServices(this.state.currentClinicId);\r\n        if (response && response.errorCode === 0) {\r\n            this.toggleModelConfirm('');\r\n            let { pageIndex, limit, keyword } = this.state;\r\n            this.handleFilterAndPaging(pageIndex, limit, keyword);\r\n            toast.success(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.setState({\r\n                isShowLoading: false,\r\n            });\r\n        } else {\r\n            this.toggleModelConfirm('');\r\n            toast.success(response.message || 'Có lỗi xảy ra lui lòng tử lại.', {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n    handleShowLoading = () => {\r\n        this.setState({\r\n            isShowLoading: true,\r\n        });\r\n    };\r\n    handleHideLoading = () => {\r\n        this.setState({\r\n            isShowLoading: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { isOpenModel, listClinic, count, totalPage, pageIndex, isShowModalConfirm, isShowLoading } = this.state;\r\n        return (\r\n            <div>\r\n                {isOpenModel && (\r\n                    <ModalClinic\r\n                        toggleModel={this.handleToggleModel}\r\n                        isOpenModel={this.state.isOpenModel}\r\n                        reloadData={this.handleFilterAndPaging}\r\n                        handleHideLoading={this.handleHideLoading}\r\n                        handleShowLoading={this.handleShowLoading}\r\n                    />\r\n                )}\r\n                {isShowModalConfirm ? (\r\n                    <ModalConfirm\r\n                        isShowModalConfirm={isShowModalConfirm}\r\n                        toggleModelConfirm={this.toggleModelConfirm}\r\n                        handleDeleteItem={this.handleDestroy}\r\n                        text=\"Bạn muốn xoá phòng khám này\"\r\n                        type=\"confirm\"\r\n                        size=\"nm\"\r\n                        currentUserId={this.state.currentUserId}\r\n                    />\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <div className=\"container-table position-loading\">\r\n                    {isShowLoading && <Loading />}\r\n                    <div className=\"title\">Quản lý cơ sở khám bệnh</div>\r\n                    <div className=\"wrapper-table w60\">\r\n                        <div className=\"action-container\">\r\n                            <SearchInput placeholder=\"Tìm kiếm...\" handleSearch={this.handleSearch} delay={800} />\r\n                            <button className=\"btn btn-primary\" onClick={() => this.handleToggleModel()}>\r\n                                Thêm mới phòng khám\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"wrapper-scroll\">\r\n                            <table className=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr className=\"fixedTop\">\r\n                                        <th scope=\"col\">STT</th>\r\n                                        <th scope=\"col\">Ảnh Logo</th>\r\n                                        <th scope=\"col\">Tên cơ sở</th>\r\n                                        <th scope=\"col\">Địa chỉ</th>\r\n                                        <th scope=\"col\">Hành động</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {listClinic &&\r\n                                        listClinic.length > 0 &&\r\n                                        listClinic.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <th scope=\"row\">{index + 1}</th>\r\n                                                    <td>\r\n                                                        <div className=\"img-wrapper\">\r\n                                                            <img src={item.imageLogo} atl=\"img\"></img>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>{item.nameClinic}</td>\r\n\r\n                                                    <td>{item.addressClinic}</td>\r\n                                                    <td>\r\n                                                        <button\r\n                                                            className=\"btn btn-warning\"\r\n                                                            onClick={() => this.toggleModelConfirm(item.id)}\r\n                                                        >\r\n                                                            Xoá\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <FooterPaging\r\n                            titleTotalRecord=\"Tổng cơ sở\"\r\n                            TotalPage={totalPage}\r\n                            PageIndex={pageIndex}\r\n                            TotalRecord={count}\r\n                            handleChangePage={this.handleChangePage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageClinic);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Notify.scss';\r\n\r\nclass Notify extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    componentDidMount() {}\r\n    componentDidUpdate(prevProps) {\r\n        const { queueNews, queueHandbook } = this.props;\r\n        if (prevProps.queueNews !== queueNews) {\r\n            this.setState({\r\n                re_render: 1,\r\n            });\r\n        }\r\n        if (prevProps.queueHandbook !== queueHandbook) {\r\n            this.setState({\r\n                re_render: 1,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { queueNum, queueNews, queueHandbook } = this.props;\r\n\r\n        return (\r\n            <div className=\"notify\">\r\n                {queueNum === 'queueNews' && +queueNews > 0 && <span className=\"notify-content\">{queueNews}</span>}\r\n                {queueNum === 'queueHandbook' && +queueHandbook > 0 && (\r\n                    <span className=\"notify-content\">{queueHandbook}</span>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queueNews: state.user.queueNews,\r\n        queueHandbook: state.user.queueHandbook,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notify);\r\n","import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport Notify from '../components/Notify';\n\nimport './Navigator.scss';\n\nclass MenuGroup extends Component {\n    render() {\n        const { name, children } = this.props;\n        return (\n            <li className=\"menu-group\">\n                <div className=\"menu-group-name\">\n                    <FormattedMessage id={name} />\n                </div>\n                <ul className=\"menu-list list-unstyled\">{children}</ul>\n            </li>\n        );\n    }\n}\n\nclass Menu extends Component {\n    render() {\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\n        return (\n            <li className={'menu' + (hasSubMenu ? ' has-sub-menu' : '') + '' + (active ? ' active' : '')}>\n                {hasSubMenu ? (\n                    <Fragment>\n                        <span\n                            data-toggle=\"collapse\"\n                            className={'menu-link collapsed'}\n                            onClick={onClick}\n                            aria-expanded={'false'}\n                        >\n                            <FormattedMessage id={name} />\n                            <div className=\"icon-right\">\n                                <i className={'far fa-angle-right'} />\n                            </div>\n                        </span>\n                        <div>\n                            <ul className=\"sub-menu-list list-unstyled\">{children}</ul>\n                        </div>\n                    </Fragment>\n                ) : (\n                    <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\n                        <FormattedMessage id={name} />\n                        {name === 'menu.admin.listNews' && <Notify queueNum=\"queueNews\" />}\n                        {name === 'menu.admin.listHandbook' && <Notify queueNum={'queueHandbook'} />}\n                    </Link>\n                )}\n            </li>\n        );\n    }\n}\n\nclass SubMenu extends Component {\n    getItemClass = (path) => {\n        return this.props.location.pathname === path ? 'active' : '';\n    };\n\n    render() {\n        const { name, link, onLinkClick } = this.props;\n        return (\n            <li className={'sub-menu ' + this.getItemClass(link)}>\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\n                    <FormattedMessage id={name} />\n                </Link>\n            </li>\n        );\n    }\n}\n\nconst MenuGroupWithRouter = withRouter(MenuGroup);\nconst MenuWithRouter = withRouter(Menu);\nconst SubMenuWithRouter = withRouter(SubMenu);\n\nconst withRouterInnerRef = (WrappedComponent) => {\n    class InnerComponentWithRef extends React.Component {\n        render() {\n            const { forwardRef, ...rest } = this.props;\n            return <WrappedComponent {...rest} ref={forwardRef} />;\n        }\n    }\n\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\n\n    return React.forwardRef((props, ref) => {\n        return <ComponentWithRef {...props} forwardRef={ref} />;\n    });\n};\n\nclass Navigator extends Component {\n    state = {\n        expandedMenu: {},\n    };\n\n    toggle = (groupIndex, menuIndex) => {\n        const expandedMenu = {};\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\n        if (needExpand) {\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\n        }\n\n        this.setState({\n            expandedMenu: expandedMenu,\n        });\n    };\n\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\n        if (subMenus) {\n            if (subMenus.length === 0) {\n                return false;\n            }\n\n            const currentPath = location.pathname;\n            for (let i = 0; i < subMenus.length; i++) {\n                const subMenu = subMenus[i];\n                if (subMenu.link === currentPath) {\n                    return true;\n                }\n            }\n        }\n\n        if (link) {\n            return this.props.location.pathname === link;\n        }\n\n        return false;\n    };\n\n    checkActiveMenu = () => {\n        const { menus, location } = this.props;\n        outerLoop: for (let i = 0; i < menus.length; i++) {\n            const group = menus[i];\n            if (group.menus && group.menus.length > 0) {\n                for (let j = 0; j < group.menus.length; j++) {\n                    const menu = group.menus[j];\n                    if (menu.subMenus && menu.subMenus.length > 0) {\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\n                            const key = i + '_' + j;\n                            this.setState({\n                                expandedMenu: {\n                                    [key]: true,\n                                },\n                            });\n                            break outerLoop;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.checkActiveMenu();\n    }\n\n    // componentWillReceiveProps(nextProps, prevState) {\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\n    //     const { location: nextLocation } = nextProps;\n    //     if (location !== nextLocation) {\n    //         let pathname = nextLocation && nextLocation.pathname;\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\n    //             setAccountMenuPath(pathname);\n    //         }\n    //         if (pathname.startsWith('/settings/')) {\n    //             setSettingMenuPath(pathname);\n    //         };\n    //     };\n    // };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { location } = this.props;\n        const { location: prevLocation } = prevProps;\n        if (location !== prevLocation) {\n            this.checkActiveMenu();\n        }\n    }\n\n    render() {\n        const { menus, location, onLinkClick, queueNews, queueHandbook } = this.props;\n        return (\n            <Fragment>\n                <ul className=\"navigator-menu list-unstyled\">\n                    {menus.map((group, groupIndex) => {\n                        return (\n                            <Fragment key={groupIndex}>\n                                <MenuGroupWithRouter\n                                    name={group.name}\n                                    queueNews={queueNews}\n                                    queueHandbook={queueHandbook}\n                                >\n                                    {group.menus\n                                        ? group.menus.map((menu, menuIndex) => {\n                                              const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(\n                                                  location,\n                                                  menu.subMenus,\n                                                  menu.link,\n                                              );\n                                              const isSubMenuOpen =\n                                                  this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\n                                              return (\n                                                  <MenuWithRouter\n                                                      key={menuIndex}\n                                                      active={isMenuHasSubMenuActive}\n                                                      name={menu.name}\n                                                      link={menu.link}\n                                                      hasSubMenu={menu.subMenus}\n                                                      isOpen={isSubMenuOpen}\n                                                      onClick={() => this.toggle(groupIndex, menuIndex)}\n                                                      onLinkClick={onLinkClick}\n                                                  >\n                                                      {menu.subMenus &&\n                                                          menu.subMenus.map((subMenu, subMenuIndex) => (\n                                                              <SubMenuWithRouter\n                                                                  key={subMenuIndex}\n                                                                  name={subMenu.name}\n                                                                  link={subMenu.link}\n                                                                  onClick={this.closeOtherExpand}\n                                                                  onLinkClick={onLinkClick}\n                                                              />\n                                                          ))}\n                                                  </MenuWithRouter>\n                                              );\n                                          })\n                                        : null}\n                                </MenuGroupWithRouter>\n                            </Fragment>\n                        );\n                    })}\n                </ul>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        queueNews: state.user.queueNews,\n        queueHandbook: state.user.queueHandbook,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n};\n\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\n","export const adminMenu = [\n    {\n        //quản lý người dùng:\n        name: 'menu.admin.manage-user',\n        menus: [\n            { name: 'menu.admin.crud-redux', link: '/system/user-redux' },\n            // { name: 'menu.admin.crud', link: '/system/user-manage' },\n            { name: 'menu.admin.manage-doctor', link: '/system/manage-doctor' },\n            // { name: 'menu.admin.manage-admin', link: '/system/user-admin' },\n            { name: 'menu.doctor.manage-schedule', link: '/doctor/manage-schedule' },\n            { name: 'menu.doctor.manage-appointment', link: '/doctor/manage-patient-appointment' },\n        ],\n    },\n    {\n        //quản lý phòng khám:\n        name: 'menu.admin.manage-clinic',\n        menus: [\n            { name: 'menu.admin.clinic', link: '/system/manage-clinic' },\n            // { name: 'menu.admin.listClinic', link: '/system/manage-clinic' },\n        ],\n    },\n    {\n        //quản lý chuyên khoa:\n        name: 'menu.admin.manage-specialty',\n        menus: [\n            { name: 'menu.admin.specialty', link: '/system/manage-specialty' },\n            // { name: 'menu.admin.listSpecialty', link: '/system/manage-specialty' },\n        ],\n    },\n\n    {\n        //quản lý cẩm nang:\n        name: 'menu.admin.manage-handbook',\n        menus: [\n            { name: 'menu.admin.handbook', link: '/doctor/manage-handbook' },\n            { name: 'menu.admin.listHandbook', link: '/doctor/list-handbook' },\n        ],\n    },\n    {\n        //quản lý cẩm nang:\n        name: 'menu.admin.news',\n        menus: [\n            { name: 'menu.admin.news', link: '/doctor/manage-news' },\n            { name: 'menu.admin.listNews', link: '/doctor/list-news' },\n        ],\n    },\n];\n\nexport const doctorMenu = [\n    {\n        name: 'menu.admin.manage-user',\n        menus: [\n            { name: 'menu.doctor.manage-schedule', link: '/doctor/manage-schedule' },\n            { name: 'menu.doctor.manage-appointment', link: '/doctor/manage-patient-appointment' },\n        ],\n    },\n    {\n        //quản lý cẩm nang:\n        name: 'menu.admin.manage-handbook',\n        menus: [\n            { name: 'menu.admin.handbook', link: '/doctor/manage-handbook' },\n            { name: 'menu.admin.listHandbook', link: '/doctor/list-handbook' },\n        ],\n    },\n    {\n        //quản lý cẩm nang:\n        name: 'menu.admin.news',\n        menus: [\n            { name: 'menu.admin.news', link: '/doctor/manage-news' },\n            { name: 'menu.admin.listNews', link: '/doctor/list-news' },\n        ],\n    },\n];\n","export default __webpack_public_path__ + \"static/media/user.43ebe323.jpg\";","export default __webpack_public_path__ + \"static/media/tao-hinh-ham-mat.a297cbb0.jpg\";","export default __webpack_public_path__ + \"static/media/clinic.6050d82e.png\";","export default __webpack_public_path__ + \"static/media/doctor.c1e030b5.jpg\";","export default __webpack_public_path__ + \"static/media/handbook.060c70fc.png\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport * as actions from '../../store/actions';\nimport { LANGUAGES, TYPE_USER } from '../../utils';\nimport Navigator from '../../components/Navigator';\nimport { adminMenu, doctorMenu } from './menuApp';\nimport { userImage } from '../../assets';\nimport { classCookies } from '../../cookies';\nimport { Link } from 'react-router-dom';\nimport { AiFillHome } from 'react-icons/ai';\nimport { push } from 'connected-react-router';\nimport { withRouter } from 'react-router';\n\nimport './Header.scss';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menu: [],\n            roleId: '',\n            user: {},\n            queueNews: '',\n            queueHandbook: '',\n        };\n    }\n\n    async componentDidMount() {\n        let menuUser = [];\n        let user = classCookies.getDataAccessToken();\n        await this.props.checkQueueNewsRedux();\n        await this.props.checkQueueHandbookRedux();\n\n        if (this.props.roleId === TYPE_USER.ADMIN) {\n            menuUser = adminMenu;\n        } else if (this.props.roleId === TYPE_USER.DOCTOR) {\n            menuUser = doctorMenu;\n        } else {\n            menuUser = [];\n        }\n        this.setState({ menu: menuUser, user: user });\n    }\n    async componentDidUpdate(prevProps) {}\n\n    handleChangeLanguage = (languageInput) => {\n        if (languageInput === 'VN') {\n            this.props.changeLanguageRedux(LANGUAGES.EN);\n            return;\n        }\n        if (languageInput === 'EN') {\n            this.props.changeLanguageRedux(LANGUAGES.VI);\n            return;\n        }\n        return;\n    };\n    render() {\n        const { processLogout } = this.props;\n        const { user } = this.state;\n\n        return (\n            <div className=\"header-container\">\n                {/* thanh navigator */}\n                <div className=\"header-tabs-container\">\n                    <Navigator menus={this.state.menu} />\n                </div>\n                {/* box user */}\n                <div className=\"box-user\">\n                    <div className=\"user\">\n                        <span className=\"avatar\">\n                            <img src={userImage} alt=\"avatar\" />\n                        </span>\n                        <span className=\"name-user\">\n                            {user && user.lastName ? user.firstName + ' ' + user.lastName : ''}\n                        </span>\n                    </div>\n                    <Link to=\"/home\">\n                        <div className=\"btn-to-home\" title=\"Trang chủ\">\n                            <AiFillHome className=\"icon\" />\n                        </div>\n                    </Link>\n                    <span className=\"languages\" onClick={(e) => this.handleChangeLanguage(e.target.innerText)}>\n                        <FormattedMessage id=\"language\" />\n                    </span>\n                    <div className=\"btn btn-logout\" onClick={processLogout} title=\"Log out\">\n                        <i className=\"fas fa-sign-out-alt\"></i>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n        userInfo: state.user.userInfo,\n        roleId: state.user.roleId,\n        queueNews: state.user.queueNews,\n        queueHandbook: state.user.queueHandbook,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        navigate: (path) => dispatch(push(path)),\n        processLogout: () => dispatch(actions.processLogout()),\n        changeLanguageRedux: (language) => dispatch(actions.changeLanguageApp(language)),\n        checkQueueNewsRedux: () => dispatch(actions.checkQueueNewsRedux()),\n        checkQueueHandbookRedux: () => dispatch(actions.checkQueueHandbookRedux()),\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './SystemWelcome.scss';\r\n\r\nclass SystemWelcome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"system-welcome-container\">\r\n                <div className=\"system-welcome-background\">\r\n                    <div className=\"system-welcome-content\">\r\n                        <h1 className=\"title\">welcome</h1>\r\n                        <p className=\"text\">Manage bookingcare</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemWelcome);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport UserRedux from '../containers/System/Admin/UserRedux';\nimport ManageDoctor from '../containers/System/Admin/ManageDoctor';\nimport Specialty from '../containers/System/Specialty/Specialty';\nimport ManageClinic from '../containers/System/Clinic/ManageClinic';\nimport Header from '../containers/Header/Header';\nimport SystemWelcome from '../containers/System/SystemWelcome/SystemWelcome';\nimport { withRouter } from 'react-router';\nimport * as actions from '../store/actions';\n\nimport { TYPE_USER } from '../utils';\n\nclass System extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        let { roleId } = this.props;\n        if (!roleId) {\n            await this.props.processLogout();\n            this.props.history.push(`/login`);\n        }\n        if (roleId === 'R3') {\n            this.props.history.push(`/`);\n        }\n    }\n    render() {\n        const { roleId } = this.props;\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"system-container\">\n                    <div className=\"system-list\">\n                        {roleId === TYPE_USER.ADMIN && (\n                            <Switch>\n                                <Route exact path=\"/system/user-redux\" component={UserRedux} />\n                                <Route exact path=\"/system/manage-doctor\" component={ManageDoctor} />\n                                <Route exact path=\"/system/manage-specialty\" component={Specialty} />\n                                <Route exact path=\"/system/manage-clinic\" component={ManageClinic} />\n                                <Route exact path=\"/system/welcome\" component={SystemWelcome} />\n                                <Route\n                                    component={() => {\n                                        return <Redirect to={SystemWelcome} />;\n                                    }}\n                                />\n                            </Switch>\n                        )}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        systemMenuPath: state.app.systemMenuPath,\n        isLoggedIn: state.user.isLoggedIn,\n        roleId: state.user.roleId,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        processLogout: () => dispatch(actions.processLogout()),\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(System));\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Select from 'react-select';\r\nimport './ManageSchedule.scss';\r\nimport _ from 'lodash';\r\nimport { toast } from 'react-toastify';\r\nimport { IoCheckboxOutline } from 'react-icons/io5';\r\n\r\nclass ManageSchedule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allDoctor: [],\r\n            selectedDoctor: '',\r\n            initDate: new Date().setHours(0, 0, 0, 0),\r\n            // dateSelected: moment(new Date()).format(dateFormat.SEND_TO_SERVER),\r\n            listSchedule: [],\r\n            scheduleDoctorCurrent: '',\r\n            isSelectedAll: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.fetchAllDoctorRedux();\r\n        this.props.fetchAllcodeScheduleRedux();\r\n\r\n        this.setState({\r\n            selectedDoctor: this.props.userInfo?.id,\r\n        });\r\n\r\n        if (this.props.roleId === 'R2') {\r\n            await this.props.getScheduleDoctorByDateRedux(this.props.userInfo?.id, this.state.initDate);\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.allDoctorRedux !== this.props.allDoctorRedux) {\r\n            let listDoctor = this.buildInputSelect(this.props.allDoctorRedux);\r\n            this.setState({\r\n                allDoctor: listDoctor,\r\n            });\r\n        }\r\n        if (prevProps.languageRedux !== this.props.languageRedux) {\r\n            let listDoctor = this.buildInputSelect(this.props.allDoctorRedux);\r\n            this.setState({\r\n                allDoctor: listDoctor,\r\n            });\r\n        }\r\n        if (prevProps.scheduleDoctorCurrentRedux !== this.props.scheduleDoctorCurrentRedux) {\r\n            let { listSchedule } = this.state;\r\n            let { scheduleDoctorCurrentRedux } = this.props;\r\n            let arrScheduleSelected = scheduleDoctorCurrentRedux.map((item) => item.timeType);\r\n            listSchedule.map((item) => {\r\n                if (arrScheduleSelected.includes(item.keyMap)) {\r\n                    item.isSelected = true;\r\n                } else {\r\n                    item.isSelected = false;\r\n                }\r\n            });\r\n            this.setState({\r\n                listSchedule: listSchedule,\r\n            });\r\n        }\r\n        if (prevProps.scheduleRedux !== this.props.scheduleRedux) {\r\n            let data = this.props.scheduleRedux;\r\n            if (data && data.length > 0) {\r\n                data = data.map((item) => {\r\n                    item.isSelected = false;\r\n                    return item;\r\n                });\r\n            }\r\n            this.setState({\r\n                listSchedule: data,\r\n            });\r\n        }\r\n    }\r\n    handleChangeInput = () => {\r\n        let { listSchedule, isSelectedAll } = this.state;\r\n        if (!isSelectedAll) {\r\n            listSchedule.map((item) => (item.isSelected = true));\r\n        } else {\r\n            listSchedule.map((item) => (item.isSelected = false));\r\n        }\r\n        this.setState({\r\n            isSelectedAll: !this.state.isSelectedAll,\r\n            listSchedule: listSchedule,\r\n        });\r\n    };\r\n    // change doctor:\r\n    handleChange = async (selectedDoctor) => {\r\n        await this.props.getScheduleDoctorByDateRedux(selectedDoctor.value, this.state.initDate);\r\n        this.setState({\r\n            selectedDoctor: selectedDoctor,\r\n            scheduleDoctorCurrent: this.props.scheduleDoctorCurrentRedux,\r\n        });\r\n    };\r\n\r\n    buildInputSelect = (data) => {\r\n        let result = [];\r\n        if (data && data.length > 0) {\r\n            result = data.map((item) => {\r\n                let object = {};\r\n                let labelVi = `${item.firstName} ${item.lastName}`;\r\n                let labelEn = `${item.lastName} ${item.firstName}`;\r\n                object.label = this.props.languageRedux === LANGUAGES.VI ? labelVi : labelEn;\r\n                object.value = item.id;\r\n                return object;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    handleSetDate = async (date) => {\r\n        let { selectedDoctor } = this.state;\r\n        let { roleId } = this.props;\r\n        if (!_.isEmpty(selectedDoctor) && roleId === 'R1') {\r\n            await this.props.getScheduleDoctorByDateRedux(selectedDoctor.value, date.setHours(0, 0, 0, 0));\r\n        } else if (selectedDoctor) {\r\n            await this.props.getScheduleDoctorByDateRedux(selectedDoctor, date.setHours(0, 0, 0, 0));\r\n        }\r\n        this.setState({\r\n            initDate: date.setHours(0, 0, 0, 0),\r\n            isSelectedAll: false,\r\n        });\r\n    };\r\n    handleClickRange = (rangeTime) => {\r\n        let { listSchedule } = this.state;\r\n        if (listSchedule && listSchedule.length > 0) {\r\n            listSchedule.map((item) => {\r\n                if (rangeTime.id === item.id) {\r\n                    item.isSelected = !item.isSelected;\r\n                }\r\n                return item;\r\n            });\r\n            this.setState({\r\n                listSchedule: listSchedule,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClickSaveSchedule = () => {\r\n        let { listSchedule, selectedDoctor, initDate } = this.state;\r\n        let arrResult = [];\r\n        listSchedule.forEach((item) => {\r\n            let object = {};\r\n            if (item.isSelected === true) {\r\n                object.doctorId = selectedDoctor.value;\r\n                object.date = initDate;\r\n                object.timeType = item.keyMap;\r\n                return arrResult.push(object);\r\n            }\r\n        });\r\n        if (this.props.roleId === 'R2') {\r\n            this.props.saveScheduleDoctorRedux({\r\n                arrSchedule: arrResult,\r\n                date: initDate,\r\n            });\r\n        } else {\r\n            if (!selectedDoctor && _.isEmpty(selectedDoctor)) {\r\n                toast.warning('Select doctor');\r\n                return;\r\n            }\r\n            if (arrResult && arrResult.length > 0) {\r\n                this.props.saveScheduleDoctorRedux({\r\n                    arrSchedule: arrResult,\r\n                    doctorId: selectedDoctor.value,\r\n                    date: initDate,\r\n                });\r\n            } else {\r\n                toast.warning('Missing information range date');\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { allDoctor, initDate, listSchedule, isSelectedAll } = this.state;\r\n        let { languageRedux, roleId } = this.props;\r\n\r\n        return (\r\n            <div className=\"manage-schedule-container\">\r\n                <div className=\"title\">\r\n                    <h2>\r\n                        <FormattedMessage id=\"schedule.title\" />\r\n                    </h2>\r\n                </div>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"form-row\">\r\n                        {roleId === 'R1' && (\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label>\r\n                                    <FormattedMessage id=\"schedule.chooseDoctor\" />\r\n                                </label>\r\n                                <Select onChange={(e) => this.handleChange(e)} options={allDoctor} />\r\n                            </div>\r\n                        )}\r\n                        <div className=\"form-group col-md-2\">\r\n                            <label>\r\n                                <FormattedMessage id=\"schedule.chooseDate\" />\r\n                            </label>\r\n\r\n                            <DatePicker\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                className=\"form-control\"\r\n                                selected={initDate}\r\n                                onChange={(date) => this.handleSetDate(date)}\r\n                                minDate={new Date()}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"inputSelectAll\">\r\n                        <div\r\n                            className={isSelectedAll ? 'selectedAll active' : 'selectedAll'}\r\n                            onClick={() => this.handleChangeInput()}\r\n                        >\r\n                            <p>Chọn tất cả</p>\r\n                            {isSelectedAll && <IoCheckboxOutline />}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 schedule-container\">\r\n                        {listSchedule.map((range) => {\r\n                            return (\r\n                                <div\r\n                                    key={range.id}\r\n                                    className={range.isSelected ? 'range-time selected' : 'range-time'}\r\n                                    onClick={() => {\r\n                                        this.handleClickRange(range);\r\n                                    }}\r\n                                >\r\n                                    {languageRedux === LANGUAGES.EN ? range.valueEn : range.valueVi}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <button className=\"btn btn-primary btn-saveSchedule\" onClick={() => this.handleClickSaveSchedule()}>\r\n                        <FormattedMessage id=\"schedule.save\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        roleId: state.user.roleId,\r\n        userInfo: state.user.userInfo,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        allDoctorRedux: state.doctor.allDoctor,\r\n        languageRedux: state.app.language,\r\n        scheduleRedux: state.doctor.schedule,\r\n        scheduleDoctorCurrentRedux: state.doctor.scheduleDoctorCurrent,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAllDoctorRedux: () => dispatch(actions.fetchAllDoctor()),\r\n        fetchAllcodeScheduleRedux: () => dispatch(actions.fetchAllcodeSchedule()),\r\n        saveScheduleDoctorRedux: (data) => dispatch(actions.saveScheduleDoctor(data)),\r\n        getScheduleDoctorByDateRedux: (doctorId, date) => dispatch(actions.getScheduleDoctorByDate(doctorId, date)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CommonUtils } from '../../../utils';\r\nimport * as actions from '../../../store/actions';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { confirmRemedyService } from '../../../services/doctorServices';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport './RemedyModal.scss';\r\nimport Loading from '../../../components/Loading';\r\nimport { FaFileUpload } from 'react-icons/fa';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport { toast } from 'react-toastify';\r\nimport _ from 'lodash';\r\n\r\nclass RemedyModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowBoxImage: false,\r\n            isRoomImage: false,\r\n            previewImageUrl: '',\r\n            image: '',\r\n            emailPatient: '',\r\n            note: '',\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { currentPatient } = this.props;\r\n        if (currentPatient && !_.isEmpty(currentPatient) && currentPatient.dataAcc.email) {\r\n            this.setState({\r\n                emailPatient: currentPatient.dataAcc.email,\r\n            });\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        let { currentPatient } = this.props;\r\n        if (prevProps.currentPatient !== currentPatient) {\r\n        }\r\n    }\r\n    toggle = () => {\r\n        this.props.toggleModel();\r\n    };\r\n\r\n    handleChangeInput = (e, key) => {\r\n        this.setState({\r\n            [key]: e.target.value,\r\n        });\r\n    };\r\n\r\n    capitalizeFirstLetter = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    };\r\n    handleOnchangeImage = async (e) => {\r\n        let data = e.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({ previewImageUrl: objectUrl, isShowBoxImage: true, image: base64 });\r\n        }\r\n    };\r\n\r\n    handleSendConfirm = async () => {\r\n        let { image, emailPatient, note } = this.state;\r\n        let { currentPatient, doctorId, initDate, languageRedux } = this.props;\r\n        this.setState({\r\n            isLoading: true,\r\n        });\r\n        let response = await confirmRemedyService({\r\n            image,\r\n            email: emailPatient,\r\n            note,\r\n            doctorId: currentPatient.doctorId,\r\n            patientId: currentPatient.patientId,\r\n            timeType: currentPatient.timeType,\r\n            namePatient: currentPatient.namePatient,\r\n            exactTime: currentPatient.timeAppointment,\r\n            dataAccDoctor: currentPatient.dataAccDoctor,\r\n            language: languageRedux,\r\n        });\r\n        if (response && response.errorCode === 0) {\r\n            this.setState({\r\n                isLoading: false,\r\n                image: '',\r\n                email: '',\r\n                note: '',\r\n            });\r\n            toast.success(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.props.toggleModel();\r\n            await this.props.getAppointmentDoctorRedux(doctorId, initDate, this.props.statusIdRedux);\r\n        } else {\r\n            toast.error('Some thing wrong, pls again', {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { isShowModalRemedy, statusIdRedux } = this.props;\r\n        let { isLoading } = this.state;\r\n        return (\r\n            <div className=\"booking-modal-container\">\r\n                {isLoading && (\r\n                    <div className=\"loading-container\">\r\n                        <div className=\"icon-loading\">\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <Modal\r\n                    className=\"modal-booking-container\"\r\n                    isOpen={isShowModalRemedy}\r\n                    toggle={() => this.toggle()}\r\n                    size=\"lg\"\r\n                    centered={true}\r\n                >\r\n                    <ModalHeader toggle={() => this.toggle()}>\r\n                        {statusIdRedux === 'S2' && 'Gửi mail khám bệnh thành công'}\r\n                        {statusIdRedux === 'S3' && 'Gửi mail'}\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"form-row \">\r\n                            <div className=\"form-group col-5\">\r\n                                <label>Email bệnh nhân</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Email patient\"\r\n                                    onChange={(e) => this.handleChangeInput(e, 'emailPatient')}\r\n                                    value={this.state.emailPatient}\r\n                                />\r\n                            </div>\r\n                            {statusIdRedux === 'S2' && (\r\n                                <div className=\"form-group col-md-3 upload-file-container\">\r\n                                    <label htmlFor=\"inputCity\">Chọn file đơn thuốc</label>\r\n                                    <div className=\"btn-container\">\r\n                                        <input\r\n                                            id=\"uploadFile\"\r\n                                            type=\"file\"\r\n                                            className=\"form-control\"\r\n                                            hidden\r\n                                            onChange={(e) => this.handleOnchangeImage(e)}\r\n                                        />\r\n                                        <label className=\"text-upload\" htmlFor=\"uploadFile\">\r\n                                            <FormattedMessage id=\"manage-user.uploadImage\" />\r\n                                            <FaFileUpload className=\"icon-upload\" />\r\n                                        </label>\r\n                                        {this.state.isShowBoxImage && (\r\n                                            <div\r\n                                                className=\"preview preview-right\"\r\n                                                style={{ backgroundImage: `url(${this.state.previewImageUrl})` }}\r\n                                                onClick={() => this.setState({ isRoomImage: true })}\r\n                                            ></div>\r\n                                        )}\r\n                                    </div>\r\n                                    {this.state.isRoomImage && (\r\n                                        <Lightbox\r\n                                            mainSrc={this.state.previewImageUrl}\r\n                                            onCloseRequest={() => this.setState({ isRoomImage: false })}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <textarea\r\n                            className=\"info-doctor form-control\"\r\n                            rows=\"4\"\r\n                            onChange={(e) => this.handleChangeInput(e, 'note')}\r\n                            value={this.state.note}\r\n                            placeholder=\"note\"\r\n                        ></textarea>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button className=\" button btn-save\" color=\"primary\" onClick={() => this.handleSendConfirm()}>\r\n                            <FormattedMessage id=\"appointment.send-mail\" />\r\n                        </Button>{' '}\r\n                        <Button className=\"button btn btn-cancel\" color=\"secondary\" onClick={() => this.toggle()}>\r\n                            <FormattedMessage id=\"appointment.cancel\" />\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        listAppointmentRedux: state.doctor.listAppointment,\r\n        statusIdRedux: state.doctor.statusId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAppointmentDoctorRedux: (doctorId, initDate, statusId) =>\r\n            dispatch(actions.getAppointmentDoctor(doctorId, initDate, statusId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModal);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport DatePicker from 'react-datepicker';\r\nimport RemedyModal from './RemedyModal';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './ManageAppointment.scss';\r\nimport { classCookies } from '../../../cookies';\r\nimport { FaUserMd } from 'react-icons/fa';\r\nimport Loading from '../../../components/Loading';\r\nimport SelectStatusId from '../../../components/SelectStatusId';\r\nimport ModalConfirm from '../ModalConfirm.js';\r\n\r\nimport moment from 'moment';\r\n\r\nclass ManageAppointment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            doctorId: classCookies.getDataAccessToken().id,\r\n            initDate: new Date().setHours(0, 0, 0, 0),\r\n            listAppointment: [],\r\n            doctorInfo: classCookies.getDataAccessToken(),\r\n            isShowModalRemedy: false,\r\n\r\n            currentPatient: '',\r\n            isLoading: false,\r\n            isRemind: false,\r\n            isShowModalConfirm: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let { doctorId, initDate } = this.state;\r\n        await this.props.getAppointmentDoctorRedux(doctorId, initDate, this.props.statusIdRedux);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        let { listAppointmentRedux } = this.props;\r\n        if (prevProps.listAppointmentRedux !== listAppointmentRedux) {\r\n            this.setState({\r\n                listAppointment: listAppointmentRedux,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSetDate = async (date) => {\r\n        let { doctorId } = this.state;\r\n        let currentSelectedDate = date.setHours(0, 0, 0, 0);\r\n        let response = await this.props.getAppointmentDoctorRedux(\r\n            doctorId,\r\n            currentSelectedDate,\r\n            this.props.statusIdRedux,\r\n        );\r\n        if (response && response.data && response.data.length > 0) {\r\n            this.setState({\r\n                initDate: currentSelectedDate,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                initDate: currentSelectedDate,\r\n            });\r\n        }\r\n    };\r\n    toggleModel = () => {\r\n        this.setState({\r\n            isShowModalRemedy: !this.state.isShowModalRemedy,\r\n        });\r\n    };\r\n    toggleModelConfirm = () => {\r\n        this.setState({\r\n            isShowModalConfirm: !this.state.isShowModalConfirm,\r\n        });\r\n    };\r\n\r\n    handleClickConfirm = (item, isRemind) => {\r\n        this.setState({\r\n            currentPatient: item,\r\n            isRemind: isRemind,\r\n        });\r\n        this.toggleModel();\r\n    };\r\n    // change input radio\r\n    handleChangeInput = async (id) => {\r\n        let { doctorId, initDate } = this.state;\r\n        await this.props.changeStatusIdRedux(id);\r\n        await this.props.getAppointmentDoctorRedux(doctorId, initDate, this.props.statusIdRedux);\r\n    };\r\n\r\n    handleClickCancel = (item) => {\r\n        this.setState({\r\n            currentPatient: item,\r\n        });\r\n        this.toggleModelConfirm();\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            initDate,\r\n            listAppointment,\r\n            doctorInfo,\r\n            isShowModalRemedy,\r\n            currentPatient,\r\n            doctorId,\r\n            isLoading,\r\n            isShowModalConfirm,\r\n        } = this.state;\r\n        let { languageRedux, statusIdRedux } = this.props;\r\n\r\n        let listSelect = [\r\n            { text: <FormattedMessage id=\"appointment.newSchedule\" />, id: 'S2' },\r\n            { text: <FormattedMessage id=\"appointment.confirmed\" />, id: 'S3' },\r\n            { text: <FormattedMessage id=\"appointment.canceled\" />, id: 'S4' },\r\n        ];\r\n\r\n        return (\r\n            <div className=\"manage-schedule-container mt-2\">\r\n                {isLoading && (\r\n                    <div className=\"loading-container\">\r\n                        <div className=\"icon-loading\">\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {isShowModalRemedy ? (\r\n                    <RemedyModal\r\n                        currentPatient={currentPatient}\r\n                        toggleModel={this.toggleModel}\r\n                        isShowModalRemedy={isShowModalRemedy}\r\n                        doctorId={doctorId}\r\n                        initDate={initDate}\r\n                    />\r\n                ) : (\r\n                    ''\r\n                )}\r\n                {isShowModalConfirm ? (\r\n                    <ModalConfirm\r\n                        currentPatient={currentPatient}\r\n                        toggleModel={this.toggleModel}\r\n                        isShowModalConfirm={isShowModalConfirm}\r\n                        toggleModelConfirm={this.toggleModelConfirm}\r\n                        handleDestroy={this.handleDestroy}\r\n                        text=\"Xoá lịch hẹn này :(\"\r\n                        doctorId={doctorId}\r\n                        initDate={initDate}\r\n                        type=\"cancel-appointment\"\r\n                    />\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <div className=\"title\">\r\n                    <h2>\r\n                        <FormattedMessage id=\"appointment.title\" />\r\n                    </h2>\r\n                </div>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-3\">\r\n                            <label>\r\n                                <FormattedMessage id=\"appointment.doctor\" />\r\n                            </label>\r\n\r\n                            <div className=\"doctor-info-container\">\r\n                                <div className=\"doctor-info\">\r\n                                    <span className=\"iconDoctor\">\r\n                                        <FaUserMd />\r\n                                    </span>\r\n                                    {doctorInfo && <p>{`${doctorInfo?.firstName} ${doctorInfo?.lastName} `}</p>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group col-md-3 \">\r\n                            <label>\r\n                                <FormattedMessage id=\"appointment.chooseDate\" />\r\n                            </label>\r\n\r\n                            <DatePicker\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                className=\"form-control\"\r\n                                selected={initDate}\r\n                                onChange={(date) => this.handleSetDate(date)}\r\n                                // minDate={new Date()}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-appointment-container mt-5\">\r\n                        <div className=\"title-table\">\r\n                            <span>\r\n                                <FormattedMessage id=\"appointment.appointment-title\" />{' '}\r\n                                {moment(initDate).locale(languageRedux).format('LL')}\r\n                            </span>\r\n                            <span>\r\n                                <SelectStatusId\r\n                                    handleChangeInput={this.handleChangeInput}\r\n                                    listSelect={listSelect}\r\n                                    appointment\r\n                                    statusId={statusIdRedux}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <table className=\"table table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">\r\n                                        <FormattedMessage id=\"appointment.stt\" />\r\n                                    </th>\r\n                                    <th scope=\"col\">\r\n                                        <FormattedMessage id=\"appointment.time\" />\r\n                                    </th>\r\n                                    <th scope=\"col\">\r\n                                        <FormattedMessage id=\"appointment.fullname\" />\r\n                                    </th>\r\n                                    <th scope=\"col\">\r\n                                        <FormattedMessage id=\"appointment.birth\" />\r\n                                    </th>\r\n                                    <th scope=\"col\">\r\n                                        <FormattedMessage id=\"appointment.gender\" />\r\n                                    </th>\r\n                                    <th scope=\"col\">\r\n                                        <FormattedMessage id=\"appointment.address\" />\r\n                                    </th>\r\n                                    <th scope=\"col\">\r\n                                        <FormattedMessage id=\"appointment.reason\" />\r\n                                    </th>\r\n                                    {statusIdRedux === 'S2' && (\r\n                                        <th scope=\"col\">\r\n                                            <FormattedMessage id=\"appointment.confirm\" />\r\n                                        </th>\r\n                                    )}\r\n                                    {statusIdRedux === 'S3' && (\r\n                                        <th scope=\"col\">\r\n                                            <FormattedMessage id=\"appointment.remind\" />\r\n                                        </th>\r\n                                    )}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {listAppointment && listAppointment.length > 0 ? (\r\n                                    listAppointment.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>\r\n                                                    {languageRedux === LANGUAGES.VI\r\n                                                        ? item.timeAppointment.valueVi\r\n                                                        : item.timeAppointment.valueEn}\r\n                                                </td>\r\n                                                <td>{item.namePatient}</td>\r\n                                                <td>{item.YearOfBirth}</td>\r\n                                                <td>\r\n                                                    {' '}\r\n                                                    {languageRedux === LANGUAGES.VI\r\n                                                        ? item.genderDT.valueVi\r\n                                                        : item.genderDT.valueEn}\r\n                                                </td>\r\n                                                <td>{item.address}</td>\r\n                                                <td>{item.reason}</td>\r\n                                                <td>\r\n                                                    {statusIdRedux === 'S2' && (\r\n                                                        <span>\r\n                                                            <button\r\n                                                                className=\"btn btn-primary mr-2\"\r\n                                                                onClick={() => this.handleClickConfirm(item, false)}\r\n                                                            >\r\n                                                                <FormattedMessage id=\"appointment.confirm\" />\r\n                                                            </button>\r\n                                                            <button\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => this.handleClickCancel(item)}\r\n                                                            >\r\n                                                                <FormattedMessage id=\"appointment.cancel\" />\r\n                                                            </button>\r\n                                                        </span>\r\n                                                    )}\r\n                                                    {statusIdRedux === 'S3' && (\r\n                                                        <button\r\n                                                            className=\"btn btn-warning\"\r\n                                                            onClick={() => this.handleClickConfirm(item, true)}\r\n                                                        >\r\n                                                            <FormattedMessage id=\"appointment.remind\" />\r\n                                                        </button>\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })\r\n                                ) : (\r\n                                    <tr className=\"title-no-appointment\">\r\n                                        <FormattedMessage id=\"appointment.noAppointment\" />\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        allDoctorRedux: state.doctor.allDoctor,\r\n        listAppointmentRedux: state.doctor.listAppointment,\r\n        statusIdRedux: state.doctor.statusId,\r\n        languageRedux: state.app.language,\r\n        userInfoRedux: state.user.userInfo,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAllDoctorRedux: () => dispatch(actions.fetchAllDoctor()),\r\n        fetchAllcodeScheduleRedux: () => dispatch(actions.fetchAllcodeSchedule()),\r\n        changeStatusIdRedux: (statusId) => dispatch(actions.changeStatusId(statusId)),\r\n        getAppointmentDoctorRedux: (doctorId, initDate, statusId) =>\r\n            dispatch(actions.getAppointmentDoctor(doctorId, initDate, statusId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageAppointment);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES, CommonUtils, PATH_FIREBASE } from '../../../utils';\r\nimport * as actions from '../../../store/actions';\r\nimport Select from 'react-select';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { postHandbookServices } from '../../../services/userServices';\r\nimport { FaFileUpload } from 'react-icons/fa';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport './ManageHandbook.scss';\r\nimport { toast } from 'react-toastify';\r\nimport { uploadFileToFirebase } from '../../../firebase/uploadFile';\r\nimport CKeditor from '../../../components/CKeditor/CKeditor';\r\nimport Loading from '../../../components/Loading';\r\n\r\nclass ManageHandbook extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowBoxImage: false,\r\n            isRoomImage: false,\r\n            previewImageUrl: '',\r\n            image: '',\r\n            file: '',\r\n\r\n            allDoctor: [],\r\n            adviser: '',\r\n            authors: '',\r\n            title: '',\r\n            contentHtml: '',\r\n            contentMarkdown: '',\r\n\r\n            isShowLoading: false,\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        this.props.fetchAllDoctorRedux();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.allDoctorRedux !== this.props.allDoctorRedux) {\r\n            let listDoctor = this.buildInputSelectName(this.props.allDoctorRedux);\r\n            this.setState({\r\n                allDoctor: listDoctor,\r\n            });\r\n        }\r\n    }\r\n    buildInputSelectName = (data) => {\r\n        let result = [];\r\n        if (data && data.length > 0) {\r\n            result = data.map((item, index) => {\r\n                let object = {};\r\n                let labelVi = `${item.firstName} ${item.lastName}`;\r\n                let labelEn = `${item.lastName} ${item.firstName}`;\r\n                object.label = this.props.languageRedux === LANGUAGES.VI ? labelVi : labelEn;\r\n                object.value = item.id;\r\n                return object;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    onChangeInput = (key, value) => {\r\n        this.setState({\r\n            [key]: value,\r\n        });\r\n    };\r\n    handlePickDoctor = (e) => {\r\n        let adviser = e.map((item) => item.value);\r\n        this.setState({\r\n            adviser: adviser.join(),\r\n        });\r\n    };\r\n    handleEditorChange = (data) => {\r\n        this.setState({\r\n            contentHtml: data,\r\n        });\r\n    };\r\n    handleOnchangeImage = async (e) => {\r\n        let data = e.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({ previewImageUrl: objectUrl, isShowBoxImage: true, image: base64, file: file });\r\n        }\r\n    };\r\n    handleClickSubmit = async () => {\r\n        this.setState({\r\n            isShowLoading: true,\r\n        });\r\n        let { adviser, authors, title, contentMarkdown, contentHtml, file } = this.state;\r\n        let imageURL = await uploadFileToFirebase(PATH_FIREBASE.HANDBOOK_IMAGE, file);\r\n\r\n        let response = await postHandbookServices({\r\n            adviser,\r\n            authors,\r\n            title,\r\n            contentMarkdown,\r\n            contentHtml,\r\n            image: imageURL,\r\n        });\r\n        if (response && response.errorCode === 0) {\r\n            toast.success(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.setState({\r\n                isShowBoxImage: false,\r\n                isRoomImage: false,\r\n                previewImageUrl: '',\r\n                image: '',\r\n\r\n                adviser: '',\r\n                authors: '',\r\n                title: '',\r\n                contentHtml: '',\r\n                contentMarkdown: '',\r\n\r\n                isShowLoading: false,\r\n            });\r\n        } else if (response && response.errorCode === 1) {\r\n            toast.error(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { allDoctor, authors, title, isShowLoading } = this.state;\r\n        return (\r\n            <div className=\"handbook_container position-loading\">\r\n                {isShowLoading && <Loading />}\r\n\r\n                <div className=\"handbook-title title\">\r\n                    <h3>Quản lý cẩm nang</h3>\r\n                </div>\r\n\r\n                <div className=\"wrapper-handbook w60\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label forhtml=\"inputEmail4\">Tiêu đề</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"inputEmail4\"\r\n                                value={title}\r\n                                onChange={(e) => this.onChangeInput('title', e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-md-3 upload-file-container\">\r\n                            <label htmlFor=\"inputCity\">Chọn ảnh chủ đề</label>\r\n                            <div className=\"btn-container\">\r\n                                <input\r\n                                    id=\"uploadFile\"\r\n                                    type=\"file\"\r\n                                    className=\"form-control\"\r\n                                    hidden\r\n                                    onChange={(e) => this.handleOnchangeImage(e)}\r\n                                />\r\n                                <label className=\"text-upload\" htmlFor=\"uploadFile\">\r\n                                    <FormattedMessage id=\"manage-user.uploadImage\" />\r\n                                    <FaFileUpload className=\"icon-upload\" />\r\n                                </label>\r\n                                {this.state.isShowBoxImage && (\r\n                                    <div\r\n                                        className=\"preview pv-left preview-right\"\r\n                                        style={{ backgroundImage: `url(${this.state.previewImageUrl})` }}\r\n                                        onClick={() => this.setState({ isRoomImage: true })}\r\n                                    ></div>\r\n                                )}\r\n                            </div>\r\n                            {this.state.isRoomImage && (\r\n                                <Lightbox\r\n                                    mainSrc={this.state.previewImageUrl}\r\n                                    onCloseRequest={() => this.setState({ isRoomImage: false })}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label forhtml=\"inputEmail4\">Nhóm tác giả</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"inputEmail4\"\r\n                                value={authors}\r\n                                onChange={(e) => this.onChangeInput('authors', e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\" form-group col-md-6\">\r\n                            <label>Nhóm cố vấn</label>\r\n                            <Select\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.select-doctor\" />}\r\n                                isMulti\r\n                                defaultValue={''}\r\n                                onChange={(e) => this.handlePickDoctor(e)}\r\n                                options={allDoctor}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"manage-doctor-editor\">\r\n                        <label className=\"title-editor\">\r\n                            {/* <FormattedMessage id=\"admin.manage-doctor.detail-doctor\" /> */}\r\n                            Bài viết:\r\n                        </label>\r\n                        <CKeditor handleEditorChange={this.handleEditorChange} value={this.state.contentHtml} />\r\n                    </div>\r\n                    <div className=\"container_btn\">\r\n                        <button\r\n                            className=\"btn btn-warning\"\r\n                            onClick={() => {\r\n                                this.handleClickSubmit();\r\n                            }}\r\n                        >\r\n                            Đăng bài\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        listAppointmentRedux: state.doctor.listAppointment,\r\n        allDoctorRedux: state.doctor.allDoctor,\r\n        userInfo: state.user.userInfo,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAllDoctorRedux: () => dispatch(actions.fetchAllDoctor()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageHandbook);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { BsLightbulbFill } from 'react-icons/bs';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { getHandbookServices } from '../../../services/patientServices';\r\nimport { confirmHandbookServices } from '../../../services/userServices';\r\nimport moment from 'moment';\r\nimport './ModalHandbook.scss';\r\n\r\nclass ModalHandbook extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handbookData: {},\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let handbookId = this.props.id;\r\n        let response = await getHandbookServices(handbookId, 'detail');\r\n        if (response && response.errorCode === 0) {\r\n            this.setState({\r\n                handbookData: response.data,\r\n            });\r\n        }\r\n    }\r\n    componentDidUpdate() {}\r\n\r\n    handleConfirm = async (id) => {\r\n        this.props.handleShowLoading();\r\n        let response = await confirmHandbookServices(id);\r\n        if (response && response.errorCode === 0) {\r\n            this.props.toggleModelConfirm();\r\n            await this.props.handleGetHandbook(this.props.statusId);\r\n            await this.props.checkQueueHandbookRedux();\r\n\r\n            toast.success(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.props.handleHideLoading();\r\n        } else {\r\n            toast.error(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { isShowModalHandbook, id, statusId } = this.props;\r\n\r\n        let { handbookData } = this.state;\r\n        return (\r\n            <>\r\n                <Modal\r\n                    className=\"modal-booking-container\"\r\n                    isOpen={isShowModalHandbook}\r\n                    toggle={() => this.props.toggleModelConfirm()}\r\n                    size=\"lg\"\r\n                    centered={true}\r\n                >\r\n                    <ModalHeader toggle={() => this.props.toggleModelConfirm()}>Chi tiết cẩm nang</ModalHeader>\r\n                    <ModalBody>\r\n                        {' '}\r\n                        <div className=\"handbook-container coverArea\">\r\n                            <div className=\"handbook-wrapper\">\r\n                                <h1 className=\"handbook-title\">{handbookData?.title}</h1>\r\n                                <div className=\"handbook-detail-info\">\r\n                                    <p>Nhóm tác giả:{handbookData?.authors}</p>\r\n                                    <p>Người kiểm duyệt:{handbookData?.censor}</p>\r\n                                    <p>Cố vấn y khoa:{handbookData?.adviser}</p>\r\n                                    <p>\r\n                                        Xuất bản: {moment(handbookData?.createdAt).format('LL')}, Cập nhật lần cuối:\r\n                                        {moment(handbookData?.updatedAt).format('LL')}\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <div className=\"intro-bookingCare \">\r\n                                    <div className=\"icon\">\r\n                                        <BsLightbulbFill />\r\n                                    </div>\r\n                                    <h4>\r\n                                        BookingCare là Nền tảng Y tế chăm sóc sức khỏe toàn diện hàng đầu Việt Nam kết\r\n                                        nối người dùng với trên 150 bệnh viện - phòng khám uy tín, hơn 1,000 bác sĩ\r\n                                        chuyên khoa giỏi và hàng nghìn dịch vụ, sản phẩm y tế chất lượng cao.\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"image-handbook\">\r\n                                    <img src={handbookData?.image} alt=\"img\"></img>\r\n                                </div>\r\n                                <div\r\n                                    className=\"detail-clinic\"\r\n                                    dangerouslySetInnerHTML={{ __html: handbookData.contentHtml }}\r\n                                ></div>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        {statusId === 'S1' && (\r\n                            <Button className=\" button btn-save\" color=\"success\" onClick={() => this.handleConfirm(id)}>\r\n                                Confirm\r\n                            </Button>\r\n                        )}{' '}\r\n                        {statusId === 'S2' && (\r\n                            <Button\r\n                                className=\" button btn-save\"\r\n                                color=\"warning\"\r\n                                onClick={() => this.props.handleClickDelete(id)}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        )}{' '}\r\n                        <Button\r\n                            className=\"button btn btn-cancel\"\r\n                            color=\"success\"\r\n                            onClick={() => this.props.toggleModelConfirm()}\r\n                        >\r\n                            <FormattedMessage id=\"appointment.cancel\" />\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        listAppointmentRedux: state.doctor.listAppointment,\r\n        statusIdRedux: state.doctor.statusId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAppointmentDoctorRedux: (doctorId, initDate, statusId) =>\r\n            dispatch(actions.getAppointmentDoctor(doctorId, initDate, statusId)),\r\n\r\n        checkQueueHandbookRedux: () => dispatch(actions.checkQueueHandbookRedux()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalHandbook);\r\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport './ConfirmModal.scss';\nimport * as actions from '../store/actions';\nimport { KeyCodeUtils } from '../utils';\n\nclass ConfirmModal extends Component {\n    constructor(props) {\n        super(props);\n        this.acceptBtnRef = React.createRef();\n    }\n\n    initialState = {};\n\n    state = {\n        ...this.initialState,\n    };\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handlerKeyDown);\n    }\n\n    handlerKeyDown = (event) => {\n        const keyCode = event.which || event.keyCode;\n        if (keyCode === KeyCodeUtils.ENTER) {\n            if (!this.acceptBtnRef.current || this.acceptBtnRef.current.disabled) return;\n            this.acceptBtnRef.current.click();\n        }\n    };\n\n    onAcceptBtnClick = () => {\n        const { contentOfConfirmModal } = this.props;\n        if (contentOfConfirmModal.handleFunc) {\n            contentOfConfirmModal.handleFunc(contentOfConfirmModal.dataFunc);\n        }\n        this.onClose();\n    };\n\n    onClose = () => {\n        this.props.setContentOfConfirmModal({\n            isOpen: false,\n            messageId: '',\n            handleFunc: null,\n            dataFunc: null,\n        });\n    };\n\n    render() {\n        const { isShowConfirmModal, content } = this.props;\n\n        return (\n            <Modal\n                className=\"modal-booking-container\"\n                isOpen={isShowConfirmModal}\n                toggle={() => this.props.toggleConfirmModal()}\n                size=\"sm\"\n                centered={true}\n            >\n                <ModalHeader toggle={() => this.props.toggleConfirmModal()}>\n                    {' '}\n                    <FormattedMessage id=\"confirm.title\" />\n                </ModalHeader>\n                <ModalBody> {content}</ModalBody>\n                <ModalFooter>\n                    <Button className=\" button btn-save\" color=\"danger\" onClick={() => this.props.deleteFunc()}>\n                        <FormattedMessage id=\"confirm.accept\" />\n                    </Button>{' '}\n                    <Button\n                        className=\"button btn btn-cancel\"\n                        color=\"success\"\n                        onClick={() => this.props.toggleConfirmModal()}\n                    >\n                        <FormattedMessage id=\"confirm.close\" />\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        lang: state.app.language,\n        contentOfConfirmModal: state.app.contentOfConfirmModal,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setContentOfConfirmModal: (contentOfConfirmModal) =>\n            dispatch(actions.setContentOfConfirmModal(contentOfConfirmModal)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { getHandbookServices } from '../../../services/patientServices';\r\nimport { deleteHandbookServices } from '../../../services/userServices';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './ListHandbook.scss';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport ModalHandbook from './ModalHandbook';\r\nimport SelectStatusId from '../../../components/SelectStatusId';\r\nimport ConfirmModal from '../../../components/ConfirmModal';\r\nimport Loading from '../../../components/Loading';\r\n\r\nclass ListHandbook extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listHandbook: [],\r\n            isShowModalHandbook: false,\r\n            id: '',\r\n            statusId: 'S1',\r\n            isShowConfirmModal: false,\r\n\r\n            count: 1,\r\n            totalPage: 1,\r\n            pageIndex: 1,\r\n            limit: 5,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let { statusId } = this.state;\r\n        await this.handleGetHandbook(statusId);\r\n    }\r\n    componentDidUpdate() {}\r\n\r\n    handleClickDetail = async (id) => {\r\n        this.toggleModelConfirm();\r\n        this.setState({\r\n            id: id,\r\n        });\r\n    };\r\n\r\n    handleGetHandbook = async () => {\r\n        let { statusId } = this.state;\r\n        let listHandbook = await getHandbookServices('', 'manage', statusId);\r\n        this.setState({\r\n            listHandbook: listHandbook.data,\r\n        });\r\n    };\r\n\r\n    toggleModelConfirm = () => {\r\n        this.setState({\r\n            isShowModalHandbook: !this.state.isShowModalHandbook,\r\n        });\r\n    };\r\n    handleChangeInput = async (statusId) => {\r\n        let listHandbook = await getHandbookServices('', 'manage', statusId);\r\n        this.setState({\r\n            listHandbook: listHandbook.data,\r\n            statusId: statusId,\r\n        });\r\n    };\r\n    toggleConfirmModal = () => {\r\n        this.setState({\r\n            isShowConfirmModal: !this.state.isShowConfirmModal,\r\n        });\r\n    };\r\n    handleClickDelete = async (id) => {\r\n        this.toggleConfirmModal();\r\n        this.setState({\r\n            id: id,\r\n        });\r\n    };\r\n\r\n    handleShowLoading = () => {\r\n        this.setState({\r\n            isShowLoading: true,\r\n        });\r\n    };\r\n\r\n    handleHideLoading = () => {\r\n        this.setState({\r\n            isShowLoading: false,\r\n        });\r\n    };\r\n\r\n    acceptDeleteHandbook = async () => {\r\n        this.handleShowLoading();\r\n        let response = await deleteHandbookServices(this.state.id);\r\n        if (response && response.errorCode === 0) {\r\n            await this.handleGetHandbook(this.state.statusId);\r\n            toast.success(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.setState({\r\n                isShowBoxImage: false,\r\n                isRoomImage: false,\r\n                previewImageUrl: '',\r\n                image: '',\r\n                adviser: '',\r\n                authors: '',\r\n                title: '',\r\n                contentHtml: '',\r\n                contentMarkdown: '',\r\n                isShowLoading: false,\r\n            });\r\n            this.toggleConfirmModal();\r\n        } else if (response && response.errorCode === 1) {\r\n            toast.error(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n    render() {\r\n        let { listHandbook, isShowModalHandbook, id, statusId, isShowConfirmModal, isShowLoading } = this.state;\r\n\r\n        let listSelect = [\r\n            { text: <FormattedMessage id=\"admin.status.new\" />, id: 'S1' },\r\n            { text: <FormattedMessage id=\"admin.status.confirmed\" />, id: 'S2' },\r\n            { text: <FormattedMessage id=\"admin.status.canceled\" />, id: 'S3' },\r\n        ];\r\n        return (\r\n            <div className=\"manage-handbook-container mt-2\">\r\n                {isShowLoading && <Loading />}\r\n\r\n                {isShowConfirmModal && (\r\n                    <ConfirmModal\r\n                        toggleConfirmModal={this.toggleConfirmModal}\r\n                        isShowConfirmModal={isShowConfirmModal}\r\n                        deleteFunc={this.acceptDeleteHandbook}\r\n                        content=\"Xoá cẩm nang này.\"\r\n                    />\r\n                )}\r\n                {isShowModalHandbook ? (\r\n                    <ModalHandbook\r\n                        isShowModalHandbook={isShowModalHandbook}\r\n                        toggleModelConfirm={this.toggleModelConfirm}\r\n                        id={id}\r\n                        statusId={statusId}\r\n                        handleGetHandbook={this.handleGetHandbook}\r\n                        handleShowLoading={this.handleShowLoading}\r\n                        handleHideLoading={this.handleHideLoading}\r\n                        handleClickDelete={this.handleClickDelete}\r\n                    />\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <div className=\"w60\">\r\n                    <div className=\"handbook-title\">\r\n                        <h3>Danh sách cẩm nang</h3>\r\n                    </div>\r\n                    <div className=\"manage-handbook-wrapper\">\r\n                        <div className=\"handbook-table\">\r\n                            <SelectStatusId\r\n                                handleChangeInput={this.handleChangeInput}\r\n                                listSelect={listSelect}\r\n                                statusId={statusId}\r\n                            />\r\n                            <table className=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th scope=\"col\">Image</th>\r\n                                        <th scope=\"col\">Tiêu đề</th>\r\n                                        <th scope=\"col\">Người gửi</th>\r\n                                        <th scope=\"col\">Trạng thái</th>\r\n                                        <th scope=\"col\">Hành động</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {listHandbook &&\r\n                                        listHandbook.length > 0 &&\r\n                                        listHandbook.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <th scope=\"row\">{index + 1}</th>\r\n                                                    <td>\r\n                                                        <img src={item.image} atl=\"img\"></img>\r\n                                                    </td>\r\n                                                    <td>{item.title}</td>\r\n                                                    <td>{`${item.senderData.firstName} ${item.senderData.lastName}`}</td>\r\n                                                    <td>{item.statusId}</td>\r\n                                                    <td>\r\n                                                        {(this.state.statusId === 'S1' ||\r\n                                                            this.state.statusId === 'S2') && (\r\n                                                            <button\r\n                                                                className=\"btn btn-primary\"\r\n                                                                onClick={() => this.handleClickDetail(item.id)}\r\n                                                            >\r\n                                                                Detail\r\n                                                            </button>\r\n                                                        )}\r\n\r\n                                                        {'  '}\r\n\r\n                                                        {/* {this.state.statusId !== 'S3' && ( */}\r\n                                                        <button\r\n                                                            className=\"btn btn-warning\"\r\n                                                            onClick={() => this.handleClickDelete(item.id)}\r\n                                                        >\r\n                                                            {this.state.statusId === 'S3' ? 'Đăng lại' : 'Xoá'}\r\n                                                        </button>\r\n                                                        {/* )} */}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        allDoctorRedux: state.doctor.allDoctor,\r\n        listAppointmentRedux: state.doctor.listAppointment,\r\n        statusIdRedux: state.doctor.statusId,\r\n        languageRedux: state.app.language,\r\n        userInfoRedux: state.user.userInfo,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAllDoctorRedux: () => dispatch(actions.fetchAllDoctor()),\r\n        fetchAllcodeScheduleRedux: () => dispatch(actions.fetchAllcodeSchedule()),\r\n        changeStatusIdRedux: (statusId) => dispatch(actions.changeStatusId(statusId)),\r\n        getAppointmentDoctorRedux: (doctorId, initDate, statusId) =>\r\n            dispatch(actions.getAppointmentDoctor(doctorId, initDate, statusId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListHandbook);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES, CommonUtils, PATH_FIREBASE } from '../../../utils';\r\nimport * as actions from '../../../store/actions';\r\nimport Select from 'react-select';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { postNewsServices } from '../../../services/userServices';\r\nimport { FaFileUpload } from 'react-icons/fa';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport './ManageNews.scss';\r\nimport { toast } from 'react-toastify';\r\nimport { uploadFileToFirebase } from '../../../firebase/uploadFile';\r\nimport CKeditor from '../../../components/CKeditor/CKeditor';\r\n\r\nimport Loading from '../../../components/Loading';\r\n\r\nclass ManageNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowBoxImage: false,\r\n            isRoomImage: false,\r\n            previewImageUrl: '',\r\n            image: '',\r\n            file: '',\r\n\r\n            allDoctor: [],\r\n            adviser: '',\r\n            authors: '',\r\n            title: '',\r\n            type: 'Mới ra mắt',\r\n            contentHtml: '',\r\n            contentMarkdown: '',\r\n            topic: '',\r\n            focus: '',\r\n            isShowLoading: false,\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        this.props.fetchAllDoctorRedux();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.allDoctorRedux !== this.props.allDoctorRedux) {\r\n            let listDoctor = this.buildInputSelectName(this.props.allDoctorRedux);\r\n            this.setState({\r\n                allDoctor: listDoctor,\r\n            });\r\n        }\r\n    }\r\n    buildInputSelectName = (data) => {\r\n        let result = [];\r\n        if (data && data.length > 0) {\r\n            result = data.map((item, index) => {\r\n                let object = {};\r\n                let labelVi = `${item.firstName} ${item.lastName}`;\r\n                let labelEn = `${item.lastName} ${item.firstName}`;\r\n                object.label = this.props.languageRedux === LANGUAGES.VI ? labelVi : labelEn;\r\n                object.value = item.id;\r\n                return object;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    onChangeInput = (key, value) => {\r\n        this.setState({\r\n            [key]: value,\r\n        });\r\n    };\r\n    handlePickDoctor = (e) => {\r\n        let adviser = e.map((item) => item.value);\r\n        this.setState({\r\n            adviser: adviser.join(),\r\n        });\r\n    };\r\n\r\n    handleOnchangeImage = async (e) => {\r\n        let data = e.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({ previewImageUrl: objectUrl, isShowBoxImage: true, image: base64, file: file });\r\n        }\r\n    };\r\n\r\n    handleEditorChange = (data) => {\r\n        this.setState({\r\n            contentHtml: data,\r\n        });\r\n    };\r\n    handleClickSubmit = async () => {\r\n        this.setState({\r\n            isShowLoading: true,\r\n        });\r\n        let { adviser, authors, title, type, contentMarkdown, contentHtml, topic, focus, file } = this.state;\r\n        let htmlFocus = focus\r\n            .split('\\n')\r\n            .map((item) => {\r\n                return `<li>${item}</li>`;\r\n            })\r\n            .join('');\r\n        htmlFocus = `<ul>${htmlFocus}</ul>`;\r\n        let imageURL = await uploadFileToFirebase(PATH_FIREBASE.NEWS_IMAGE, file);\r\n\r\n        let data = { adviser, authors, title, type, contentMarkdown, contentHtml, image: imageURL, topic, htmlFocus };\r\n        let response = await postNewsServices(data);\r\n        if (response && response.errorCode === 0) {\r\n            toast.success(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.setState({\r\n                isShowBoxImage: false,\r\n                isRoomImage: false,\r\n                previewImageUrl: '',\r\n                image: '',\r\n\r\n                adviser: '',\r\n                authors: '',\r\n                title: '',\r\n                type: '',\r\n                topic: '',\r\n                focus: '',\r\n\r\n                contentHtml: '',\r\n                contentMarkdown: '',\r\n                isShowLoading: false,\r\n            });\r\n        } else if (response && response.errorCode === 1) {\r\n            toast.error(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { allDoctor, authors, title, type, isShowLoading } = this.state;\r\n        return (\r\n            <div className=\"handbook_container position-loading\">\r\n                {isShowLoading && <Loading />}\r\n                <div className=\"handbook-title title\">\r\n                    <h3>Quản lý tin tức</h3>\r\n                </div>\r\n\r\n                <div className=\"wrapper-handbook coverArea\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label forhtml=\"inputEmail4\">\r\n                                {/* <FormattedMessage id=\"admin.manage-doctor.name-clinic\" /> */}\r\n                                Tiêu đề\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"inputEmail4\"\r\n                                value={title}\r\n                                onChange={(e) => this.onChangeInput('title', e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-md-3 upload-file-container\">\r\n                            <label htmlFor=\"inputCity\">Chọn ảnh chủ đề</label>\r\n                            <div className=\"btn-container\">\r\n                                <input\r\n                                    id=\"uploadFile\"\r\n                                    type=\"file\"\r\n                                    className=\"form-control\"\r\n                                    hidden\r\n                                    onChange={(e) => this.handleOnchangeImage(e)}\r\n                                />\r\n                                <label className=\"text-upload\" htmlFor=\"uploadFile\">\r\n                                    <FormattedMessage id=\"manage-user.uploadImage\" />\r\n                                    <FaFileUpload className=\"icon-upload\" />\r\n                                </label>\r\n                                {this.state.isShowBoxImage && (\r\n                                    <div\r\n                                        className=\"preview pv-left preview-right\"\r\n                                        style={{ backgroundImage: `url(${this.state.previewImageUrl})` }}\r\n                                        onClick={() => this.setState({ isRoomImage: true })}\r\n                                    ></div>\r\n                                )}\r\n                            </div>\r\n                            {this.state.isRoomImage && (\r\n                                <Lightbox\r\n                                    mainSrc={this.state.previewImageUrl}\r\n                                    onCloseRequest={() => this.setState({ isRoomImage: false })}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label forhtml=\"inputEmail4\">\r\n                                {/* <FormattedMessage id=\"admin.manage-doctor.name-clinic\" /> */}\r\n                                Nhóm tác giả\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"inputEmail4\"\r\n                                value={authors}\r\n                                onChange={(e) => this.onChangeInput('authors', e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\" form-group col-md-3\">\r\n                            <label>Nhãn tin(Ưu đãi, Mới ra mắt)</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"inputEmail4\"\r\n                                value={type}\r\n                                onChange={(e) => this.onChangeInput('type', e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\" form-group col-md-3\">\r\n                            <label>Nhóm cố vấn</label>\r\n                            <Select\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.select-doctor\" />}\r\n                                isMulti\r\n                                defaultValue={''}\r\n                                onChange={(e) => this.handlePickDoctor(e)}\r\n                                options={allDoctor}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\" form-group col-md-6\">\r\n                            <label>Chủ đề</label>\r\n                            <textarea\r\n                                className=\"info-doctor form-control\"\r\n                                rows=\"4\"\r\n                                onChange={(e) => this.onChangeInput('topic', e.target.value)}\r\n                                value={this.state.topic}\r\n                                placeholder=\"Chủ đề (50 từ<)\"\r\n                            ></textarea>\r\n                        </div>\r\n                        <div className=\" form-group col-md-6\">\r\n                            <label>Tiêu điểm bài viết</label>\r\n                            <textarea\r\n                                className=\"info-doctor form-control\"\r\n                                rows=\"4\"\r\n                                onChange={(e) => this.onChangeInput('focus', e.target.value)}\r\n                                value={this.state.focus}\r\n                                placeholder=\"Viết thành từng dòng, ngắn gọn(50 từ<)\"\r\n                            ></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"manage-doctor-editor\">\r\n                        <label className=\"title-editor\">\r\n                            {/* <FormattedMessage id=\"admin.manage-doctor.detail-doctor\" /> */}\r\n                            Bài viết:\r\n                        </label>\r\n                        <CKeditor handleEditorChange={this.handleEditorChange} value={this.state.contentHtml} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"container_btn coverArea\">\r\n                    <button\r\n                        className=\"btn btn-warning\"\r\n                        onClick={() => {\r\n                            this.handleClickSubmit();\r\n                        }}\r\n                    >\r\n                        Đăng bài\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        listAppointmentRedux: state.doctor.listAppointment,\r\n        allDoctorRedux: state.doctor.allDoctor,\r\n        userInfo: state.user.userInfo,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAllDoctorRedux: () => dispatch(actions.fetchAllDoctor()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageNews);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { BsLightbulbFill } from 'react-icons/bs';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { getNewsServices } from '../../../services/patientServices';\r\nimport { confirmNewsServices } from '../../../services/userServices';\r\nimport moment from 'moment';\r\nimport './ModalNews.scss';\r\n\r\nclass ModalNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handbookData: {},\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let handbookId = this.props.id;\r\n        let response = await getNewsServices(handbookId, 'detail');\r\n        if (response && response.errorCode === 0) {\r\n            this.setState({\r\n                handbookData: response.data,\r\n            });\r\n        }\r\n    }\r\n    componentDidUpdate() {}\r\n\r\n    handleConfirm = async (id) => {\r\n        this.props.handleShowLoading();\r\n        let response = await confirmNewsServices(id);\r\n        if (response && response.errorCode === 0) {\r\n            this.props.toggleModelConfirm();\r\n            await this.props.handleGetNews(this.props.statusId);\r\n            await this.props.checkQueueNewsRedux();\r\n\r\n            toast.success(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.props.handleHideLoading();\r\n        } else {\r\n            toast.error(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { isShowModalNews, id, statusId } = this.props;\r\n\r\n        let { handbookData } = this.state;\r\n        return (\r\n            <>\r\n                <Modal\r\n                    className=\"modal-booking-container\"\r\n                    isOpen={isShowModalNews}\r\n                    toggle={() => this.props.toggleModelConfirm()}\r\n                    size=\"lg\"\r\n                    centered={true}\r\n                >\r\n                    <ModalHeader toggle={() => this.props.toggleModelConfirm()}>Chi tiết cẩm nang</ModalHeader>\r\n                    <ModalBody>\r\n                        {' '}\r\n                        <div className=\"handbook-container coverArea\">\r\n                            <div className=\"handbook-wrapper\">\r\n                                <h1 className=\"handbook-title\">{handbookData?.title}</h1>\r\n                                <div className=\"handbook-detail-info\">\r\n                                    <p>Nhóm tác giả:{handbookData?.authors}</p>\r\n                                    <p>Người kiểm duyệt:{handbookData?.censor}</p>\r\n                                    <p>Cố vấn y khoa:{handbookData?.adviser}</p>\r\n                                    <p>\r\n                                        Xuất bản: {moment(handbookData?.createdAt).format('LL')}, Cập nhật lần cuối:\r\n                                        {moment(handbookData?.updatedAt).format('LL')}\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <div className=\"intro-bookingCare \">\r\n                                    <div className=\"icon\">\r\n                                        <BsLightbulbFill />\r\n                                    </div>\r\n                                    <h4>\r\n                                        BookingCare là Nền tảng Y tế chăm sóc sức khỏe toàn diện hàng đầu Việt Nam kết\r\n                                        nối người dùng với trên 150 bệnh viện - phòng khám uy tín, hơn 1,000 bác sĩ\r\n                                        chuyên khoa giỏi và hàng nghìn dịch vụ, sản phẩm y tế chất lượng cao.\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"image-handbook\">\r\n                                    <img src={handbookData?.image} alt=\"img\"></img>\r\n                                </div>\r\n                                <div\r\n                                    className=\"detail-clinic\"\r\n                                    dangerouslySetInnerHTML={{ __html: handbookData.contentHtml }}\r\n                                ></div>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        {statusId === 'S1' && (\r\n                            <Button className=\" button btn-save\" color=\"success\" onClick={() => this.handleConfirm(id)}>\r\n                                Confirm\r\n                            </Button>\r\n                        )}{' '}\r\n                        <Button\r\n                            className=\"button btn btn-cancel\"\r\n                            color=\"warning\"\r\n                            onClick={() => this.props.handleClickDelete(id)}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                        <Button\r\n                            className=\"button btn btn-cancel\"\r\n                            color=\"success\"\r\n                            onClick={() => this.props.toggleModelConfirm()}\r\n                        >\r\n                            <FormattedMessage id=\"appointment.cancel\" />\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        listAppointmentRedux: state.doctor.listAppointment,\r\n        statusIdRedux: state.doctor.statusId,\r\n        queueNews: state.user.queueNews,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAppointmentDoctorRedux: (doctorId, initDate, statusId) =>\r\n            dispatch(actions.getAppointmentDoctor(doctorId, initDate, statusId)),\r\n        checkQueueNewsRedux: () => dispatch(actions.checkQueueNewsRedux()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalNews);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\n\r\nimport { getNewsServices } from '../../../services/patientServices';\r\nimport { deleteNewsServices } from '../../../services/userServices';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './ListNews.scss';\r\nimport { toast } from 'react-toastify';\r\nimport ConfirmModal from '../../../components/ConfirmModal';\r\n\r\nimport ModalNews from './ModalNews';\r\nimport SelectStatusId from '../../../components/SelectStatusId';\r\n\r\nimport Loading from '../../../components/Loading';\r\n\r\nclass ListNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listNews: [],\r\n            isShowModalNews: false,\r\n            id: '',\r\n            statusId: 'S1',\r\n\r\n            isShowLoading: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let { statusId } = this.state;\r\n        await this.handleGetNews(statusId);\r\n    }\r\n    componentDidUpdate() {}\r\n    handleClickDetail = async (id) => {\r\n        this.toggleModelConfirm();\r\n        this.setState({\r\n            id: id,\r\n        });\r\n    };\r\n\r\n    handleGetNews = async () => {\r\n        let { statusId } = this.state;\r\n        let listNews = await getNewsServices('', 'manage', statusId);\r\n        this.setState({\r\n            listNews: listNews.data,\r\n        });\r\n    };\r\n\r\n    toggleModelConfirm = () => {\r\n        this.setState({\r\n            isShowModalNews: !this.state.isShowModalNews,\r\n        });\r\n    };\r\n    handleChangeInput = async (statusId) => {\r\n        let listNews = await getNewsServices('', 'manage', statusId);\r\n        this.setState({\r\n            listNews: listNews.data,\r\n            statusId: statusId,\r\n        });\r\n    };\r\n    toggleConfirmModal = () => {\r\n        this.setState({\r\n            isShowConfirmModal: !this.state.isShowConfirmModal,\r\n        });\r\n    };\r\n    handleClickDelete = async (id) => {\r\n        this.toggleConfirmModal();\r\n        this.setState({\r\n            id: id,\r\n        });\r\n    };\r\n    handleShowLoading = () => {\r\n        this.setState({\r\n            isShowLoading: true,\r\n        });\r\n    };\r\n\r\n    handleHideLoading = () => {\r\n        this.setState({\r\n            isShowLoading: false,\r\n        });\r\n    };\r\n\r\n    acceptDeleteNews = async () => {\r\n        let response = await deleteNewsServices(this.state.id);\r\n        if (response && response.errorCode === 0) {\r\n            await this.handleGetNews(this.state.statusId);\r\n            await this.props.checkQueueNewsRedux();\r\n\r\n            toast.success(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.setState({\r\n                isShowBoxImage: false,\r\n                isRoomImage: false,\r\n                previewImageUrl: '',\r\n                image: '',\r\n\r\n                adviser: '',\r\n                authors: '',\r\n                title: '',\r\n                contentHtml: '',\r\n                contentMarkdown: '',\r\n            });\r\n            this.toggleConfirmModal();\r\n        } else if (response && response.errorCode === 1) {\r\n            toast.error(response.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { listNews, isShowModalNews, id, statusId, isShowConfirmModal, isShowLoading } = this.state;\r\n        let {} = this.props;\r\n\r\n        let listSelect = [\r\n            { text: <FormattedMessage id=\"admin.status.new\" />, id: 'S1' },\r\n            { text: <FormattedMessage id=\"admin.status.confirmed\" />, id: 'S2' },\r\n            { text: <FormattedMessage id=\"admin.status.canceled\" />, id: 'S3' },\r\n        ];\r\n        return (\r\n            <div className=\"manage-handbook-container mt-2  position-loading\">\r\n                {isShowLoading && <Loading />}\r\n\r\n                {isShowConfirmModal && (\r\n                    <ConfirmModal\r\n                        toggleConfirmModal={this.toggleConfirmModal}\r\n                        isShowConfirmModal={isShowConfirmModal}\r\n                        deleteFunc={this.acceptDeleteNews}\r\n                    />\r\n                )}\r\n                {isShowModalNews ? (\r\n                    <ModalNews\r\n                        isShowModalNews={isShowModalNews}\r\n                        toggleModelConfirm={this.toggleModelConfirm}\r\n                        id={id}\r\n                        statusId={statusId}\r\n                        handleGetNews={this.handleGetNews}\r\n                        handleShowLoading={this.handleShowLoading}\r\n                        handleHideLoading={this.handleHideLoading}\r\n                        handleClickDelete={this.handleClickDelete}\r\n                    />\r\n                ) : (\r\n                    ''\r\n                )}\r\n\r\n                <div className=\"handbook-title\">\r\n                    <h3>Danh sách tin tức</h3>\r\n                </div>\r\n                <div className=\"manage-handbook-wrapper w60\">\r\n                    <div className=\"handbook-table\">\r\n                        <SelectStatusId\r\n                            handleChangeInput={this.handleChangeInput}\r\n                            listSelect={listSelect}\r\n                            statusId={statusId}\r\n                        />\r\n                        <table className=\"table table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Image</th>\r\n                                    <th scope=\"col\">Tiêu đề</th>\r\n                                    <th scope=\"col\">Người gửi</th>\r\n                                    <th scope=\"col\">Trạng thái</th>\r\n                                    <th scope=\"col\">Hành động</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {listNews &&\r\n                                    listNews.length > 0 &&\r\n                                    listNews.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>\r\n                                                    <img src={item.image} atl=\"img\"></img>\r\n                                                </td>\r\n                                                <td>{item.title}</td>\r\n                                                <td>{`${item.senderDataNews.firstName} ${item.senderDataNews.lastName}`}</td>\r\n                                                <td>{item.statusId}</td>\r\n                                                <td>\r\n                                                    {(this.state.statusId === 'S1' || this.state.statusId === 'S2') && (\r\n                                                        <button\r\n                                                            className=\"btn btn-primary\"\r\n                                                            onClick={() => this.handleClickDetail(item.id)}\r\n                                                        >\r\n                                                            Detail\r\n                                                        </button>\r\n                                                    )}\r\n\r\n                                                    {'  '}\r\n\r\n                                                    <button\r\n                                                        className=\"btn btn-warning\"\r\n                                                        onClick={() => this.handleClickDelete(item.id)}\r\n                                                    >\r\n                                                        {this.state.statusId === 'S3' ? 'Đăng lại' : 'Xoá'}\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        allDoctorRedux: state.doctor.allDoctor,\r\n        listAppointmentRedux: state.doctor.listAppointment,\r\n        statusIdRedux: state.doctor.statusId,\r\n        languageRedux: state.app.language,\r\n        userInfoRedux: state.user.userInfo,\r\n        queueNews: state.user.queueNews,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAllDoctorRedux: () => dispatch(actions.fetchAllDoctor()),\r\n        fetchAllcodeScheduleRedux: () => dispatch(actions.fetchAllcodeSchedule()),\r\n        changeStatusIdRedux: (statusId) => dispatch(actions.changeStatusId(statusId)),\r\n        getAppointmentDoctorRedux: (doctorId, initDate, statusId) =>\r\n            dispatch(actions.getAppointmentDoctor(doctorId, initDate, statusId)),\r\n        checkQueueNewsRedux: () => dispatch(actions.checkQueueNewsRedux()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListNews);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ManageSchedule from '../containers/System/Doctor/ManageSchedule';\r\nimport ManageAppointment from '../containers/System/Doctor/ManageAppointment';\r\nimport ManageHandbook from '../containers/System/Handbook/ManageHandbook';\r\nimport ListHandbook from '../containers/System/Handbook/ListHandbook';\r\nimport ManageNews from '../containers/System/News/ManageNews';\r\nimport ListNews from '../containers/System/News/ListNews';\r\nimport { TYPE_USER } from '../utils';\r\n\r\nimport Header from '../containers/Header/Header';\r\n\r\nclass Doctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {}\r\n    render() {\r\n        let { roleId } = this.props;\r\n        let isAuth = roleId === TYPE_USER.DOCTOR || roleId === TYPE_USER.ADMIN;\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        {isAuth && (\r\n                            <Switch>\r\n                                <Route path=\"/doctor/manage-schedule\" component={ManageSchedule} />\r\n                                <Route path=\"/doctor/manage-patient-appointment\" component={ManageAppointment} />\r\n                                <Route path=\"/doctor/manage-handbook\" component={ManageHandbook} />\r\n                                <Route path=\"/doctor/list-handbook\" component={ListHandbook} />\r\n                                <Route path=\"/doctor/manage-news\" component={ManageNews} />\r\n                                <Route path=\"/doctor/list-news\" component={ListNews} />\r\n                            </Switch>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        roleId: state.user.roleId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\r\n","import React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nimport './CustomScrollbars.scss';\n\nclass CustomScrollbars extends Component {\n\n    ref = React.createRef();\n\n    getScrollLeft =()=>{\n        const scrollbars = this.ref.current;\n        return scrollbars.getScrollLeft();\n    }\n    getScrollTop =()=>{\n        const scrollbars = this.ref.current;\n        return scrollbars.getScrollTop();\n    }\n\n    scrollToBottom = () => {\n        if (!this.ref || !this.ref.current) {\n            return;\n        }\n        const scrollbars = this.ref.current;\n        const targetScrollTop = scrollbars.getScrollHeight();\n        this.scrollTo(targetScrollTop);\n    };\n\n    scrollTo = (targetTop) => {\n        const { quickScroll } = this.props;\n        if (!this.ref || !this.ref.current) {\n            return;\n        }\n        const scrollbars = this.ref.current;\n        const originalTop = scrollbars.getScrollTop();\n        let iteration = 0;\n\n        const scroll = () => {\n            iteration++;\n            if (iteration > 30) {\n                return;\n            }\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\n\n            if (quickScroll && quickScroll === true) {\n                scroll();\n            } else {\n                setTimeout(() => {\n                    scroll();\n                }, 20);\n            }\n        };\n\n        scroll();\n    };\n\n    renderTrackHorizontal = (props) => {\n        return (\n            <div {...props} className=\"track-horizontal\" />\n        );\n    };\n\n    renderTrackVertical = (props) => {\n        return (\n            <div {...props} className=\"track-vertical\" />\n        );\n    };\n\n    renderThumbHorizontal = (props) => {\n        return (\n            <div {...props} className=\"thumb-horizontal\" />\n        );\n    };\n\n    renderThumbVertical = (props) => {\n        return (\n            <div {...props} className=\"thumb-vertical\" />\n        );\n    };\n\n    renderNone = (props) => {\n        return (\n            <div />\n        );\n    };\n\n    render() {\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\n        return (\n            <Scrollbars\n                ref={this.ref}\n                autoHide={true}\n                autoHideTimeout={200}\n                hideTracksWhenNotNeeded={true}\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\n                {...otherProps}\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\n            >\n                {children}\n            </Scrollbars>\n        );\n    }\n}\n\nexport default CustomScrollbars;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport './BoxBackground.scss';\r\nimport { IoSearch, IoClose } from 'react-icons/io5';\r\nimport { searchAllServices } from '../../../services/patientServices';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst options = [\r\n    {\r\n        link: 'https://cdn.bookingcare.vn/fo/2021/12/08/133537-khamchuyenkhoa.png',\r\n        // link:imagesOption,\r\n        text: <FormattedMessage id=\"options.specialist_examination\" />,\r\n    },\r\n    {\r\n        link: 'https://cdn.bookingcare.vn/fo/2021/12/08/133657-khamtuxa.png',\r\n        text: <FormattedMessage id=\"options.Remote_medical_examination\" />,\r\n    },\r\n    {\r\n        link: 'https://cdn.bookingcare.vn/fo/2021/12/08/133744-khamtongquat.png',\r\n        text: <FormattedMessage id=\"options.Physical_exam\" />,\r\n    },\r\n    {\r\n        link: 'https://cdn.bookingcare.vn/fo/2021/12/08/133744-dichvuxetnghiem.png',\r\n        text: <FormattedMessage id=\"options.Testing_Service\" />,\r\n    },\r\n    {\r\n        link: 'https://cdn.bookingcare.vn/fo/2021/12/08/133744-suckhoetinhthan.png',\r\n        text: <FormattedMessage id=\"options.Mental_health\" />,\r\n    },\r\n    {\r\n        link: 'https://cdn.bookingcare.vn/fo/2022/05/19/104635-khamnhakhoa.png',\r\n        text: <FormattedMessage id=\"options.Dental_examination\" />,\r\n    },\r\n    {\r\n        link: 'https://cdn.bookingcare.vn/fo/2022/05/16/151930-phau-thuat.jpg',\r\n        text: <FormattedMessage id=\"options.Surgery_pack\" />,\r\n    },\r\n    {\r\n        link: 'https://cdn.bookingcare.vn/fo/2021/12/08/133744-khamtainha.png',\r\n        text: <FormattedMessage id=\"options.Home_check-up\" />,\r\n    },\r\n    {\r\n        link: 'https://cdn.bookingcare.vn/fo/2022/07/29/101157-icon-lich-su.jpg',\r\n        text: <FormattedMessage id=\"options.Corporate_health\" />,\r\n    },\r\n];\r\n\r\nclass BoxBackground extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputSearch: '',\r\n            listResultSearch: [],\r\n        };\r\n        this.timer = null;\r\n    }\r\n\r\n    onChangInput = (input) => {\r\n        this.setState({\r\n            inputSearch: input,\r\n        });\r\n        clearTimeout(this.timer);\r\n        this.timer = setTimeout(async () => {\r\n            let response = await searchAllServices(input);\r\n            if (response && response.errorCode === 0) {\r\n                this.setState({\r\n                    listResultSearch: [\r\n                        { arr: [...response?.results?.clinics], title: 'Cơ sở y tế', to: '/detail-clinic' },\r\n                        { arr: [...response?.results?.doctors], title: 'Bác sĩ', to: '/detail-doctor' },\r\n                        {\r\n                            arr: [...response?.results?.specialtys],\r\n                            title: 'Chuyên khoa',\r\n                            to: `/detail-specialty`,\r\n                        },\r\n                    ],\r\n                });\r\n            }\r\n        }, 500);\r\n    };\r\n\r\n    handleClearInputSearch = () => {\r\n        this.setState({\r\n            inputSearch: '',\r\n            listResultSearch: [],\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { inputSearch, listResultSearch } = this.state;\r\n\r\n        return (\r\n            <div className=\"box-background\">\r\n                <div className=\"content\">\r\n                    <div className=\"title-header\">\r\n                        <h1>\r\n                            {' '}\r\n                            <FormattedMessage id=\"banner.title\" />\r\n                            <br />\r\n                            <b>\r\n                                <FormattedMessage id=\"banner.slogan\" />\r\n                            </b>\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"search\">\r\n                        <span className=\"icon-search\">\r\n                            <IoSearch />\r\n                        </span>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"input-search\"\r\n                            placeholder=\"Tìm bác sĩ, chuyên khoa, bệnh viện...\"\r\n                            onChange={(e) => this.onChangInput(e.target.value)}\r\n                            value={inputSearch}\r\n                        />\r\n                        <IoClose className=\"btn-clear\" onClick={() => this.handleClearInputSearch()} />\r\n                        <div className=\"drop-down\">\r\n                            {listResultSearch.length > 0 &&\r\n                                listResultSearch.map((item, index) => {\r\n                                    if (item.arr.length > 0) {\r\n                                        return (\r\n                                            <div className=\"area\" key={index}>\r\n                                                <h4>{item.title}</h4>\r\n                                                <ul className=\"box-list-result\">\r\n                                                    {item.arr.length > 0 &&\r\n                                                        item.arr.map((li, index) => {\r\n                                                            return (\r\n                                                                <Link\r\n                                                                    className=\"text-link\"\r\n                                                                    to={`${item.to}/${li.id}`}\r\n                                                                    key={index}\r\n                                                                >\r\n                                                                    <li key={index}>{li.name}</li>\r\n                                                                </Link>\r\n                                                            );\r\n                                                        })}\r\n                                                </ul>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"options\">\r\n                        <div className=\" w-options\">\r\n                            {options.map((item, index) => {\r\n                                return (\r\n                                    <div className=\"item\" key={index}>\r\n                                        <div className=\"icon-item\">\r\n                                            <img src={item.link} alt=\"img icon\" />\r\n                                        </div>\r\n                                        <div className=\"text-item\">{item.text}</div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoxBackground);\r\n","import { FaAngleRight, FaAngleLeft } from 'react-icons/fa';\r\n\r\nexport const NextArrow = (props) => {\r\n    const { className, style, onClick } = props;\r\n    return <FaAngleRight className={className} style={{ ...style, display: 'block' }} onClick={onClick} />;\r\n};\r\n\r\nexport const PrevArrow = (props) => {\r\n    const { className, style, onClick } = props;\r\n    return <FaAngleLeft className={className} style={{ ...style, display: 'block' }} onClick={onClick} />;\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Section.scss';\r\nimport { PrevArrow, NextArrow } from '../../../components/CustomArrow';\r\n\r\nclass Section extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    handleClickSpecialty = (item) => {};\r\n\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: false,\r\n            speed: 500,\r\n            slidesToShow: this.props.slideShow,\r\n            slidesToScroll: 1,\r\n            nextArrow: <NextArrow />,\r\n            prevArrow: <PrevArrow />,\r\n        };\r\n        let { listSpecialty, listClinic, listHandbook, typeSec, type, background, title, button } = this.props;\r\n        return (\r\n            <div className={`section-container ${background}`}>\r\n                <div className=\"w60\">\r\n                    <div className=\"section-content\">\r\n                        <div className=\"section-header\">\r\n                            <span className=\"section-title\">{title}</span>\r\n                            <button\r\n                                className=\"more\"\r\n                                onClick={() => {\r\n                                    this.props.toggleModel(this.props.modal);\r\n                                }}\r\n                            >\r\n                                {button}\r\n                            </button>\r\n                        </div>\r\n                        <Slider {...settings}>\r\n                            {typeSec === 'specialtyType' &&\r\n                                listSpecialty.map((item) => {\r\n                                    return (\r\n                                        <Link to={`/detail-specialty/${item.id}`} key={item.id}>\r\n                                            <div className=\"item-slide hover\" key={item.id}>\r\n                                                <div className={`item-${type}`}>\r\n                                                    <div className={`img-${type}`}>\r\n                                                        <img className=\"img\" src={item.image} alt=\"img\" />\r\n                                                    </div>\r\n                                                    <p className={`text-${type}`}>{item.name}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    );\r\n                                })}\r\n                        </Slider>\r\n                        <Slider {...settings}>\r\n                            {typeSec === 'clinics' &&\r\n                                listClinic &&\r\n                                listClinic.length > 0 &&\r\n                                listClinic.map((item) => {\r\n                                    return (\r\n                                        <Link to={`/detail-clinic/${item.id}`} key={item.id}>\r\n                                            <div className=\"item-slide hover\" key={item.id}>\r\n                                                <div className={`item-${type}`}>\r\n                                                    <div className={`img-${type}`}>\r\n                                                        <img className=\"img-clinic\" src={item.imageLogo} alt=\"img\" />\r\n                                                    </div>\r\n\r\n                                                    <p className={`text-${type}`}>{item.nameClinic}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    );\r\n                                })}\r\n                        </Slider>\r\n                        <Slider {...settings}>\r\n                            {typeSec === 'handbook' &&\r\n                                listHandbook &&\r\n                                listHandbook.length > 0 &&\r\n                                listHandbook.map((item) => {\r\n                                    return (\r\n                                        <Link to={`/detail-handbook/${item.id}`} key={item.id}>\r\n                                            <div className=\"item-slide hover\" key={item.id}>\r\n                                                <div className={`item-${type}`}>\r\n                                                    <div className={`img-${type}`}>\r\n                                                        <img className=\"img\" src={item.image} alt=\"img\" />\r\n                                                    </div>\r\n\r\n                                                    <p className={`text-${type}`}>{item.title}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    );\r\n                                })}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Section);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport { getNewsServices } from '../../../services/patientServices';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport './News.scss';\r\nimport { FaAngleRight, FaAngleLeft } from 'react-icons/fa';\r\n\r\nclass News extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listNews: [],\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let listNews = await getNewsServices();\r\n        if (listNews && listNews.errorCode === 0) {\r\n            this.setState({\r\n                listNews: listNews.data,\r\n            });\r\n        }\r\n    }\r\n    handleClickNews = (id) => {\r\n        this.props.history.push(`/detail-news/${id}`);\r\n    };\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 1,\r\n            nextArrow: <FaAngleRight />,\r\n            prevArrow: <FaAngleLeft />,\r\n            autoplay: true,\r\n            arrows: false,\r\n            autoplaySpeed: 2000,\r\n            pauseOnHover: true,\r\n        };\r\n        let { listNews } = this.state;\r\n        return (\r\n            <div className=\"news-container\">\r\n                <div className=\"w60\">\r\n                    <div className=\"news-content\">\r\n                        <Slider {...settings}>\r\n                            {listNews &&\r\n                                listNews.length > 0 &&\r\n                                listNews.map((item) => {\r\n                                    return (\r\n                                        <div\r\n                                            className=\"item-slide\"\r\n                                            key={item.id}\r\n                                            onClick={() => this.handleClickNews(item.id)}\r\n                                        >\r\n                                            {/* <Link to={`/detail-news/${item.id}`}> */}\r\n                                            <div className=\"item\">\r\n                                                <div className=\"topic\">{item?.type}</div>\r\n                                                <div\r\n                                                    className=\"img-news\"\r\n                                                    style={{ backgroundImage: `url(${item?.image})` }}\r\n                                                ></div>\r\n                                                <div className=\"news-brief\">\r\n                                                    <h3 className=\"news-title\">{item?.title}</h3>\r\n                                                    <div\r\n                                                        className=\"highlight-content\"\r\n                                                        dangerouslySetInnerHTML={{ __html: item?.focus }}\r\n                                                    ></div>\r\n\r\n                                                    <div className=\"detail\">\r\n                                                        <span>Xem chi tiết</span>{' '}\r\n                                                        <FaAngleRight className=\"iconDetail\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* </Link> */}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(News));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './About.scss';\r\n\r\nclass About extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`about-container ${this.props.background}`}>\r\n                <div className=\"w60\">\r\n                    <div className=\"about-content\">\r\n                        <div className=\"about-header\">\r\n                            <span className=\"about-title\">{this.props.title}</span>\r\n                        </div>\r\n                        <div className=\"about-body\">\r\n                            <div className=\"about-video\">\r\n                                <iframe\r\n                                    width=\"560\"\r\n                                    height=\"315\"\r\n                                    src=\"https://www.youtube.com/embed/FyDQljKtWnI\"\r\n                                    title=\"YouTube video player\"\r\n                                    frameborder=\"0\"\r\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                                    allowfullscreen\r\n                                ></iframe>\r\n                            </div>\r\n                            <div className=\"about-list\">\r\n                                <img\r\n                                    src=\"https://github.com/nguyenthang621/public_image_bookingcare/blob/main/Capture.PNG?raw=true\"\r\n                                    alt=\"img\"\r\n                                ></img>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport * as actions from '../../../store/actions';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport { withRouter } from 'react-router';\r\n\r\n// import './TopDoctor.scss';\r\nimport { PrevArrow, NextArrow } from '../../../components/CustomArrow';\r\n\r\nclass TopDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topDoctors: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTopDoctorRedux('');\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\r\n            this.setState({\r\n                topDoctors: this.props.topDoctorsRedux,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleClickDetailDoctor = (doctor) => {\r\n        this.props.history.push(`/detail-doctor/${doctor.id}`);\r\n    };\r\n\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: false,\r\n            speed: 500,\r\n            slidesToShow: this.props.slideShow,\r\n            slidesToScroll: 1,\r\n            nextArrow: <NextArrow />,\r\n            prevArrow: <PrevArrow />,\r\n        };\r\n        let { topDoctors } = this.state;\r\n        let { listDataSpecialtyRedux } = this.props;\r\n        return (\r\n            <div className={`section-container ${this.props.background}`}>\r\n                <div className=\"w60\">\r\n                    <div className=\"section-content\">\r\n                        <div className=\"section-header\">\r\n                            <span className=\"section-title\">\r\n                                <FormattedMessage id=\"homepage.out-standing-doctor\" />\r\n                            </span>\r\n                            <button\r\n                                className=\"more\"\r\n                                onClick={() => {\r\n                                    this.props.toggleModel(this.props.modal);\r\n                                }}\r\n                            >\r\n                                <FormattedMessage id=\"homepage.more\" />\r\n                            </button>\r\n                        </div>\r\n                        <Slider {...settings}>\r\n                            {topDoctors &&\r\n                                topDoctors.length > 0 &&\r\n                                topDoctors.map((doctor) => {\r\n                                    let nameSpecialty = '';\r\n                                    let nameVi = `${doctor.positionData.valueVi}, ${doctor.firstName} ${doctor.lastName} `;\r\n                                    let nameEn = `${doctor.positionData.valueEn}, ${doctor.lastName} ${doctor.firstName} `;\r\n                                    let idSpecialty = doctor.Doctor_Infor.specialtyId;\r\n                                    if (idSpecialty) {\r\n                                        nameSpecialty = listDataSpecialtyRedux.filter(\r\n                                            (item) => item.id === idSpecialty,\r\n                                        );\r\n                                        nameSpecialty = nameSpecialty[0]?.name;\r\n                                    }\r\n                                    return (\r\n                                        <div\r\n                                            className=\"item-slide hover\"\r\n                                            key={doctor.id}\r\n                                            onClick={() => this.handleClickDetailDoctor(doctor)}\r\n                                        >\r\n                                            <div className={`item-${this.props.type}`}>\r\n                                                <div className={`img-${this.props.type}`}>\r\n                                                    <img\r\n                                                        className=\"img\"\r\n                                                        src={\r\n                                                            doctor?.imageURL ||\r\n                                                            'https://firebasestorage.googleapis.com/v0/b/bookingcare-6a74c.appspot.com/o/files%2Fuser%2Fuser_d%C3%A8ault.png?alt=media&token=22bdda3a-856e-416d-bce5-b9e52a6004c7'\r\n                                                        }\r\n                                                        alt=\"img\"\r\n                                                    />\r\n                                                </div>\r\n\r\n                                                <h4 className=\"position\">\r\n                                                    {this.props.languageRedux === LANGUAGES.VI ? nameVi : nameEn}\r\n                                                </h4>\r\n\r\n                                                {nameSpecialty && (\r\n                                                    <p className={`text-${this.props.type}`}>{nameSpecialty}</p>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        languageRedux: state.app.language,\r\n        keyForm: state.admin.keyForm,\r\n        topDoctorsRedux: state.doctor.topDoctors,\r\n        listDataClinicRedux: state.patient.listDataClinic,\r\n        listDataSpecialtyRedux: state.patient.listDataSpecialty,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchKeyFromRedux: () => dispatch(actions.fetchKeyForm()),\r\n        fetchTopDoctorRedux: (limit) => dispatch(actions.fetchTopDoctor(limit)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TopDoctor));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BsLightbulbFill } from 'react-icons/bs';\r\n\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { filterAndPagingSpecialty } from '../../../services/userServices';\r\nimport SearchInput from '../../../components/SearchInput';\r\nimport FooterPaging from '../../../components/FooterPaging';\r\n\r\nimport './ListSpecialty.scss';\r\n\r\nclass ListSpecialty extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listSpecialty: [],\r\n\r\n            count: 1,\r\n            totalPage: 1,\r\n\r\n            pageIndex: 1,\r\n            limit: 5,\r\n            keyword: '',\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { pageIndex, limit, keyword } = this.state;\r\n        this.handleFilterAndPaging(pageIndex, limit, keyword);\r\n    }\r\n    componentDidUpdate() {}\r\n    handleFilterAndPaging = async (pageIndex, limit, keyword) => {\r\n        let response = await filterAndPagingSpecialty(pageIndex, limit, keyword);\r\n        if (response && response.errorCode === 0) {\r\n            this.setState({\r\n                listSpecialty: response.data.rows,\r\n                totalPage: response.data.totalPage,\r\n                count: response.data.count,\r\n                pageIndex: pageIndex,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleToggleModel = () => {\r\n        this.setState({ isOpenModel: !this.state.isOpenModel });\r\n    };\r\n\r\n    handleChangePage = async (numberPage) => {\r\n        console.log(numberPage);\r\n        let { limit, keyword, pageIndex, totalPage } = this.state;\r\n        if (numberPage === 'next') {\r\n            if (+pageIndex < +totalPage) {\r\n                this.handleFilterAndPaging(pageIndex + 1, limit, keyword);\r\n            }\r\n        } else if (numberPage === 'back') {\r\n            if (+pageIndex > 1) {\r\n                this.handleFilterAndPaging(pageIndex - 1, limit, keyword);\r\n            }\r\n        } else {\r\n            this.handleFilterAndPaging(numberPage, limit, keyword);\r\n        }\r\n    };\r\n\r\n    handleSearch = async (currentKeyword) => {\r\n        let { limit, pageIndex } = this.state;\r\n        try {\r\n            let response = await filterAndPagingSpecialty(pageIndex, limit, currentKeyword);\r\n            if (response && response.errorCode === 0) {\r\n                this.setState({\r\n                    listSpecialty: response.data.rows,\r\n                    totalPage: response.data.totalPage,\r\n                    count: response.data.count,\r\n                    pageIndex: pageIndex,\r\n                    keyword: currentKeyword,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    render() {\r\n        let { modalSpecialty } = this.props;\r\n        let { listSpecialty, count, pageIndex, totalPage } = this.state;\r\n\r\n        return (\r\n            <div className=\"list-specialty-container\">\r\n                <Modal\r\n                    className=\"modal-booking-container\"\r\n                    isOpen={modalSpecialty}\r\n                    toggle={() => this.props.toggleModel('modalSpecialty')}\r\n                    size=\"mn\"\r\n                    centered={false}\r\n                >\r\n                    <ModalHeader toggle={() => this.props.toggleModel('modalSpecialty')}>\r\n                        Danh sách chuyên khoa\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"search-container-list-patient\">\r\n                            <SearchInput placeholder=\"Tìm kiếm...\" handleSearch={this.handleSearch} delay={800} />\r\n                        </div>\r\n                        <div className=\"list-specialty-content\">\r\n                            {listSpecialty.length > 0 &&\r\n                                listSpecialty.map((item) => {\r\n                                    return (\r\n                                        <Link className=\"item\" to={`/detail-specialty/${item.id}`} key={item.id}>\r\n                                            <div className=\"item-specialty\" key={item.id}>\r\n                                                <div className=\"image-specialty\">\r\n                                                    <img src={item.image} alt=\"img\"></img>\r\n                                                </div>\r\n                                                <div className=\"name-specialty\">{item.name}</div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    );\r\n                                })}\r\n                        </div>\r\n                        <FooterPaging\r\n                            titleTotalRecord=\"Tổng chuyên khoa\"\r\n                            TotalPage={totalPage}\r\n                            PageIndex={pageIndex}\r\n                            TotalRecord={count}\r\n                            handleChangePage={this.handleChangePage}\r\n                        />\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"intro-bookingCare \">\r\n                            <div className=\"icon\">\r\n                                <BsLightbulbFill />\r\n                            </div>\r\n                            <h4>\r\n                                BookingCare là Nền tảng Y tế chăm sóc sức khỏe toàn diện hàng đầu Việt Nam kết nối người\r\n                                dùng với trên 150 bệnh viện - phòng khám uy tín, hơn 1,000 bác sĩ chuyên khoa giỏi và\r\n                                hàng nghìn dịch vụ, sản phẩm y tế chất lượng cao.\r\n                            </h4>\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        listDataSpecialtyRedux: state.patient.listDataSpecialty,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListSpecialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BsLightbulbFill } from 'react-icons/bs';\r\n\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { filterAndPagingClinic } from '../../../services/userServices';\r\nimport SearchInput from '../../../components/SearchInput';\r\nimport FooterPaging from '../../../components/FooterPaging';\r\n\r\nimport '../Specialty/ListSpecialty.scss';\r\n\r\nclass ListClinic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listClinic: [],\r\n\r\n            limit: 5,\r\n            keyword: '',\r\n            totalPage: 1,\r\n            count: 0,\r\n            pageIndex: 1,\r\n\r\n            isShowModalConfirm: false,\r\n            currentClinicId: '',\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { pageIndex, limit, keyword } = this.state;\r\n        this.handleFilterAndPaging(pageIndex, limit, keyword);\r\n    }\r\n    componentDidUpdate() {}\r\n\r\n    handleFilterAndPaging = async (pageIndex, limit, keyword) => {\r\n        let response = await filterAndPagingClinic(pageIndex, limit, keyword);\r\n        if (response && response.errorCode === 0) {\r\n            this.setState({\r\n                listClinic: response.data.rows,\r\n                totalPage: response.data.totalPage,\r\n                count: response.data.count,\r\n                pageIndex: pageIndex,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleToggleModel = () => {\r\n        this.setState({ isOpenModel: !this.state.isOpenModel });\r\n    };\r\n\r\n    handleSearch = async (currentKeyword) => {\r\n        let { limit, pageIndex } = this.state;\r\n        try {\r\n            let response = await filterAndPagingClinic(pageIndex, limit, currentKeyword);\r\n            if (response && response.errorCode === 0) {\r\n                this.setState({\r\n                    listClinic: response.data.rows,\r\n                    totalPage: response.data.totalPage,\r\n                    count: response.data.count,\r\n                    pageIndex: pageIndex,\r\n                    keyword: currentKeyword,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    handleChangePage = async (numberPage) => {\r\n        console.log(numberPage);\r\n        let { limit, keyword, pageIndex, totalPage } = this.state;\r\n        if (numberPage === 'next') {\r\n            if (+pageIndex < +totalPage) {\r\n                this.handleFilterAndPaging(pageIndex + 1, limit, keyword);\r\n            }\r\n        } else if (numberPage === 'back') {\r\n            if (+pageIndex > 1) {\r\n                this.handleFilterAndPaging(pageIndex - 1, limit, keyword);\r\n            }\r\n        } else {\r\n            this.handleFilterAndPaging(numberPage, limit, keyword);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { modalClinic } = this.props;\r\n        let { listClinic, count, totalPage, pageIndex } = this.state;\r\n\r\n        return (\r\n            <div className=\"list-specialty-container\">\r\n                <Modal\r\n                    className=\"modal-booking-container\"\r\n                    isOpen={modalClinic}\r\n                    toggle={() => this.props.toggleModel('modalClinic')}\r\n                    size=\"nm\"\r\n                    centered={false}\r\n                >\r\n                    <ModalHeader toggle={() => this.props.toggleModel('modalClinic')}>Danh sách cơ sở y tế</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"list-specialty-content\">\r\n                            <div className=\"search-container-list-patient\">\r\n                                <SearchInput placeholder=\"Tìm kiếm...\" handleSearch={this.handleSearch} delay={800} />\r\n                            </div>\r\n                            {listClinic.length > 0 &&\r\n                                listClinic.map((item) => {\r\n                                    return (\r\n                                        <Link className=\"item\" to={`/detail-clinic/${item.id}`} key={item.id}>\r\n                                            <div className=\"item-specialty\" key={item.id}>\r\n                                                <div className={'image-clinic'}>\r\n                                                    <img className=\"img-clinic\" src={item.imageLogo} alt=\"img\"></img>\r\n                                                </div>\r\n                                                <div className=\"name-specialty\">{item.nameClinic}</div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    );\r\n                                })}\r\n                        </div>\r\n                        <FooterPaging\r\n                            titleTotalRecord=\"Tổng cơ sở\"\r\n                            TotalPage={totalPage}\r\n                            PageIndex={pageIndex}\r\n                            TotalRecord={count}\r\n                            handleChangePage={this.handleChangePage}\r\n                        />\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"intro-bookingCare \">\r\n                            <div className=\"icon\">\r\n                                <BsLightbulbFill />\r\n                            </div>\r\n                            <h4>\r\n                                BookingCare là Nền tảng Y tế chăm sóc sức khỏe toàn diện hàng đầu Việt Nam kết nối người\r\n                                dùng với trên 150 bệnh viện - phòng khám uy tín, hơn 1,000 bác sĩ chuyên khoa giỏi và\r\n                                hàng nghìn dịch vụ, sản phẩm y tế chất lượng cao.\r\n                            </h4>\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        listDataClinicRedux: state.patient.listDataClinic,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListClinic);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport { BsLightbulbFill } from 'react-icons/bs';\r\n\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { searchDoctorServices } from '../../../services';\r\nimport SearchInput from '../../../components/SearchInput';\r\nimport FooterPaging from '../../../components/FooterPaging';\r\nimport '../Specialty/ListSpecialty.scss';\r\n\r\nclass ListDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listDoctor: [],\r\n\r\n            limit: 5,\r\n            keyword: '',\r\n            totalPage: 1,\r\n            count: 0,\r\n            pageIndex: 1,\r\n            roleId: 'R2',\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { pageIndex, limit, keyword, roleId } = this.state;\r\n\r\n        this.handleFilterAndPaging(pageIndex, limit, keyword, roleId);\r\n    }\r\n    componentDidUpdate() {}\r\n\r\n    handleFilterAndPaging = async (pageIndex, limit, keyword, roleId) => {\r\n        let response = await searchDoctorServices(pageIndex, limit, keyword, roleId);\r\n        if (response && response.errorCode === 0) {\r\n            this.setState({\r\n                listDoctor: response.data.rows,\r\n                totalPage: response.data.totalPage,\r\n                count: response.data.count,\r\n                pageIndex: pageIndex,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleToggleModel = () => {\r\n        this.setState({ isOpenModel: !this.state.isOpenModel });\r\n    };\r\n\r\n    handleSearch = async (currentKeyword) => {\r\n        let { limit, pageIndex, roleId } = this.state;\r\n        try {\r\n            let response = await searchDoctorServices(pageIndex, limit, currentKeyword, roleId);\r\n            if (response && response.errorCode === 0) {\r\n                this.setState({\r\n                    listDoctor: response.data.rows,\r\n                    totalPage: response.data.totalPage,\r\n                    count: response.data.count,\r\n                    pageIndex: pageIndex,\r\n                    keyword: currentKeyword,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    handleChangePage = async (numberPage) => {\r\n        console.log(numberPage);\r\n        let { limit, keyword, pageIndex, totalPage } = this.state;\r\n        if (numberPage === 'next') {\r\n            if (+pageIndex < +totalPage) {\r\n                this.handleFilterAndPaging(pageIndex + 1, limit, keyword);\r\n            }\r\n        } else if (numberPage === 'back') {\r\n            if (+pageIndex > 1) {\r\n                this.handleFilterAndPaging(pageIndex - 1, limit, keyword);\r\n            }\r\n        } else {\r\n            this.handleFilterAndPaging(numberPage, limit, keyword);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { modalDoctor, languageRedux, listDataSpecialtyRedux } = this.props;\r\n        let { listDoctor, count, totalPage, pageIndex } = this.state;\r\n        return (\r\n            <div className=\"list-specialty-container\">\r\n                <Modal\r\n                    className=\"modal-booking-container\"\r\n                    isOpen={modalDoctor}\r\n                    toggle={() => this.props.toggleModel('modalDoctor')}\r\n                    size=\"mn\"\r\n                    centered={false}\r\n                >\r\n                    <ModalHeader toggle={() => this.props.toggleModel('modalDoctor')}>Danh sách bác sĩ</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"search-container-list-patient\">\r\n                            <SearchInput placeholder=\"Tìm kiếm...\" handleSearch={this.handleSearch} delay={800} />\r\n                        </div>\r\n                        <div className=\"list-specialty-content\">\r\n                            {listDoctor.length > 0 &&\r\n                                listDoctor.map((item) => {\r\n                                    let nameSpecialty = '';\r\n                                    let nameVi = `${item.positionData.valueVi}, ${item.firstName} ${item.lastName} `;\r\n                                    let nameEn = `${item.positionData.valueEn}, ${item.lastName} ${item.firstName} `;\r\n                                    let idSpecialty = item.Doctor_Infor.specialtyId;\r\n                                    if (idSpecialty) {\r\n                                        nameSpecialty = listDataSpecialtyRedux.filter(\r\n                                            (item) => item.id === idSpecialty,\r\n                                        );\r\n                                        nameSpecialty = nameSpecialty[0].name;\r\n                                    }\r\n                                    return (\r\n                                        <Link className=\"item\" to={`/detail-doctor/${item.id}`} key={item.id}>\r\n                                            <div className=\"item-specialty\" key={item.id}>\r\n                                                <div className={modalDoctor ? 'image-doctor' : 'image-specialty'}>\r\n                                                    <img\r\n                                                        src={\r\n                                                            item?.imageURL ||\r\n                                                            'https://firebasestorage.googleapis.com/v0/b/bookingcare-6a74c.appspot.com/o/files%2Fuser%2Fuser_d%C3%A8ault.png?alt=media&token=22bdda3a-856e-416d-bce5-b9e52a6004c7'\r\n                                                        }\r\n                                                        alt=\"img\"\r\n                                                    ></img>\r\n                                                </div>\r\n                                                <div className=\"name-doctor\">\r\n                                                    <h2>{languageRedux === LANGUAGES.VI ? nameVi : nameEn}</h2>\r\n                                                    <p>{nameSpecialty}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    );\r\n                                })}\r\n                        </div>\r\n                        <FooterPaging\r\n                            titleTotalRecord=\"Tổng số bác sĩ\"\r\n                            TotalPage={totalPage}\r\n                            PageIndex={pageIndex}\r\n                            TotalRecord={count}\r\n                            handleChangePage={this.handleChangePage}\r\n                        />\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"intro-bookingCare \">\r\n                            <div className=\"icon\">\r\n                                <BsLightbulbFill />\r\n                            </div>\r\n                            <h4>\r\n                                BookingCare là Nền tảng Y tế chăm sóc sức khỏe toàn diện hàng đầu Việt Nam kết nối người\r\n                                dùng với trên 150 bệnh viện - phòng khám uy tín, hơn 1,000 bác sĩ chuyên khoa giỏi và\r\n                                hàng nghìn dịch vụ, sản phẩm y tế chất lượng cao.\r\n                            </h4>\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        listDataSpecialtyRedux: state.patient.listDataSpecialty,\r\n        topDoctorsRedux: state.doctor.topDoctors,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BsLightbulbFill } from 'react-icons/bs';\r\n\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../Specialty/ListSpecialty.scss';\r\n\r\nclass ListHandbook extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    async componentDidMount() {}\r\n    componentDidUpdate() {}\r\n\r\n    render() {\r\n        let { modalHandbook, listDataHandbookRedux } = this.props;\r\n        let {} = this.state;\r\n\r\n        return (\r\n            <div className=\"list-specialty-container\">\r\n                <Modal\r\n                    className=\"modal-booking-container\"\r\n                    isOpen={modalHandbook}\r\n                    toggle={() => this.props.toggleModel('modalHandbook')}\r\n                    size=\"lg\"\r\n                    centered={false}\r\n                >\r\n                    <ModalHeader toggle={() => this.props.toggleModel('modalHandbook')}>Danh sách cẩm nang</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"list-specialty-content\">\r\n                            {listDataHandbookRedux.length > 0 &&\r\n                                listDataHandbookRedux.map((item) => {\r\n                                    return (\r\n                                        <Link className=\"item\" to={`/detail-clinic/${item.id}`} key={item.id}>\r\n                                            <div className=\"item-specialty\" key={item.id}>\r\n                                                <div className={'image-specialty'}>\r\n                                                    <img src={item.image} alt=\"img\"></img>\r\n                                                </div>\r\n                                                <div className=\"name-specialty\">{item.title}</div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    );\r\n                                })}\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"intro-bookingCare \">\r\n                            <div className=\"icon\">\r\n                                <BsLightbulbFill />\r\n                            </div>\r\n                            <h4>\r\n                                BookingCare là Nền tảng Y tế chăm sóc sức khỏe toàn diện hàng đầu Việt Nam kết nối người\r\n                                dùng với trên 150 bệnh viện - phòng khám uy tín, hơn 1,000 bác sĩ chuyên khoa giỏi và\r\n                                hàng nghìn dịch vụ, sản phẩm y tế chất lượng cao.\r\n                            </h4>\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        listDataHandbookRedux: state.patient.listDataHandbook,\r\n        topDoctorsRedux: state.doctor.topDoctors,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListHandbook);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport BoxBackground from './Sections/BoxBackground';\r\nimport Section from './Sections/Section';\r\nimport News from './Sections/News';\r\nimport About from './Sections/About';\r\nimport TopDoctor from './Sections/TopDoctor';\r\nimport * as actions from '../../store/actions';\r\n\r\nimport ListSpecialty from '../Patient/Specialty/ListSpecialty';\r\nimport ListClinic from '../Patient/Clinic/ListClinic';\r\nimport ListDoctor from '../Patient/Doctor/ListDoctor';\r\nimport ListHandbook from '../Patient/Handbook/ListHandbook';\r\n\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalSpecialty: false,\r\n            modalClinic: false,\r\n            modalDoctor: false,\r\n            modalHandbook: false,\r\n            modalHealth: false,\r\n        };\r\n    }\r\n    async componentDidMount() {}\r\n    componentDidUpdate() {}\r\n    toggleModel = (modal) => {\r\n        this.setState({\r\n            [modal]: !this.state[modal],\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { listDataClinicRedux, listDataSpecialtyRedux, listDataHandbookRedux } = this.props;\r\n        let { modalSpecialty, modalClinic, modalDoctor, modalHandbook } = this.state;\r\n\r\n        return (\r\n            <div className=\"home-container\">\r\n                {modalSpecialty && <ListSpecialty modalSpecialty={modalSpecialty} toggleModel={this.toggleModel} />}\r\n                {modalClinic && <ListClinic modalClinic={modalClinic} toggleModel={this.toggleModel} />}\r\n                {modalDoctor && <ListDoctor modalDoctor={modalDoctor} toggleModel={this.toggleModel} />}\r\n                {modalHandbook && <ListHandbook modalHandbook={modalHandbook} toggleModel={this.toggleModel} />}\r\n                <BoxBackground />\r\n                <News />\r\n                <Section\r\n                    type=\"sec\"\r\n                    listSpecialty={listDataSpecialtyRedux}\r\n                    typeSec={'specialtyType'}\r\n                    background=\"background\"\r\n                    title={<FormattedMessage id=\"homepage.specialty\" />}\r\n                    button={<FormattedMessage id=\"homepage.more\" />}\r\n                    modal=\"modalSpecialty\"\r\n                    toggleModel={this.toggleModel}\r\n                    slideShow={4}\r\n                />\r\n                <Section\r\n                    type=\"sec\"\r\n                    typeSec=\"clinics\"\r\n                    listClinic={listDataClinicRedux}\r\n                    title={<FormattedMessage id=\"homepage.clinic\" />}\r\n                    button={<FormattedMessage id=\"homepage.search\" />}\r\n                    modal=\"modalClinic\"\r\n                    toggleModel={this.toggleModel}\r\n                    slideShow={4}\r\n                />\r\n                <TopDoctor type=\"doctor\" slideShow={4} modal=\"modalDoctor\" toggleModel={this.toggleModel} />\r\n                <Section\r\n                    background=\"background\"\r\n                    type=\"handbook\"\r\n                    typeSec=\"handbook\"\r\n                    listHandbook={listDataHandbookRedux}\r\n                    title={<FormattedMessage id=\"homepage.handbook\" />}\r\n                    button={<FormattedMessage id=\"homepage.all-handbook\" />}\r\n                    modal=\"modalHandbook\"\r\n                    toggleModel={this.toggleModel}\r\n                    slideShow={2}\r\n                />\r\n                <About title={<FormattedMessage id=\"homepage.about\" />} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        listDataSpecialtyRedux: state.patient.listDataSpecialty,\r\n        listDataClinicRedux: state.patient.listDataClinic,\r\n        listDataHandbookRedux: state.patient.listDataHandbook,\r\n        topDoctorsRedux: state.doctor.topDoctors,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllSpecialtyRedux: () => dispatch(actions.getAllSpecialty()),\r\n        getHandbookRedux: () => dispatch(actions.getHandbookRedux()),\r\n        getAllClinicRedux: (isGetImage) => dispatch(actions.getAllClinicRedux(isGetImage)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport './ExtraInforDoctor.scss';\r\n\r\nclass ExtraInforDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrDay: [],\r\n            price: '',\r\n            addressClinic: '',\r\n            typePayment: '',\r\n            note: '',\r\n            province: '',\r\n            nameClinic: '',\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { dataCurrentDoctor } = this.props;\r\n        let doctorInfor = dataCurrentDoctor.Doctor_Infor;\r\n\r\n        this.setState({\r\n            price: doctorInfor.priceData,\r\n            addressClinic: doctorInfor.addressClinic,\r\n            typePayment: doctorInfor.paymentData,\r\n            province: doctorInfor.provinceData,\r\n            note: doctorInfor.note,\r\n            nameClinic: doctorInfor.clinicData?.nameClinic,\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.dataCurrentDoctor !== this.props.dataCurrentDoctor) {\r\n            this.setState({\r\n                detailDoctor: this.props.dataCurrentDoctor,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { languageRedux, isShowPrice } = this.props;\r\n        let { price, addressClinic, typePayment, province, nameClinic } = this.state;\r\n\r\n        if (languageRedux === LANGUAGES.VI) {\r\n            price = price?.valueVi;\r\n            province = province?.valueVi;\r\n            if (typePayment?.keyMap === 'PAY3') {\r\n                typePayment = 'tiền mặt và quẹt thẻ';\r\n            } else {\r\n                typePayment = typePayment?.valueVi;\r\n            }\r\n        } else {\r\n            price = price?.valueEn;\r\n            province = province?.valueEn;\r\n            if (typePayment?.keyMap === 'PAY3') {\r\n                typePayment = 'cash and by swiping a card';\r\n            } else {\r\n                typePayment = typePayment?.valueEn;\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"container-infor\">\r\n                <div className=\"address-clinic\">\r\n                    <h2>\r\n                        <FormattedMessage id=\"patient.schedule.addressClinic\" />\r\n                    </h2>\r\n                    <h4>{nameClinic}</h4>\r\n                    <p>{`${addressClinic} _ (${province})`}</p>\r\n                </div>\r\n                <div className=\"price-container\">\r\n                    <h2>\r\n                        <FormattedMessage id=\"patient.schedule.price\" />:{' '}\r\n                        {!isShowPrice && (\r\n                            <span className=\"price\">\r\n                                {price}\r\n                                {languageRedux === LANGUAGES.VI ? 'VND' : '$'}\r\n                            </span>\r\n                        )}\r\n                    </h2>\r\n\r\n                    {isShowPrice && (\r\n                        <table className=\"table-price\">\r\n                            <thead></thead>\r\n                            <tbody>\r\n                                <tr className=\"row-price\">\r\n                                    <td>\r\n                                        <h2>\r\n                                            <FormattedMessage id=\"patient.schedule.price\" />:\r\n                                        </h2>\r\n                                        <p>\r\n                                            <FormattedMessage id=\"patient.schedule.priceText\" />\r\n                                        </p>\r\n                                    </td>\r\n                                    <span className=\"price-label\">\r\n                                        {price}\r\n                                        {languageRedux === LANGUAGES.VI ? <sup>đ</sup> : <sup>$</sup>}\r\n                                    </span>\r\n                                </tr>\r\n                            </tbody>\r\n                            <tfoot className=\"row-price row2\">\r\n                                <tr>\r\n                                    <td>\r\n                                        <FormattedMessage id=\"patient.schedule.typePaymentText\" /> {typePayment}\r\n                                    </td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExtraInforDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport './DoctorSchedule.scss';\r\nimport moment from 'moment';\r\nimport { FaCalendarAlt, FaRegHandPointUp } from 'react-icons/fa';\r\nimport ExtraInforDoctor from './ExtraInforDoctor';\r\nimport { getScheduleDoctorByDateService } from '../../../services/doctorServices';\r\n\r\nclass DoctorSchedule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrDay: [],\r\n            isShowPrice: false,\r\n            listSchedule: [],\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { languageRedux } = this.props;\r\n        this.setOptionsDay(languageRedux);\r\n        let response = await getScheduleDoctorByDateService(this.props.doctorId, new Date().setHours(0, 0, 0, 0));\r\n        this.setState({ listSchedule: response.data });\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.languageRedux !== this.props.languageRedux) {\r\n            this.setOptionsDay(this.props.languageRedux);\r\n        }\r\n    }\r\n    capitalizeFirstLetter = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    };\r\n\r\n    setOptionsDay = (language) => {\r\n        let allDay = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            let object = {};\r\n            if (i === 0) {\r\n                let firstText = language === 'en' ? 'ToDay ' : 'Hôm nay ';\r\n                object.label =\r\n                    firstText +\r\n                    this.capitalizeFirstLetter(moment(new Date()).add(i, 'days').locale(language).format('DD/MM'));\r\n            } else {\r\n                object.label = this.capitalizeFirstLetter(\r\n                    moment(new Date()).add(i, 'days').locale(language).format('dddd - DD/MM'),\r\n                );\r\n            }\r\n            object.timestamp = moment(new Date().setHours(0, 0, 0, 0)).add(i, 'days').valueOf();\r\n            object.value = moment(new Date()).add(i, 'days').format('DD/MM/YYYY');\r\n            allDay.push(object);\r\n        }\r\n        this.setState({\r\n            arrDay: allDay,\r\n        });\r\n    };\r\n\r\n    handleChangeSelect = async (e) => {\r\n        let response = await getScheduleDoctorByDateService(this.props.doctorId, e.target.value);\r\n        this.setState({\r\n            listSchedule: response.data,\r\n        });\r\n    };\r\n    handleShowPrice = () => {\r\n        this.setState({ isShowPrice: !this.state.isShowPrice });\r\n    };\r\n\r\n    render() {\r\n        let { languageRedux, doctorId, typeStyle, dataCurrentDoctor } = this.props;\r\n        let { arrDay, isShowPrice, listSchedule } = this.state;\r\n        return (\r\n            <div className={typeStyle === 'specialty' ? `schedule-container pd50` : `schedule-container `}>\r\n                <div className=\"schedule-date\">\r\n                    <select className=\"select-box\" onChange={(e) => this.handleChangeSelect(e)}>\r\n                        {arrDay.map((day, index) => {\r\n                            return (\r\n                                <option key={index} value={day.timestamp}>\r\n                                    {day.label}\r\n                                </option>\r\n                            );\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"schedule-title\">\r\n                    <FaCalendarAlt className=\"icon-schedule\" />\r\n                    <p>\r\n                        <FormattedMessage id=\"patient.schedule.schedule-title\" />\r\n                    </p>\r\n                </div>\r\n                <div className={typeStyle === 'specialty' ? `schedule colum-specialty` : `schedule`}>\r\n                    <div className={typeStyle === 'specialty' ? `schedule-left` : `schedule-left border-specialty`}>\r\n                        <div className=\"schedule-list\">\r\n                            {listSchedule && listSchedule.length > 0 ? (\r\n                                listSchedule.map((rangeTime, index) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={index}\r\n                                            className=\"item-day\"\r\n                                            onClick={() => this.props.handleShowModal(rangeTime)}\r\n                                        >\r\n                                            {languageRedux === LANGUAGES.VI\r\n                                                ? rangeTime.timeTypeData.valueVi\r\n                                                : rangeTime.timeTypeData.valueEn}\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                <p>\r\n                                    <FormattedMessage id=\"patient.schedule.text-no-schedule\" />\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                        {listSchedule && listSchedule.length > 0 ? (\r\n                            <div className=\"text\">\r\n                                <span>\r\n                                    <FormattedMessage id=\"patient.schedule.text1\" />{' '}\r\n                                </span>\r\n                                <FaRegHandPointUp />{' '}\r\n                                <span>\r\n                                    <FormattedMessage id=\"patient.schedule.text2\" />\r\n                                </span>\r\n                            </div>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </div>\r\n                    <div className={typeStyle === 'specialty' ? `schedule-info` : `schedule-info pd50`}>\r\n                        {dataCurrentDoctor && (\r\n                            <ExtraInforDoctor\r\n                                isShowPrice={isShowPrice}\r\n                                doctorId={doctorId}\r\n                                dataCurrentDoctor={dataCurrentDoctor}\r\n                            />\r\n                        )}\r\n                        <h3 className=\"btn-show-price\" onClick={() => this.handleShowPrice()}>\r\n                            {isShowPrice ? 'Ẩn bảng giá' : 'Xem chi tiết'}\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport moment from 'moment';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport './BookingModal.scss';\r\nimport Loading from '../../../components/Loading';\r\nimport { getAllCodeServices } from '../../../services/userServices';\r\nimport { toast } from 'react-toastify';\r\nimport { postBookingAppointmentServices } from '../../../services/patientServices';\r\n\r\nclass BookingModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookFor: 'others',\r\n            nameScheduler: '',\r\n            phoneNumberScheduler: '',\r\n            namePatient: '',\r\n            IDNumber: '',\r\n            genderPatient: '',\r\n            phoneNumberPatient: '',\r\n            birthPatient: '',\r\n            addressPatient: '',\r\n            reason: '',\r\n            rangeTime: '',\r\n            doctorId: '',\r\n            email: '',\r\n            isLoading: false,\r\n\r\n            listGender: [],\r\n            nameDoctor: '',\r\n            provinceDoctor: '',\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { languageRedux, dataCurrentDoctor } = this.props;\r\n        let rangeTime = this.props.rangeTimeData;\r\n        let genderRes = await getAllCodeServices('gender');\r\n        let timeSchedule =\r\n            languageRedux === LANGUAGES.VI ? rangeTime.timeTypeData?.valueVi : rangeTime.timeTypeData?.valueEn;\r\n        let date = '';\r\n        if (rangeTime.date) {\r\n            date = moment\r\n                .unix(rangeTime.date / 1000)\r\n                .local(languageRedux)\r\n                .format('dddd - DD/MM/YYYY');\r\n            date = this.capitalizeFirstLetter(date);\r\n        }\r\n        this.buildNameAndProvinceByLanguage(dataCurrentDoctor, languageRedux);\r\n        let exactTime = `${timeSchedule} - ${date}`;\r\n        this.setState({\r\n            rangeTime: this.props.rangeTimeData,\r\n            doctorId: this.props.doctorId,\r\n            exactTime: exactTime,\r\n            listGender: genderRes.data,\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        let { languageRedux } = this.props;\r\n        let { rangeTime } = this.state;\r\n\r\n        if (prevProps.languageRedux !== this.props.languageRedux) {\r\n            let timeSchedule =\r\n                languageRedux === LANGUAGES.VI ? rangeTime.timeTypeData?.valueVi : rangeTime.timeTypeData?.valueEn;\r\n            let date = '';\r\n            if (rangeTime.date) {\r\n                date = moment\r\n                    .unix(rangeTime.date / 1000)\r\n                    .local(languageRedux)\r\n                    .format('dddd - DD/MM/YYYY');\r\n                date = this.capitalizeFirstLetter(date);\r\n            }\r\n            let exactTime = `${timeSchedule} - ${date}`;\r\n            this.setState({\r\n                exactTime: exactTime,\r\n            });\r\n        }\r\n    }\r\n    toggle = () => {\r\n        this.props.toggleModel();\r\n    };\r\n\r\n    handleOnchangeInputRadio = (e) => {\r\n        this.setState({\r\n            bookFor: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleChangeInput = (e, key) => {\r\n        this.setState({\r\n            [key]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmitBooking = async (data) => {\r\n        this.setState({\r\n            isLoading: true,\r\n        });\r\n        let result = {\r\n            bookFor: data.bookFor,\r\n            email: data.email,\r\n            nameScheduler: data.nameScheduler,\r\n            phoneNumberScheduler: data.phoneNumberScheduler,\r\n            namePatient: data.namePatient.trim(),\r\n            IDNumber: data.IDNumber,\r\n            gender: data.genderPatient,\r\n            phoneNumber: data.phoneNumberPatient,\r\n            YearOfBirth: data.birthPatient,\r\n            address: data.addressPatient,\r\n            reason: data.reason,\r\n            timeType: data.rangeTime.timeType,\r\n            date: data.rangeTime.date,\r\n            doctorId: data.doctorId,\r\n            exactTime: data.exactTime,\r\n\r\n            nameDoctor: this.props.nameDoctor,\r\n            language: this.props.languageRedux,\r\n        };\r\n        let res = await postBookingAppointmentServices(result);\r\n        if (res && res.errorCode === 0) {\r\n            toast.success(res.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            this.toggle();\r\n        } else {\r\n            toast.error(res?.message || 'Vui lòng điền đủ thông tin.', {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n        this.setState({\r\n            isLoading: false,\r\n        });\r\n    };\r\n    capitalizeFirstLetter = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    };\r\n    buildNameAndProvinceByLanguage = (dataCurrentDoctor, languageRedux) => {\r\n        let nameDoctor = '';\r\n        let provinceDoctor = '';\r\n        if (dataCurrentDoctor && dataCurrentDoctor.positionData) {\r\n            nameDoctor =\r\n                languageRedux === LANGUAGES.VI\r\n                    ? `${dataCurrentDoctor.positionData.valueVi}, ${dataCurrentDoctor.firstName} ${dataCurrentDoctor.lastName}`\r\n                    : `${dataCurrentDoctor.positionData.valueEn}, ${dataCurrentDoctor.lastName} ${dataCurrentDoctor.firstName}`;\r\n        }\r\n        if (dataCurrentDoctor && dataCurrentDoctor.Doctor_Infor && dataCurrentDoctor.Doctor_Infor.provinceData) {\r\n            provinceDoctor =\r\n                languageRedux === LANGUAGES.VI\r\n                    ? dataCurrentDoctor.Doctor_Infor.provinceData.valueVi\r\n                    : dataCurrentDoctor.Doctor_Infor.provinceData.valueEn;\r\n        }\r\n        this.setState({\r\n            nameDoctor: nameDoctor,\r\n            provinceDoctor: provinceDoctor,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { isShowModalBooking, languageRedux } = this.props;\r\n        let { bookFor, exactTime, isLoading, listGender, nameDoctor } = this.state;\r\n        // let selected = bookFor === 'others' ? 'checked' : '';\r\n        return (\r\n            <div className=\"booking-modal-container\">\r\n                {isLoading && (\r\n                    <div className=\"loading-container\">\r\n                        <div className=\"icon-loading\">\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <Modal\r\n                    className=\"modal-booking-container\"\r\n                    isOpen={isShowModalBooking}\r\n                    toggle={() => this.toggle()}\r\n                    size=\"lg\"\r\n                    centered={true}\r\n                >\r\n                    <ModalHeader toggle={() => this.toggle()}>ĐẶT LỊCH KHÁM</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"infor-doctor\">\r\n                            <div className=\"infor\">\r\n                                {nameDoctor && <h2>{nameDoctor}</h2>}\r\n                                <h4>\r\n                                    Thời gian khám: <b>{exactTime}</b>\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"scheduler\">\r\n                            <label>\r\n                                <input\r\n                                    className=\"input1\"\r\n                                    type=\"radio\"\r\n                                    name=\"book_for\"\r\n                                    value=\"self\"\r\n                                    onChange={(e) => this.handleOnchangeInputRadio(e)}\r\n                                />{' '}\r\n                                Đặt cho mình\r\n                            </label>\r\n                            <label>\r\n                                <input\r\n                                    className=\"input2\"\r\n                                    type=\"radio\"\r\n                                    name=\"book_for\"\r\n                                    value=\"others\"\r\n                                    onChange={(e) => this.handleOnchangeInputRadio(e)}\r\n                                />{' '}\r\n                                Đặt cho người thân\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-user-container\">\r\n                            {bookFor === 'others' && <label className=\"label-primary\">Thông tin người đặt lịch</label>}\r\n                            {bookFor === 'others' && (\r\n                                <div className=\"form-row \">\r\n                                    <div className=\"form-group col-6\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Họ tên người đặt lịch\"\r\n                                            onChange={(e) => this.handleChangeInput(e, 'nameScheduler')}\r\n                                            value={this.state.nameScheduler}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group col-6\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Số điện thoại người đặt lịch\"\r\n                                            onChange={(e) => this.handleChangeInput(e, 'phoneNumberScheduler')}\r\n                                            value={this.state.phoneNumberScheduler}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            {bookFor === 'others' && (\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Email(bắt buộc)\"\r\n                                        onChange={(e) => this.handleChangeInput(e, 'email')}\r\n                                        value={this.state.email}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                            <label className=\"label-primary\">Thông tin bệnh nhân</label>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Họ tên bệnh nhân(bắt buộc)\"\r\n                                    onChange={(e) => this.handleChangeInput(e, 'namePatient')}\r\n                                    value={this.state.namePatient}\r\n                                />\r\n                                <small>\r\n                                    Hãy ghi rõ Họ Và Tên, viết hoa những chữ cái đầu tiên, ví dụ: Trần Văn Phú\r\n                                </small>\r\n                            </div>\r\n                            {bookFor === 'self' && (\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Email(bắt buộc)\"\r\n                                        onChange={(e) => this.handleChangeInput(e, 'email')}\r\n                                        value={this.state.email}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                            <div className=\"form-group\">\r\n                                {listGender.map((item) => {\r\n                                    return (\r\n                                        <div className=\"form-check form-check-inline\" key={item.id}>\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"inlineRadioOptions\"\r\n                                                value={item.keyMap}\r\n                                                onChange={(e) => this.handleChangeInput(e, 'genderPatient')}\r\n                                            />\r\n                                            <label className=\"form-check-label\">\r\n                                                {languageRedux === LANGUAGES.VI ? item.valueVi : item.valueEn}\r\n                                            </label>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div className=\"form-row \">\r\n                                <div className=\"form-group col-6\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Số điện thoại bệnh nhân\"\r\n                                        onChange={(e) => this.handleChangeInput(e, 'phoneNumberPatient')}\r\n                                        value={this.state.phoneNumberPatient}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Năm sinh(bắt buộc) VD: 27/01/2001\"\r\n                                        onChange={(e) => this.handleChangeInput(e, 'birthPatient')}\r\n                                        value={this.state.birthPatient}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group \">\r\n                                <div className=\"\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Số căn cước\"\r\n                                        onChange={(e) => this.handleChangeInput(e, 'IDNumber')}\r\n                                        value={this.state.IDNumber}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group \">\r\n                                <div className=\"\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Địa chỉ\"\r\n                                        onChange={(e) => this.handleChangeInput(e, 'addressPatient')}\r\n                                        value={this.state.addressPatient}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <textarea\r\n                                className=\"info-doctor form-control\"\r\n                                rows=\"4\"\r\n                                onChange={(e) => this.handleChangeInput(e, 'reason')}\r\n                                value={this.state.reason}\r\n                                placeholder=\"Lý do khám\"\r\n                            ></textarea>\r\n                        </div>\r\n                        <div className=\"content-payment\">\r\n                            <div>\r\n                                <div>Giá khám</div>\r\n                                <div>300000VND</div>\r\n                            </div>\r\n                            <div className=\"border-bottom\">\r\n                                <div>Phí đặt lịch</div>\r\n                                <div>Miễn phí</div>\r\n                            </div>\r\n                            <div>\r\n                                <div>Tổng cộng</div>\r\n                                <div>300000VND</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-note\">\r\n                            <p>Quý khách vui lòng điền đầy đủ thông tin để tiết kiệm thời gian làm thủ tục khám</p>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button\r\n                            className=\" button btn-save\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.handleSubmitBooking(this.state)}\r\n                        >\r\n                            Xác nhận đặt khám\r\n                        </Button>{' '}\r\n                        <Button className=\"button btn btn-cancel\" color=\"secondary\" onClick={() => this.toggle()}>\r\n                            Cancel\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES } from '../../../utils';\r\n\r\nclass IntroDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    async componentDidMount() {\r\n        this.initFacebookSDK();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.languageRedux !== this.props.languageRedux) {\r\n        }\r\n    }\r\n    initFacebookSDK() {\r\n        if (window.FB) {\r\n            window.FB.XFBML.parse();\r\n        }\r\n\r\n        let { languageRedux } = this.props;\r\n        let locale = languageRedux === LANGUAGES.VI ? 'vi_VN' : 'en_US';\r\n        window.fbAsyncInit = function () {\r\n            window.FB.init({\r\n                appId: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n                cookie: true, // enable cookies to allow the server to access\r\n                // the session\r\n                xfbml: true, // parse social plugins on this page\r\n                version: 'v2.5', // use version 2.1\r\n            });\r\n        };\r\n        // Load the SDK asynchronously\r\n        (function (d, s, id) {\r\n            var js,\r\n                fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s);\r\n            js.id = id;\r\n            js.src = `//connect.facebook.net/${locale}/sdk.js`;\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        })(document, 'script', 'facebook-jssdk');\r\n    }\r\n\r\n    render() {\r\n        let { dataHref } = this.props;\r\n\r\n        return (\r\n            <div className=\"box-like-share\">\r\n                <div\r\n                    className=\"fb-like\"\r\n                    data-href={dataHref}\r\n                    data-width=\"\"\r\n                    data-layout=\"button_count\"\r\n                    data-action=\"like\"\r\n                    data-size=\"small\"\r\n                    data-share=\"true\"\r\n                ></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        detailDoctorRedux: state.doctor.detailDoctor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IntroDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport './IntroDoctor.scss';\r\nimport { MdAddLocation } from 'react-icons/md';\r\nimport LikeAndShare from '../SocialPlugin/LikeAndShare';\r\n\r\nclass IntroDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            detailDoctor: {},\r\n            nameDoctor: '',\r\n            provinceDoctor: '',\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { dataCurrentDoctor, languageRedux } = this.props;\r\n\r\n        this.buildNameAndProvinceByLanguage(dataCurrentDoctor, languageRedux);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        let { dataCurrentDoctor, languageRedux } = this.props;\r\n        if (prevProps.languageRedux !== this.props.languageRedux) {\r\n            this.buildNameAndProvinceByLanguage(dataCurrentDoctor, languageRedux);\r\n        }\r\n    }\r\n    buildNameAndProvinceByLanguage = (dataCurrentDoctor, languageRedux) => {\r\n        let nameDoctor = '';\r\n        let provinceDoctor = '';\r\n        if (dataCurrentDoctor && dataCurrentDoctor.positionData) {\r\n            nameDoctor =\r\n                languageRedux === LANGUAGES.VI\r\n                    ? `${dataCurrentDoctor.positionData.valueVi}, ${dataCurrentDoctor.firstName} ${dataCurrentDoctor.lastName}`\r\n                    : `${dataCurrentDoctor.positionData.valueEn}, ${dataCurrentDoctor.lastName} ${dataCurrentDoctor.firstName}`;\r\n        }\r\n        if (dataCurrentDoctor && dataCurrentDoctor.Doctor_Infor && dataCurrentDoctor.Doctor_Infor.provinceData) {\r\n            provinceDoctor =\r\n                languageRedux === LANGUAGES.VI\r\n                    ? dataCurrentDoctor.Doctor_Infor.provinceData.valueVi\r\n                    : dataCurrentDoctor.Doctor_Infor.provinceData.valueEn;\r\n        }\r\n        this.setState({\r\n            nameDoctor: nameDoctor,\r\n            provinceDoctor: provinceDoctor,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { dataCurrentDoctor, typeStyle, dataHref } = this.props;\r\n        let { nameDoctor, provinceDoctor } = this.state;\r\n\r\n        return (\r\n            <div className=\"intro-doctor\">\r\n                <div className=\"image-doctor\">\r\n                    <img\r\n                        className={typeStyle === 'specialty' ? 'size-specialty' : ''}\r\n                        src={\r\n                            dataCurrentDoctor?.imageURL ||\r\n                            'https://firebasestorage.googleapis.com/v0/b/bookingcare-6a74c.appspot.com/o/files%2Fuser%2Fuser_d%C3%A8ault.png?alt=media&token=22bdda3a-856e-416d-bce5-b9e52a6004c7'\r\n                        }\r\n                        alt=\"img\"\r\n                    />\r\n                    {typeStyle === 'specialty' && <span className=\"more-detail-doctor\">Xem thêm</span>}\r\n                </div>\r\n                <div className=\"about-doctor\">\r\n                    <h2\r\n                        className={typeStyle === 'specialty' ? 'info font-specialty' : ''}\r\n                        src={dataCurrentDoctor.image}\r\n                    >\r\n                        {nameDoctor}\r\n                    </h2>\r\n                    <p className=\"about\">\r\n                        {dataCurrentDoctor &&\r\n                            dataCurrentDoctor.Markdown &&\r\n                            dataCurrentDoctor.Markdown.description &&\r\n                            `${dataCurrentDoctor.Markdown.description}`}\r\n                    </p>\r\n                    <LikeAndShare dataHref={dataHref} />\r\n                    {typeStyle === 'specialty' && (\r\n                        <span className=\"address-doctor\">\r\n                            <MdAddLocation />\r\n                            {provinceDoctor && <p>{provinceDoctor}</p>}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        detailDoctorRedux: state.doctor.detailDoctor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IntroDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES } from '../../../utils';\r\n\r\nclass Comment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    async componentDidMount() {\r\n        let {} = this.props;\r\n        this.initFacebookSDK();\r\n    }\r\n    componentDidUpdate() {}\r\n    initFacebookSDK() {\r\n        if (window.FB) {\r\n            window.FB.XFBML.parse();\r\n        }\r\n\r\n        let { languageRedux } = this.props;\r\n        let locale = languageRedux === LANGUAGES.VI ? 'vi_VN' : 'en_US';\r\n        window.fbAsyncInit = function () {\r\n            window.FB.init({\r\n                appId: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n                cookie: true, // enable cookies to allow the server to access\r\n                // the session\r\n                xfbml: true, // parse social plugins on this page\r\n                version: 'v2.5', // use version 2.1\r\n            });\r\n        };\r\n        // Load the SDK asynchronously\r\n        (function (d, s, id) {\r\n            var js,\r\n                fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s);\r\n            js.id = id;\r\n            js.src = `//connect.facebook.net/${locale}/sdk.js`;\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        })(document, 'script', 'facebook-jssdk');\r\n    }\r\n\r\n    render() {\r\n        let { width, dataHref, numPort } = this.props;\r\n        let {} = this.state;\r\n\r\n        return (\r\n            <div className=\"box-comment coverArea\">\r\n                <div\r\n                    className=\"fb-comments\"\r\n                    data-href={dataHref}\r\n                    data-width={width ? width : ''}\r\n                    data-numposts={numPort ? numPort : 5}\r\n                ></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        detailDoctorRedux: state.doctor.detailDoctor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport './DetailDoctor.scss';\r\nimport DoctorSchedule from './DoctorSchedule';\r\nimport BookingModal from './BookingModal';\r\nimport IntroDoctor from './IntroDoctor';\r\nimport { Link } from 'react-router-dom';\r\nimport Comment from '../SocialPlugin/Comment';\r\n\r\nimport { getDetailDoctorService } from '../../../services/doctorServices';\r\n\r\nclass DetailDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataCurrentDoctor: '',\r\n            isShowModalBooking: false,\r\n            currentRangeTime: '',\r\n\r\n            doctorId: '',\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let doctorId = this.props.doctorId ? this.props.doctorId : this.props.match.params.id;\r\n\r\n        let detailDoctor = await getDetailDoctorService(doctorId);\r\n        if (detailDoctor) {\r\n            this.setState({\r\n                dataCurrentDoctor: detailDoctor.data,\r\n                doctorId: doctorId,\r\n            });\r\n        }\r\n    }\r\n    async componentDidUpdate(prevProps) {\r\n        if (\r\n            prevProps.doctorsRedux !== this.props.doctorsRedux ||\r\n            prevProps.selectedProvinceIdRedux !== this.props.selectedProvinceIdRedux\r\n        ) {\r\n        }\r\n    }\r\n    toggleModel = () => {\r\n        this.setState({\r\n            isShowModalBooking: !this.state.isShowModalBooking,\r\n        });\r\n    };\r\n    handleShowModal = (rangeTime) => {\r\n        this.toggleModel();\r\n        this.setState({\r\n            currentRangeTime: rangeTime,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { languageRedux, typeStyle } = this.props;\r\n        let { dataCurrentDoctor, isShowModalBooking, currentRangeTime, doctorId } = this.state;\r\n\r\n        let nameDoctor = '';\r\n        if (dataCurrentDoctor && dataCurrentDoctor.positionData) {\r\n            nameDoctor =\r\n                languageRedux === LANGUAGES.VI\r\n                    ? `${dataCurrentDoctor.positionData.valueVi}, ${dataCurrentDoctor.firstName} ${dataCurrentDoctor.lastName}`\r\n                    : `${dataCurrentDoctor.positionData.valueEn}, ${dataCurrentDoctor.lastName} ${dataCurrentDoctor.firstName}`;\r\n        }\r\n\r\n        const currentURL = process.env.REACT_APP_IS_LOCALHOST == 1 ? window.location.href : 'https://bookingcare.vn';\r\n        return (\r\n            <div className=\"doctor-container\">\r\n                {isShowModalBooking && (\r\n                    <BookingModal\r\n                        toggleModel={this.toggleModel}\r\n                        isShowModalBooking={isShowModalBooking}\r\n                        rangeTimeData={currentRangeTime}\r\n                        doctorId={doctorId}\r\n                        nameDoctor={nameDoctor}\r\n                        dataCurrentDoctor={dataCurrentDoctor}\r\n                    />\r\n                )}\r\n                <div\r\n                    className={\r\n                        typeStyle === 'specialty' ? ' detail-doctor-container mr0 specialty' : 'detail-doctor-container'\r\n                    }\r\n                >\r\n                    <div className={typeStyle === 'specialty' ? 'left' : ''}>\r\n                        {typeStyle === 'specialty' ? (\r\n                            <Link style={{ textDecoration: 'none' }} to={`/detail-doctor/${doctorId}`}>\r\n                                {dataCurrentDoctor && (\r\n                                    <IntroDoctor typeStyle={typeStyle} dataCurrentDoctor={dataCurrentDoctor} />\r\n                                )}\r\n                            </Link>\r\n                        ) : (\r\n                            <div className=\"intro-doctor-container\">\r\n                                {dataCurrentDoctor && (\r\n                                    <IntroDoctor\r\n                                        dataHref={currentURL}\r\n                                        typeStyle={typeStyle}\r\n                                        dataCurrentDoctor={dataCurrentDoctor}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div\r\n                        className={\r\n                            typeStyle === 'specialty'\r\n                                ? 'schedule-doctor-container right'\r\n                                : 'schedule-doctor-container coverArea'\r\n                        }\r\n                    >\r\n                        {dataCurrentDoctor && (\r\n                            <DoctorSchedule\r\n                                typeStyle={typeStyle}\r\n                                doctorId={doctorId}\r\n                                handleShowModal={this.handleShowModal}\r\n                                dataCurrentDoctor={dataCurrentDoctor}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    {typeStyle === 'specialty' ? (\r\n                        ''\r\n                    ) : (\r\n                        <div className=\"detail-about-doctor\">\r\n                            {dataCurrentDoctor &&\r\n                                dataCurrentDoctor.Markdown &&\r\n                                dataCurrentDoctor.Markdown.contentHTML && (\r\n                                    <>\r\n                                        <div\r\n                                            className=\"detail-container\"\r\n                                            dangerouslySetInnerHTML={{ __html: dataCurrentDoctor.Markdown.contentHTML }}\r\n                                        ></div>\r\n                                        <div className=\"comment-doctor\"></div>\r\n                                    </>\r\n                                )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {!typeStyle && <Comment dataHref={currentURL} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './FooterContent.scss';\r\nimport { IoCaretDown, IoCaretUp } from 'react-icons/io5';\r\n\r\nclass FooterContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShow: false,\r\n        };\r\n    }\r\n\r\n    handelClickMore = () => {\r\n        this.setState({\r\n            isShow: !this.state.isShow,\r\n        });\r\n    };\r\n    render() {\r\n        let { isShow } = this.state;\r\n\r\n        return (\r\n            <div className=\"footer-content-container \">\r\n                <div className=\"btn-more-content\" onClick={this.handelClickMore}>\r\n                    <p>Vai trò của BookingCare</p>\r\n                    <span className=\"icon-more\">{isShow ? <IoCaretUp /> : <IoCaretDown />}</span>\r\n                </div>\r\n\r\n                {isShow && (\r\n                    <div className=\"content-footer\">\r\n                        <p>\r\n                            <strong>Giúp bệnh nhân chọn đúng bác sĩ giỏi và đặt lịch nhanh chóng.</strong>\r\n                        </p>\r\n                        <ul>\r\n                            <li>Hệ thống bác sĩ chuyên khoa giỏi, uy tín</li>\r\n                            <li>Thông tin về bác sĩ đã được xác thực rõ ràng, chính xác</li>\r\n                            <li>Sắp xếp khám đúng bác sĩ mà bệnh nhân đã chọn đặt lịch</li>\r\n                            <li>Bảo vệ quyền lợi của bệnh nhân khi đi khám</li>\r\n                            <li>Miễn phí đặt lịch.</li>\r\n                        </ul>\r\n                        <p>\r\n                            <strong>Hỗ trợ trước, trong và sau khi đi khám.</strong>\r\n                        </p>\r\n                        <p>Trước khám</p>\r\n                        <ul>\r\n                            <li>Nhắc lịch khám, dặn dò chuẩn bị trước khám</li>\r\n                            <li>Hướng dẫn đi lại, quy trình làm thủ tục khám</li>\r\n                        </ul>\r\n                        <p>Trong khi khám</p>\r\n                        <ul>\r\n                            <li>Hỗ trợ giải quyết các vướng mắc trong khi khám</li>\r\n                            <li>Hỗ trợ người bệnh những yêu cầu nảy sinh</li>\r\n                        </ul>\r\n                        <p>Sau khi khám</p>\r\n                        <ul>\r\n                            <li>Ghi nhận ý kiến của bệnh nhân sau khám</li>\r\n                            <li>Hỗ trợ giải đáp, làm rõ những vấn đề chuyên môn</li>\r\n                            <li>Bảo vệ quyền lợi của bệnh nhân khi đi khám</li>\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FooterContent);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport * as actions from '../../../store/actions';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport { getSpecialtyByIdServices } from '../../../services/patientServices';\r\nimport DetailDoctor from '../Doctor/DetailDoctor';\r\nimport Select from 'react-select';\r\nimport { getAllCodeServices } from '../../../services/userServices';\r\n\r\nimport './DetailSpecialty.scss';\r\nimport FooterContent from '../../HomePage/FooterContent';\r\n\r\nclass DetailSpecialty extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            introSpecialty: '',\r\n            backgroundImage: '',\r\n            nameSpecialty: '',\r\n            doctors: [],\r\n            listProvince: [],\r\n            specialtyId: '',\r\n            selectedProvinceId: '',\r\n            moreDetail: false,\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { match } = this.props;\r\n        if (match && match.params && match.params.id) {\r\n            let specialtyId = match.params.id;\r\n            let responseSpecialty = await getSpecialtyByIdServices(specialtyId, 'ALL');\r\n            let listProvinceResponse = await getAllCodeServices('PROVINCE');\r\n            this.setState({\r\n                specialtyId: specialtyId,\r\n                introSpecialty: responseSpecialty.data.descriptionHtml,\r\n                backgroundImage: responseSpecialty.data.image,\r\n                nameSpecialty: responseSpecialty.data.name,\r\n                doctors: responseSpecialty.data.doctor_infor,\r\n                listProvince: this.buildInputSelect(listProvinceResponse.data),\r\n            });\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.languageRedux !== this.props.languageRedux) {\r\n            this.setState({\r\n                listProvince: this.buildInputSelect(this.state.listProvince),\r\n            });\r\n        }\r\n    }\r\n\r\n    buildInputSelect = (data) => {\r\n        let result = [];\r\n        data.unshift({ keyMap: 'ALL', valueVi: 'Toàn quốc', valueEn: 'Nationwide' });\r\n        if (data && data.length > 0) {\r\n            result = data.map((item, index) => {\r\n                let object = {};\r\n\r\n                object.label = this.props.languageRedux === LANGUAGES.VI ? item.valueVi : item.valueEn;\r\n                object.value = item.keyMap;\r\n\r\n                return object;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    handleChange = async (selectedProvince) => {\r\n        let { specialtyId } = this.state;\r\n        let provinceId = selectedProvince.value;\r\n        if (specialtyId) {\r\n            let responseSpecialty = await getSpecialtyByIdServices(specialtyId, provinceId);\r\n            this.setState({\r\n                selectedProvinceId: provinceId,\r\n                doctors: responseSpecialty.data.doctor_infor,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClickMore = () => {\r\n        this.setState({\r\n            moreDetail: !this.state.moreDetail,\r\n        });\r\n    };\r\n    render() {\r\n        let { introSpecialty, backgroundImage, doctors, listProvince, moreDetail } = this.state;\r\n\r\n        return (\r\n            <div className=\"detail-specialty-wrapper\">\r\n                {/* <HomeHeader /> */}\r\n                <div className=\"detail-specialty-container\">\r\n                    <div className=\"header-intro\">\r\n                        <div className=\"header-image\">\r\n                            <img src={backgroundImage} alt=\"img\"></img>\r\n                        </div>\r\n                        <div className=\"header-text coverArea\">\r\n                            <div\r\n                                className={!moreDetail ? `detail-specialty more-detail-specialty` : 'detail-specialty'}\r\n                                dangerouslySetInnerHTML={{ __html: introSpecialty }}\r\n                            ></div>\r\n                            <div className=\"btn-more\" onClick={() => this.handleClickMore()}>\r\n                                {!moreDetail ? (\r\n                                    <FormattedMessage id=\"patient.doctor.more\" />\r\n                                ) : (\r\n                                    <FormattedMessage id=\"patient.doctor.hide\" />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"doctors-container coverArea\">\r\n                        <div className=\"location\">\r\n                            <div className=\"box-select-province\">\r\n                                <Select\r\n                                    placeholder=\"Toàn quốc\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                    options={listProvince}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"doctors\">\r\n                            {doctors &&\r\n                                doctors.length > 0 &&\r\n                                doctors.map((item) => {\r\n                                    return (\r\n                                        <div className=\"sec-doctor\" key={item.doctorId}>\r\n                                            <div className=\"right\">\r\n                                                <DetailDoctor\r\n                                                    className=\"item\"\r\n                                                    doctorId={item.doctorId}\r\n                                                    typeStyle=\"specialty\"\r\n                                                    isComponentChild\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                        </div>\r\n                        <FooterContent />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        detailDoctorRedux: state.doctor.detailDoctor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getDetailDoctorRedux: (id) => dispatch(actions.getDetailDoctor(id)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { getDetailClinicByIdServices } from '../../../services/patientServices';\r\nimport { MdAddLocation } from 'react-icons/md';\r\nimport DetailDoctor from '../../Patient/Doctor/DetailDoctor';\r\nimport { BsLightbulbFill } from 'react-icons/bs';\r\n\r\nimport './DetailClinic.scss';\r\nimport FooterContent from '../../HomePage/FooterContent';\r\n\r\nclass DetailSpecialty extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clinicData: {},\r\n            doctors: [],\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { match } = this.props;\r\n        if (match && match.params && match.params.id) {\r\n            let clinicId = match.params.id;\r\n            let response = await getDetailClinicByIdServices(clinicId);\r\n            if (response && response.errorCode === 0) {\r\n                this.setState({\r\n                    clinicData: response.data,\r\n                    doctors: response.data.doctors,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.languageRedux !== this.props.languageRedux) {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { clinicData, doctors } = this.state;\r\n        return (\r\n            <div className=\"detail-clinic-wrapper position-loading\">\r\n                {/* <HomeHeader /> */}\r\n                <div className=\"detail-clinic-container\">\r\n                    <div className=\"detail-clinic-header\">\r\n                        <div className=\"clinic-header coverArea\">\r\n                            <div\r\n                                className=\"clinic-image\"\r\n                                style={{ backgroundImage: `url(${clinicData.imageClinic})` }}\r\n                            ></div>\r\n                            <div className=\"clinic-intro\">\r\n                                <div\r\n                                    className=\"image-logo\"\r\n                                    style={{ backgroundImage: `url(${clinicData.imageLogo})` }}\r\n                                ></div>\r\n                                <div className=\"intro\">\r\n                                    <h1>{clinicData.nameClinic}</h1>\r\n                                    <p>\r\n                                        <MdAddLocation />\r\n                                        <span>{clinicData.addressClinic}</span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"intro-bookingCare coverArea\">\r\n                        <div className=\"icon\">\r\n                            <BsLightbulbFill />\r\n                        </div>\r\n                        <h4>\r\n                            BookingCare là Nền tảng Y tế chăm sóc sức khỏe toàn diện hàng đầu Việt Nam kết nối người\r\n                            dùng với trên 150 bệnh viện - phòng khám uy tín, hơn 1,000 bác sĩ chuyên khoa giỏi và hàng\r\n                            nghìn dịch vụ, sản phẩm y tế chất lượng cao.\r\n                        </h4>\r\n                    </div>\r\n                    <div\r\n                        className=\"detail-clinic coverArea\"\r\n                        dangerouslySetInnerHTML={{ __html: clinicData.descriptionHtml }}\r\n                    ></div>\r\n                    {doctors?.length > 0 && (\r\n                        <div className=\"doctors-container coverArea\">\r\n                            <h4 className=\"title-doctors\">Bác sĩ</h4>\r\n                            <div className=\"doctors\">\r\n                                {doctors &&\r\n                                    doctors.length > 0 &&\r\n                                    doctors.map((item) => {\r\n                                        return (\r\n                                            <div className=\"sec-doctor\" key={item.doctorId}>\r\n                                                <div className=\"right\">\r\n                                                    <DetailDoctor\r\n                                                        className=\"item\"\r\n                                                        doctorId={item.doctorId}\r\n                                                        typeStyle=\"specialty\"\r\n                                                        isComponentChild\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"coverArea\">\r\n                        <FooterContent />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        detailDoctorRedux: state.doctor.detailDoctor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getDetailDoctorRedux: (id) => dispatch(actions.getDetailDoctor(id)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { getHandbookServices } from '../../../services/patientServices';\r\nimport { BsLightbulbFill } from 'react-icons/bs';\r\nimport moment from 'moment';\r\nimport { convertKeyToValue } from '../../../utils';\r\nimport { getAllCodeServices } from '../../../services/userServices';\r\n\r\nimport './DetailHandbook.scss';\r\n\r\nclass DetailHandbook extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handbookData: {},\r\n            keyForm: [],\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { match } = this.props;\r\n        if (match && match.params && match.params.id) {\r\n            let handbookId = match.params.id;\r\n            let response = await getHandbookServices(handbookId);\r\n            let PositionRes = await getAllCodeServices('position');\r\n            if (response && response.errorCode === 0) {\r\n                this.setState({\r\n                    handbookData: response.data,\r\n                    keyForm: PositionRes?.data,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    componentDidUpdate() {}\r\n\r\n    render() {\r\n        let { handbookData, keyForm } = this.state;\r\n        let positionSender = '';\r\n        let nameSender = '';\r\n        let advisers = '';\r\n        if (handbookData && handbookData?.adviserData) {\r\n            positionSender = convertKeyToValue(handbookData?.senderData?.position, keyForm);\r\n            nameSender = `${handbookData?.senderData?.firstName} ${handbookData?.senderData?.lastName}`;\r\n            advisers = handbookData?.adviserData\r\n                .map((item) => {\r\n                    let position = convertKeyToValue(item?.position, keyForm) || 'Bác sĩ';\r\n                    return `${position} ${item?.firstName} ${item?.lastName}`;\r\n                })\r\n                .join(';');\r\n        }\r\n        return (\r\n            <div className=\"detail-clinic-wrapper\">\r\n                {/* <HomeHeader /> */}\r\n                <div className=\"handbook-container coverArea\">\r\n                    <div className=\"handbook-wrapper\">\r\n                        <h1 className=\"handbook-title\">{handbookData?.title}</h1>\r\n                        <div className=\"handbook-detail-info\">\r\n                            <li>Nhóm tác giả:&nbsp;{handbookData?.authors}</li>\r\n                            <li>Người kiểm duyệt:&nbsp;{`${positionSender} ${nameSender}`}</li>\r\n                            <li>Cố vấn y khoa:&nbsp;{advisers}</li>\r\n                            <li>Xuất bản:&nbsp; {moment(handbookData?.createdAt).format('LL')},</li>\r\n                            <li>\r\n                                Cập nhật lần cuối:&nbsp;\r\n                                {moment(handbookData?.updatedAt).format('LL')}\r\n                            </li>\r\n                        </div>\r\n\r\n                        <div className=\"intro-bookingCare \">\r\n                            <div className=\"icon\">\r\n                                <BsLightbulbFill />\r\n                            </div>\r\n                            <h4>\r\n                                BookingCare là Nền tảng Y tế chăm sóc sức khỏe toàn diện hàng đầu Việt Nam kết nối người\r\n                                dùng với trên 150 bệnh viện - phòng khám uy tín, hơn 1,000 bác sĩ chuyên khoa giỏi và\r\n                                hàng nghìn dịch vụ, sản phẩm y tế chất lượng cao.\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"image-handbook\">\r\n                            <img src={handbookData?.image} alt=\"img\"></img>\r\n                        </div>\r\n                        <div\r\n                            className=\"detail-clinic\"\r\n                            dangerouslySetInnerHTML={{ __html: handbookData.contentHtml }}\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        detailDoctorRedux: state.doctor.detailDoctor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getDetailDoctorRedux: (id) => dispatch(actions.getDetailDoctor(id)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailHandbook);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { getNewsServices } from '../../../services/patientServices';\r\nimport { BsLightbulbFill } from 'react-icons/bs';\r\nimport { convertKeyToValue } from '../../../utils';\r\nimport { getAllCodeServices } from '../../../services/userServices';\r\n\r\nimport moment from 'moment';\r\n\r\nimport './DetailNews.scss';\r\n\r\nclass DetailNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newsData: {},\r\n            keyForm: [],\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let { match } = this.props;\r\n\r\n        if (match && match.params && match.params.id) {\r\n            let newsId = match.params.id;\r\n            let response = await getNewsServices(newsId);\r\n            let PositionRes = await getAllCodeServices('position');\r\n            if (response && response.errorCode === 0) {\r\n                this.setState({\r\n                    newsData: response.data,\r\n                    keyForm: PositionRes?.data,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.languageRedux !== this.props.languageRedux) {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { newsData, keyForm } = this.state;\r\n        let positionSender = '';\r\n        let nameSender = '';\r\n        let advisers = '';\r\n        if (newsData && newsData?.adviserData) {\r\n            positionSender = convertKeyToValue(newsData?.senderDataNews?.position, keyForm);\r\n            nameSender = `${newsData?.senderDataNews?.firstName} ${newsData?.senderDataNews?.lastName}`;\r\n            advisers = newsData?.adviserData\r\n                .map((item) => {\r\n                    let position = convertKeyToValue(item?.position, keyForm) || 'Bác sĩ';\r\n                    return `${position} ${item?.firstName} ${item?.lastName}`;\r\n                })\r\n                .join(';');\r\n        }\r\n        return (\r\n            <div className=\"detail-clinic-wrapper\">\r\n                {/* <HomeHeader /> */}\r\n                <div className=\"handbook-container coverArea\">\r\n                    <div className=\"handbook-wrapper\">\r\n                        <h1 className=\"handbook-title\">{newsData?.title}</h1>\r\n                        <div className=\"handbook-detail-info\">\r\n                            <li>Nhóm tác giả:&nbsp;{newsData?.authors}</li>\r\n                            <li>Người kiểm duyệt:&nbsp;{`${positionSender} ${nameSender}`}</li>\r\n                            <li>Cố vấn y khoa:&nbsp;{advisers}</li>\r\n                            <li>Xuất bản:&nbsp; {moment(newsData?.createdAt).format('LL')},</li>\r\n                            <li>\r\n                                Cập nhật lần cuối:&nbsp;\r\n                                {moment(newsData?.updatedAt).format('LL')}\r\n                            </li>\r\n                        </div>\r\n                        <h2 className=\"news-topic\">{newsData?.topic}</h2>\r\n\r\n                        <div className=\"intro-bookingCare \">\r\n                            <div className=\"icon\">\r\n                                <BsLightbulbFill />\r\n                            </div>\r\n                            <h4>\r\n                                BookingCare là Nền tảng Y tế chăm sóc sức khỏe toàn diện hàng đầu Việt Nam kết nối người\r\n                                dùng với trên 150 bệnh viện - phòng khám uy tín, hơn 1,000 bác sĩ chuyên khoa giỏi và\r\n                                hàng nghìn dịch vụ, sản phẩm y tế chất lượng cao.\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"image-handbook\">\r\n                            <img src={newsData?.image} alt=\"img\"></img>\r\n                        </div>\r\n                        <div className=\"detail-clinic\" dangerouslySetInnerHTML={{ __html: newsData.contentHtml }}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        detailDoctorRedux: state.doctor.detailDoctor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getDetailDoctorRedux: (id) => dispatch(actions.getDetailDoctor(id)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailNews);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions';\r\nimport { BiUserCircle } from 'react-icons/bi';\r\nimport './DetailUser.scss';\r\n\r\nclass DetailUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataUser: {},\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        await this.props.getDetailUserRedux();\r\n        this.setState({\r\n            dataUser: this.props.detailUserRedux,\r\n        });\r\n    }\r\n    async componentDidUpdate(prevProps) {\r\n        if (prevProps.detailUserRedux !== this.props.detailUserRedux) {\r\n            this.setState({\r\n                dataUser: this.props.detailUserRedux,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { dataUser } = this.state;\r\n        return (\r\n            <div className=\"detail-user-container\">\r\n                <div className=\"wrapper-detail-user coverArea\">\r\n                    <div className=\"content-detail-user\">\r\n                        <div className=\"avatar\">\r\n                            {dataUser?.image ? (\r\n                                <img className=\"image-avatar\" src={dataUser?.image} alt=\"img\"></img>\r\n                            ) : (\r\n                                <BiUserCircle className=\"icon\" />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"main-content coverArea\">\r\n                            <div className=\"name-user\">\r\n                                <p>{`${dataUser?.firstName} ${dataUser?.lastName}`}</p>\r\n                            </div>\r\n                            <p className=\"role-user\">\r\n                                <p>{dataUser?.roleData?.valueVi}</p>\r\n                            </p>\r\n                            <div className=\"more-infor coverArea\">\r\n                                <p>{`Họ tên: ${dataUser?.firstName} ${dataUser?.lastName}`}</p>\r\n                                <p>{`Email: ${dataUser?.email} `}</p>\r\n                                <p>{`Giới tính: ${dataUser?.genderData?.valueVi}` || 'Chưa xác định'}</p>\r\n                                <p>{`Số điện thoại: ${dataUser?.phoneNumber}` || 'Chưa xác định'}</p>\r\n                                <p>{`Địa chỉ: ${dataUser?.address}` || 'Chưa xác định'}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n        detailUserRedux: state.user.detailUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getDetailUserRedux: () => dispatch(actions.getDetailUser()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailUser);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport './VerifyBooking.scss';\r\nimport { verifyBookingAppointmentServices } from '../../services/patientServices';\r\nimport { FaRegCheckCircle, FaExclamationCircle } from 'react-icons/fa';\r\n\r\nclass VerifyBooking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusVerify: false,\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let location = this.props.location;\r\n        if (location && location.search) {\r\n            let urlParams = new URLSearchParams(location.search);\r\n            let uuid = urlParams.get('uuid');\r\n            let doctorId = urlParams.get('doctorId');\r\n            let response = await verifyBookingAppointmentServices({\r\n                uuid,\r\n                doctorId,\r\n            });\r\n            if (response && response.errorCode === 0) {\r\n                this.setState({\r\n                    statusVerify: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.languageRedux !== this.props.languageRedux) {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { statusVerify } = this.state;\r\n        return (\r\n            <div className=\"verify-wrapper\">\r\n                {/* <HomeHeader></HomeHeader> */}\r\n                <div className=\"verify-container\">\r\n                    <div className=\"verify\">\r\n                        <div className=\"title\">\r\n                            {statusVerify ? (\r\n                                <h2>\r\n                                    <FaRegCheckCircle /> <FormattedMessage id=\"patient.verify.title-verify-success\" />\r\n                                </h2>\r\n                            ) : (\r\n                                <h2>\r\n                                    <FaExclamationCircle /> <FormattedMessage id=\"patient.verify.title-verify-fail\" />\r\n                                </h2>\r\n                            )}\r\n                        </div>\r\n                        <a href={process.env.REACT_APP_URL}>\r\n                            <FormattedMessage id=\"patient.verify.home\" />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyBooking);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES } from '../../../../utils';\r\nimport './Menu.scss';\r\n\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {}\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n        }\r\n    }\r\n    //render các item MenuItem:\r\n    render() {\r\n        const { itemCurrent, languageRedux } = this.props;\r\n\r\n        return (\r\n            <>\r\n                {itemCurrent &&\r\n                    itemCurrent.data &&\r\n                    itemCurrent.data.length > 0 &&\r\n                    itemCurrent.data.map((item, index) => {\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                className={item.title_en === 'Logout' ? `item item-last-child` : `item`}\r\n                                onClick={() => this.props.handleClickItem(item)}\r\n                            >\r\n                                <span className=\"icon_item\">{item.icon}</span>\r\n                                <p>{languageRedux === LANGUAGES.VI ? item.title_vi : item.title_en}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        languageRedux: state.app.language,\r\n        userInfo: state.user.userInfo,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuItem);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Menu.scss';\r\n\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {}\r\n    //render các item MenuItem:\r\n    render() {\r\n        const { title, onBack, iconBack } = this.props;\r\n\r\n        return (\r\n            <div className=\"header-menu\" onClick={() => onBack()}>\r\n                <span className=\"icon_back\">{iconBack}</span>\r\n                <span>{title}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuItem);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../../store/actions';\r\nimport MenuItem from './MenuItem';\r\nimport MenuHeader from './MenuHeader';\r\nimport { LANGUAGES } from '../../../../utils';\r\n\r\nimport { IoChevronBack } from 'react-icons/io5';\r\nimport { changeLanguageApp } from '../../../../store/actions';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport './Menu.scss';\r\n\r\nimport HeadlessTippy from '@tippyjs/react/headless';\r\n\r\nimport 'tippy.js/dist/tippy.css'; // optional\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [],\r\n            re_render: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            history: [{ data: this.props.items }],\r\n        });\r\n    }\r\n\r\n    handleClickItem = async (item) => {\r\n        let { history } = this.state;\r\n\r\n        let isParent = !_.isEmpty(item);\r\n\r\n        if (isParent && item?.children) {\r\n            this.setState({\r\n                history: [...this.state.history, item.children],\r\n            });\r\n        }\r\n        if (item.codeLanguage) {\r\n            this.props.changeLanguageRedux(item.codeLanguage);\r\n            this.setState({\r\n                history: history.slice(0, history.length - 1),\r\n            });\r\n        }\r\n        if (item.action) {\r\n            let actions = item.action;\r\n            await this.props[actions]();\r\n            this.props.history.push(item.to);\r\n        } else if (item.to) {\r\n            this.props.history.push(item.to);\r\n        }\r\n    };\r\n    handleClickBack = () => {\r\n        let { history } = this.state;\r\n        this.setState({\r\n            history: history.slice(0, history.length - 1),\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { language, children, items = [] } = this.props;\r\n        let { history } = this.state;\r\n        let current = history[history.length - 1];\r\n\r\n        return (\r\n            <>\r\n                <HeadlessTippy\r\n                    delay={[0, 500]}\r\n                    interactive // cho tuong tac vs Headlesstippy box\r\n                    placement=\"bottom-end\"\r\n                    // visible // luon hien\r\n                    // onHide={handleResetToFirstPage}\r\n                    render={() => (\r\n                        <div className=\"menu-list\">\r\n                            {history.length > 1 && (\r\n                                <MenuHeader\r\n                                    title={language === LANGUAGES.VI ? current.title_vi : current.title_en}\r\n                                    onBack={this.handleClickBack}\r\n                                    iconBack={<IoChevronBack />}\r\n                                />\r\n                            )}\r\n                            <MenuItem items={items} itemCurrent={current} handleClickItem={this.handleClickItem} />\r\n                        </div>\r\n                    )}\r\n                >\r\n                    {children}\r\n                </HeadlessTippy>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeLanguageRedux: (language) => dispatch(changeLanguageApp(language)),\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Menu));\r\n","import { IoInformationCircleOutline, IoLanguageOutline, IoLogOutOutline } from 'react-icons/io5';\r\nimport { MdManageAccounts } from 'react-icons/md';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nexport const dataMenuUser = [\r\n    {\r\n        title_vi: 'Thông tin',\r\n        title_en: 'Information',\r\n        to: '/detail-user',\r\n        icon: <IoInformationCircleOutline />,\r\n    },\r\n    {\r\n        title_vi: 'Ngôn ngữ',\r\n        title_en: 'Language',\r\n        icon: <IoLanguageOutline />,\r\n\r\n        children: {\r\n            title_vi: 'Ngôn ngữ',\r\n            title_en: 'Language',\r\n            data: [\r\n                {\r\n                    title_vi: 'Việt Nam',\r\n                    title_en: 'Viet Nam',\r\n\r\n                    codeLanguage: 'vi',\r\n                },\r\n                {\r\n                    title_vi: 'Tiếng Anh',\r\n                    title_en: 'English',\r\n\r\n                    codeLanguage: 'en',\r\n                },\r\n            ],\r\n        },\r\n    },\r\n\r\n    {\r\n        title_vi: 'Quản lý',\r\n        title_en: 'Manage',\r\n        to: '/system/welcome',\r\n        icon: <MdManageAccounts />,\r\n        role: ['R1', 'R2'],\r\n    },\r\n    {\r\n        title_vi: 'Đăng xuất',\r\n        title_en: 'Logout',\r\n        to: '/login',\r\n        icon: <IoLogOutOutline />,\r\n        action: 'processLogout',\r\n    },\r\n];\r\n\r\nexport const dataHomeHeader = [\r\n    {\r\n        title: <FormattedMessage id=\"home-header.specialty\" />,\r\n        sub: <FormattedMessage id=\"home-header.searchDoctor\" />,\r\n        modal: 'modalSpecialty',\r\n    },\r\n    {\r\n        title: <FormattedMessage id=\"home-header.health-facility\" />,\r\n        sub: <FormattedMessage id=\"home-header.select-room\" />,\r\n        modal: 'modalClinic',\r\n    },\r\n    {\r\n        title: <FormattedMessage id=\"home-header.doctor\" />,\r\n        sub: <FormattedMessage id=\"home-header.select-doctor\" />,\r\n        modal: 'modalDoctor',\r\n    },\r\n    {\r\n        title: <FormattedMessage id=\"home-header.fee\" />,\r\n        sub: <FormattedMessage id=\"home-header.check-health\" />,\r\n        modal: 'modalHealth',\r\n    },\r\n];\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { changeLanguageApp } from '../../../store/actions';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './HomeHeader.scss';\r\n\r\nimport { IoLogIn } from 'react-icons/io5';\r\nimport { BiUserCircle } from 'react-icons/bi';\r\nimport Menu from '../Sections/Menu/Menu';\r\nimport Tippy from '@tippyjs/react';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport { dataMenuUser, dataHomeHeader } from '../../../dataLocal/dataMenu';\r\n\r\nimport 'tippy.js/dist/tippy.css'; // optional\r\n\r\nclass HomeHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    handleChangeLanguage = (language) => {\r\n        if (language === 'VN') {\r\n            this.props.changeLanguageRedux(LANGUAGES.EN);\r\n            return;\r\n        }\r\n        if (language === 'EN') {\r\n            this.props.changeLanguageRedux(LANGUAGES.VI);\r\n            return;\r\n        }\r\n        return;\r\n    };\r\n    componentDidMount() {}\r\n    executeScroll = () => this.myRef.current.scrollIntoView();\r\n    handleClick = (modal) => {\r\n        this.props.toggleModel(modal);\r\n    };\r\n    render() {\r\n        let { isLoggedIn } = this.props;\r\n\r\n        return (\r\n            <div className=\"home-header-container\">\r\n                <div className=\"home-header-content w80\">\r\n                    <div className=\"left-content\">\r\n                        <Link to=\"/home\">\r\n                            <div className=\"header-logo\"></div>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"center-content\">\r\n                        {dataHomeHeader.length > 0 &&\r\n                            dataHomeHeader.map((item, index) => {\r\n                                return (\r\n                                    <div\r\n                                        className=\"child-content\"\r\n                                        key={index}\r\n                                        onClick={() => this.handleClick(item.modal)}\r\n                                    >\r\n                                        <div className=\"title-child\">{item.title}</div>\r\n                                        <div className=\"title-sub\">{item.sub}</div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                    </div>\r\n                    <div className=\"right-content\">\r\n                        {!isLoggedIn && (\r\n                            <Tippy delay={[0, 100]} content=\"Ngôn ngữ\">\r\n                                <div className=\"language\">\r\n                                    <span\r\n                                        onClick={(e) => {\r\n                                            this.handleChangeLanguage(e.target.innerText);\r\n                                        }}\r\n                                    >\r\n                                        <FormattedMessage id=\"language\" />\r\n                                    </span>\r\n                                </div>\r\n                            </Tippy>\r\n                        )}\r\n\r\n                        {!isLoggedIn ? (\r\n                            <Link to=\"/login\">\r\n                                <div className=\"login\" text=\"Login\">\r\n                                    <IoLogIn />\r\n                                    <span>\r\n                                        <FormattedMessage id=\"home-header.login\" />\r\n                                    </span>\r\n                                </div>\r\n                            </Link>\r\n                        ) : (\r\n                            <Menu items={dataMenuUser}>\r\n                                <div className=\"btn_user\">\r\n                                    <BiUserCircle className=\"icon_user\" />\r\n                                </div>\r\n                            </Menu>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n        listDataSpecialtyRedux: state.patient.listDataSpecialty,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeLanguageRedux: (language) => dispatch(changeLanguageApp(language)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeHeader));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    IoLocationSharp,\r\n    IoCheckmarkSharp,\r\n    IoPhonePortraitOutline,\r\n    IoLogoFacebook,\r\n    IoLogoYoutube,\r\n} from 'react-icons/io5';\r\nimport './Footer.scss';\r\n\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    componentDidMount() {}\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.languageRedux !== this.props.languageRedux) {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"footer-container\">\r\n                <div className=\"w60\">\r\n                    <div className=\"footer-up\">\r\n                        <div className=\"d-flex flex-column h-100\">\r\n                            <footer className=\"w-100 py-4 flex-shrink-0\">\r\n                                <div className=\"container-footer py-4\">\r\n                                    <div className=\"row gy-4 gx-5\">\r\n                                        <div className=\"infor-footer col-lg-5 col-md-6\">\r\n                                            <div\r\n                                                className=\"image-footer\"\r\n                                                style={{\r\n                                                    backgroundImage: `url(https://bookingcare.vn/assets/icon/bookingcare-2020.svg)`,\r\n                                                }}\r\n                                            ></div>\r\n                                            <h2 className=\"company\">Công ty Cổ phần Công nghệ BookingCare</h2>\r\n                                            <div className=\"address\">\r\n                                                <IoLocationSharp /> 28 Thành Thái, Dịch Vọng, Cầu Giấy, Hà Nội\r\n                                            </div>\r\n                                            <div className=\"dk\">\r\n                                                <IoCheckmarkSharp /> ĐKKD số: 0106790291. Sở KHĐT Hà Nội cấp ngày\r\n                                                16/03/2015\r\n                                            </div>\r\n                                            <div className=\"iso\"></div>\r\n                                        </div>\r\n\r\n                                        <div className=\"contact-footer col-lg-4 col-md-6\">\r\n                                            <a>\r\n                                                <li>Liên hệ hợp tác</li>\r\n                                            </a>\r\n                                            <a>\r\n                                                <li>Gói chuyển đổi số doanh nghiệp</li>\r\n                                            </a>\r\n                                            <a>\r\n                                                <li>Tuyển dụng</li>\r\n                                            </a>\r\n                                            <a>\r\n                                                <li>Câu hỏi thường gặp</li>\r\n                                            </a>\r\n                                            <a>\r\n                                                <li>Điều khoản sử dụng</li>\r\n                                            </a>\r\n                                            <a>\r\n                                                <li>Chính sách Bảo mật</li>\r\n                                            </a>\r\n                                        </div>\r\n\r\n                                        <div className=\"branch-footer col-lg-3 col-md-6\">\r\n                                            <div className=\"branch\">\r\n                                                <h4>Trụ sở tại Hà Nội</h4>\r\n                                                <p>28 Thành Thái, Dịch Vọng, Cầu Giấy, Hà Nội</p>\r\n                                            </div>\r\n                                            <div className=\"branch\">\r\n                                                <h4>Văn phòng tại TP Hồ Chí Minh</h4>\r\n                                                <p>Số 01, Hồ Bá Kiện, Phường 15, Quận 10</p>\r\n                                            </div>\r\n                                            <div className=\"branch\">\r\n                                                <h4>Hỗ trợ khách hàng</h4>\r\n                                                <p>support@bookingcare.vn (7h - 18h)</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"download-app\">\r\n                                        {' '}\r\n                                        <IoPhonePortraitOutline />\r\n                                        <p>\r\n                                            Tải ứng dụng BookingCare cho điện thoại hoặc máy tính bảng: Android\r\n                                            iPhone/iPad Khác\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"footer-down\">\r\n                    <div className=\"w60\">\r\n                        <div className=\"content-footer\">\r\n                            <small>&copy;2022 BookingCare.</small>\r\n                            <span>\r\n                                <IoLogoFacebook className=\"icon-network facebook\" />\r\n                                <IoLogoYoutube className=\"icon-network youtube\" />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        languageRedux: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\r\n","import React from 'react';\r\nimport HomeHeader from '../containers/HomePage/HomeHeader/HomeHeader';\r\nimport Footer from '../containers/HomePage/Sections/Footer';\r\nimport ListSpecialty from '../containers/Patient/Specialty/ListSpecialty';\r\nimport ListClinic from '../containers/Patient/Clinic/ListClinic';\r\nimport ListDoctor from '../containers/Patient/Doctor/ListDoctor';\r\nimport ListHandbook from '../containers/Patient/Handbook/ListHandbook';\r\n\r\nconst withLayoutHome = (WrappedComponent) => {\r\n    return class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                modalSpecialty: false,\r\n                modalClinic: false,\r\n                modalDoctor: false,\r\n                modalHandbook: false,\r\n                modalHealth: false,\r\n            };\r\n        }\r\n        toggleModel = (modal) => {\r\n            this.setState({\r\n                [modal]: !this.state[modal],\r\n            });\r\n        };\r\n        render() {\r\n            let { modalSpecialty, modalClinic, modalDoctor, modalHandbook } = this.state;\r\n\r\n            return (\r\n                <>\r\n                    {modalSpecialty && <ListSpecialty modalSpecialty={modalSpecialty} toggleModel={this.toggleModel} />}\r\n                    {modalClinic && <ListClinic modalClinic={modalClinic} toggleModel={this.toggleModel} />}\r\n                    {modalDoctor && <ListDoctor modalDoctor={modalDoctor} toggleModel={this.toggleModel} />}\r\n                    {modalHandbook && <ListHandbook modalHandbook={modalHandbook} toggleModel={this.toggleModel} />}\r\n                    <div>\r\n                        <HomeHeader toggleModel={this.toggleModel} />\r\n                        <WrappedComponent {...this.props} />\r\n                        <Footer />\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport default withLayoutHome;\r\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { history } from '../redux';\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\nimport { path } from '../utils';\nimport Login from './Auth/Login';\nimport System from '../routes/System';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Doctor from '../routes/Doctor';\nimport { ToastContainer } from 'react-toastify';\nimport CustomScrollbars from '../components/CustomScrollbars';\n\nimport * as actions from '../store/actions';\n\nimport HomePage from './HomePage/HomePage';\n\nimport DetailDoctor from '../containers/Patient/Doctor/DetailDoctor';\nimport DetailSpecialty from '../containers/Patient/Specialty/DetailSpecialty';\nimport DetailClinic from '../containers/Patient/Clinic/DetailClinic';\nimport DetailHandbook from '../containers/Patient/Handbook/DetailHandbook';\nimport DetailNews from '../containers/Patient/News/DetailNews';\nimport DetailUser from '../containers/Patient/DetailUser/DetailUser';\nimport VerifyBooking from '../containers/Patient/VerifyBooking';\n\nimport withLayoutHome from '../hoc/withLayoutHome';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    async componentDidMount() {\n        await this.props.getAllSpecialtyRedux();\n        await this.props.getAllClinicRedux('true');\n        await this.props.getHandbookRedux();\n    }\n    async componentDidUpdate(prevProps) {\n        if (prevProps.listDataSpecialtyRedux !== this.props.listDataSpecialtyRedux) {\n            this.setState({\n                listSpecialty: this.props.listDataSpecialtyRedux,\n            });\n        }\n    }\n\n    toggleModel = (modal) => {\n        this.setState({\n            [modal]: !this.state[modal],\n        });\n    };\n    render() {\n        return (\n            <Fragment>\n                <div className=\"main-container\">\n                    <div className=\"content-container\">\n                        <CustomScrollbars style={{ width: '100%', height: '100vh' }}>\n                            <Router history={history}>\n                                <Switch>\n                                    <Route path={path.HOME} exact component={withLayoutHome(HomePage)} />\n                                    <Route path={path.HOMEPAGE} exact component={withLayoutHome(HomePage)} />\n\n                                    <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\n                                    <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\n                                    <Route path={path.DOCTOR} component={userIsAuthenticated(Doctor)} />\n\n                                    <Route path={path.DETAIL_DOCTOR} component={withLayoutHome(DetailDoctor)} />\n                                    <Route path={path.DETAIL_SPECIALTY} component={withLayoutHome(DetailSpecialty)} />\n                                    <Route path={path.DETAIL_CLINIC} component={withLayoutHome(DetailClinic)} />\n                                    <Route path={path.DETAIL_HANDBOOK} component={withLayoutHome(DetailHandbook)} />\n                                    <Route path={path.DETAIL_NEWS} component={withLayoutHome(DetailNews)} />\n                                    <Route path={path.DETAIL_USER} component={withLayoutHome(DetailUser)} />\n                                    <Route path={path.VERIFY_BOOING} component={withLayoutHome(VerifyBooking)} />\n                                </Switch>\n                            </Router>\n                        </CustomScrollbars>\n                    </div>\n                    <ToastContainer\n                        position=\"top-right\"\n                        autoClose={5000}\n                        hideProgressBar={false}\n                        newestOnTop={false}\n                        closeOnClick\n                        rtl={false}\n                        pauseOnFocusLoss\n                        draggable\n                        pauseOnHover\n                    />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userInfo: state.user.userInfo,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getAllSpecialtyRedux: () => dispatch(actions.getAllSpecialty()),\n        getHandbookRedux: () => dispatch(actions.getHandbookRedux()),\n        getAllClinicRedux: (isGetImage) => dispatch(actions.getAllClinicRedux(isGetImage)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\n\nimport '@formatjs/intl-pluralrules/polyfill';\nimport '@formatjs/intl-pluralrules/locale-data/en';\nimport '@formatjs/intl-pluralrules/locale-data/vi';\n\nimport '@formatjs/intl-relativetimeformat/polyfill';\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\nimport './globalStyle.scss';\n\nimport { LanguageUtils } from '../utils';\n\nconst messages = LanguageUtils.getFlattenedMessages();\n\nclass IntlProviderWrapper extends Component {\n    render() {\n        const { children, language } = this.props;\n        return (\n            <IntlProvider locale={language} messages={messages[language]} defaultLocale=\"vi\">\n                {children}\n            </IntlProvider>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        language: state.app.language,\n    };\n};\n\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './styles/styles.scss';\n\nimport App from './containers/App';\nimport IntlProviderWrapper from './hoc/IntlProviderWrapper';\n\nimport { Provider } from 'react-redux';\nimport reduxStore, { persistor } from './redux';\n\nconst renderApp = () => {\n    ReactDOM.render(\n        <Provider store={reduxStore}>\n            <IntlProviderWrapper>\n                <App persistor={persistor} />\n            </IntlProviderWrapper>\n        </Provider>,\n        document.getElementById('root'),\n    );\n};\n\nrenderApp();\n"],"sourceRoot":""}